{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./components/elements/self_link.ts","webpack:///./components/elements/abstract.ts","webpack:///./common/math.ts","webpack:///./components/elements/node_link.ts","webpack:///./algs/constants.ts","webpack:///./algs/expr.ts","webpack:///./algs/shared_utils.ts","webpack:///./algs/eliminate.ts","webpack:///./components/elements/temporary_link.ts","webpack:///./components/tool_bar/tools.ts","webpack:///./algs/data.ts","webpack:///./algs/subset_construct.ts","webpack:///./components/canvas/collide.ts","webpack:///./components/canvas/handlers.ts","webpack:///./components/canvas/canvas.tsx","webpack:///external \"preact\"","webpack:///./components/elements/start_link.ts","webpack:///./components/elements/state_node.ts","webpack:///./components/tool_bar/tool_bar.tsx","webpack:///./components/app.tsx","webpack:///./store/store.ts","webpack:///./types.ts","webpack:///./components/elements/text_utils.ts","webpack:///./index.ts","webpack:///./components/elements/constants.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","SelfLink","node","mouse","anchorAngle","mouseOffsetAngle","text","set_anchor_point","x","y","this","Math","atan2","snap","round","PI","abs","circleX","NODE_RADIUS","cos","circleY","sin","circleRadius","startAngle","endAngle","with_caret","stuff","get_endpoints_and_circle","beginPath","arc","stroke","textX","textY","draw_text","selected","draw_arrow","endX","endY","pos","dx","dy","distance","sqrt","HIT_TARGET_PADDING","DrawableElement","SELECTED_COLOUR","active","ACTIVE_COLOUR","STANDARD_COLOUR","det","a","b","e","f","g","h","NodeLink","nodeA","nodeB","lineAngleAdjust","parallelPart","perpendicularPart","scale","SNAP_TO_PADDING","midX","midY","start","closest_point_on_circle","end","x1","y1","x2","y2","x3","y3","bx","by","anchor","get_anchor_point","circle","isReversed","reverseScale","radius","hasCircle","startX","startY","moveTo","lineTo","textAngle","length","percent","angle","temp","OPS","INFIX_CHAR_OPS","BIN_OPS","FUNCTIONS_OPS","L_NON_CONCAT_OPS","R_NON_CONCAT_OPS","OP_PRECEDENCE","to_RPN","lst","replace","convert_latex_shortcuts","last","includes","push","slice","locator","score","splice","_parse_tokens","output","op_stack","token","top","next","pop","console","error","inplace_union","el","to_symbol","StateNode","StartLink","get_start_point","JSON","stringify","rand_pos","canvas","get_canvas","canvas_el","random","width","CANVAS_PADDING","height","_eliminate","nodes","links","isAcceptState","incoming_links","outgoing_links","self_links","new_links","link","self_reg","self_options","_","split","join","in_link","j","out_link","new_link","to_safe_str","map","trim","strip_parenthesis","RegExp","some","indexOf","deletable","node_link_data","Map","similar","set","values","minimize_links","rpn","charAt","warn","substring","TemporaryLink","from","to","_CanvasTools","state","selected_object","at_cursor","cursor","obj_at_last_pos","set_mouse_start","mouse_down_pos","last_pos","new_node","obj","active_objects","undefined","obj_at_mouse_down","start_pos","end_pos","temp_link","should_update","should_delete","FAData","state_names","transitions","starting_state","accepting_states","node_to_index","curr","options","option","opt","index","new_nodes","index_to_node","entries","start_node","transition","end_node","shallow_dests","get_equivalents","shallow_delta","stack","Array","isArray","dest","result","subset_construct","fa","load","is_deterministic","dfa","name_to_index","names","state_stack","dfa_start_set","_set_to_string","start_state_names","sort","origin","from_name","from_state_transitions","keys","deep_delta","to_name","has","add_transition","_subset_alg","create_elements","replace_elements","arr","object_at","get_state","contains_point","_CanvasHandler","sync_canvas_coordinates","mutate","Tools","update_select","down","CanvasTool","DRAW_LINK","update_temp_link","moving","button","MouseButton","LEFT","left_click","RIGHT","right_click","end_temp_link","preventDefault","drag","toggle_accept_state","draw_node","DRAW_NODE","DRAW_ACCEPT","ELIMINATE","eliminate","tools","update_object_at_cursor","to_canvas_space","Canvas","createRef","window","clearInterval","caret_interval","setState","caret_visible","ctx","zone","view_zone","setTransform","zoom","draw_using","getContext","selected_zone","handlers","set_default_canvas","ref","current","onmousedown","mouse_down","onmousemove","mouse_move","onmouseup","mouse_up","ondblclick","dbl_click","oncontextmenu","prevent_default","subscribe","access","draw","unsubscribe","reinit_caret","id","CANVAS_SIZE","setInterval","caret_function","view","rect","getBoundingClientRect","element_space","clientX","clientY","current_link","clearRect","save","translate","lineWidth","fillStyle","strokeStyle","curr_colour","restore","Component","require","deltaX","deltaY","get_endpoints","mouseOffsetX","mouseOffsetY","ToolBar","style","Tool","tooltip","icon","tool_mode","POINTER","props","onClick","mutate_if_true","curr_tool","App","restore_backup","href","_canvas","_state","last_tool","_subscribers","_subscriber_map","component","subbed_keys","_undo_stack","func","save_undo_redo","push_update","force_update","str","canvas_to_string","backup","localStorage","save_backup","will_update","subscriber","storage","getItem","next_state","string_to_canvas","json","parse","backupNode","backupLink","type","backup_node","backup_link","CanvasAction","greek_letter_names","original_text","angle_or_null","is_selected","font","measure_text","cornerPointX","cornerPointY","slide","pow","advancedFillText","fillText","document","hasFocus","fill","measureText","String","fromCharCode","toLowerCase","onkeydown","delete_element","onkeyup"],"mappings":"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","file":"ssr-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"qVkA\");\n","import { FSMContext, Point2D, SelfLinkCircle } from \"../../types\";\r\nimport { DrawableElement } from \"./abstract\";\r\nimport { HIT_TARGET_PADDING, NODE_RADIUS } from \"./constants\";\r\nimport { StateNode } from \"./state_node\";\r\nimport { draw_arrow, draw_text } from \"./text_utils\";\r\n\r\n/** A circular link connecting a state to itself. */\r\nexport class SelfLink extends DrawableElement {\r\n\tpublic node: StateNode;\r\n\tpublic text: string;\r\n\tpublic anchorAngle: number;\r\n\tprivate mouseOffsetAngle: number;\r\n\r\n\tconstructor(node: StateNode, mouse?: Point2D) {\r\n\t\tsuper();\r\n\t\tthis.node = node;\r\n\t\tthis.anchorAngle = 0;\r\n\t\tthis.mouseOffsetAngle = 0;\r\n\t\tthis.text = '';\r\n\r\n\t\tif (mouse) {\r\n\t\t\tthis.set_anchor_point(mouse.x, mouse.y);\r\n\t\t}\r\n\t}\r\n\r\n\tset_mouse_start(x: number, y: number) {\r\n\t\tthis.mouseOffsetAngle = this.anchorAngle - Math.atan2(y - this.node.y, x - this.node.x);\r\n\t};\r\n\r\n\tset_anchor_point(x: number, y: number) {\r\n\t\tthis.anchorAngle = Math.atan2(y - this.node.y, x - this.node.x) + this.mouseOffsetAngle;\r\n\t\t// snap to 90 degrees\r\n\t\tconst snap = Math.round(this.anchorAngle / (Math.PI / 2)) * (Math.PI / 2);\r\n\t\tif (Math.abs(this.anchorAngle - snap) < 0.1) this.anchorAngle = snap;\r\n\t\t// keep in the range -pi to pi so our containsPoint() function always works\r\n\t\tif (this.anchorAngle < -Math.PI) this.anchorAngle += 2 * Math.PI;\r\n\t\tif (this.anchorAngle > Math.PI) this.anchorAngle -= 2 * Math.PI;\r\n\t};\r\n\r\n\tprivate get_endpoints_and_circle(): SelfLinkCircle {\r\n\t\tconst circleX = this.node.x + 1.5 * NODE_RADIUS * Math.cos(this.anchorAngle);\r\n\t\tconst circleY = this.node.y + 1.5 * NODE_RADIUS * Math.sin(this.anchorAngle);\r\n\t\tconst circleRadius = 0.75 * NODE_RADIUS;\r\n\t\tconst startAngle = this.anchorAngle - Math.PI * 0.8;\r\n\t\tconst endAngle = this.anchorAngle + Math.PI * 0.8;\r\n\t\tconst startX = circleX + circleRadius * Math.cos(startAngle);\r\n\t\tconst startY = circleY + circleRadius * Math.sin(startAngle);\r\n\t\tconst endX = circleX + circleRadius * Math.cos(endAngle);\r\n\t\tconst endY = circleY + circleRadius * Math.sin(endAngle);\r\n\t\treturn {\r\n\t\t\t'hasCircle': true,\r\n\t\t\t'startX': startX,\r\n\t\t\t'startY': startY,\r\n\t\t\t'endX': endX,\r\n\t\t\t'endY': endY,\r\n\t\t\t'startAngle': startAngle,\r\n\t\t\t'endAngle': endAngle,\r\n\t\t\t'circleX': circleX,\r\n\t\t\t'circleY': circleY,\r\n\t\t\t'circleRadius': circleRadius\r\n\t\t};\r\n\t}\r\n\r\n\tdraw(c: FSMContext, with_caret: boolean = false) {\r\n\t\tconst stuff = this.get_endpoints_and_circle();\r\n\t\t// draw arc\r\n\t\tc.beginPath();\r\n\t\tc.arc(stuff.circleX, stuff.circleY, stuff.circleRadius, stuff.startAngle, stuff.endAngle, false);\r\n\t\tc.stroke();\r\n\t\t// draw the text on the loop farthest from the node\r\n\t\tconst textX = stuff.circleX + stuff.circleRadius * Math.cos(this.anchorAngle);\r\n\t\tconst textY = stuff.circleY + stuff.circleRadius * Math.sin(this.anchorAngle);\r\n\t\tdraw_text(c, this.text, textX, textY, this.anchorAngle, this.selected, with_caret);\r\n\t\t// draw the head of the arrow\r\n\t\tdraw_arrow(c, stuff.endX, stuff.endY, stuff.endAngle + Math.PI * 0.4);\r\n\t}\r\n\r\n\tcontains_point(pos: Point2D) {\r\n\t\tconst stuff = this.get_endpoints_and_circle();\r\n\t\tconst dx = pos.x - stuff.circleX;\r\n\t\tconst dy = pos.y - stuff.circleY;\r\n\t\tconst distance = Math.sqrt(dx * dx + dy * dy) - stuff.circleRadius;\r\n\t\treturn (Math.abs(distance) < HIT_TARGET_PADDING);\r\n\t}\r\n}","/**\n * Parent class and types of nodes and links.\n */\n\nimport { FSMContext, Point2D } from \"../../types\";\nimport { ACTIVE_COLOUR, SELECTED_COLOUR, STANDARD_COLOUR } from \"./constants\";\nimport { NodeLink } from \"./node_link\";\nimport { SelfLink } from \"./self_link\";\nimport { StartLink } from \"./start_link\";\nimport { StateNode } from \"./state_node\";\nimport { TemporaryLink } from \"./temporary_link\";\n\n/**\n * A canvas element which can be drawn using a canvas context.\n */\nexport abstract class DrawableElement {\n    public selected: boolean = false;\n    public active: boolean = false;\n    public text: string = '';\n\n    abstract draw(ctx: FSMContext, with_caret: boolean): void;\n\n    public curr_colour(): string {\n        if (this.selected)\n            return SELECTED_COLOUR;\n        if (this.active)\n            return ACTIVE_COLOUR;\n        return STANDARD_COLOUR;\n    }\n\n    abstract contains_point(pos: Point2D): boolean;\n    abstract set_anchor_point(x: number, y: number): void;\n}\n\nexport type FSMLink = NodeLink | SelfLink | StartLink;\nexport type AnyLink = FSMLink | TemporaryLink;\nexport type FSMStringableElement = StateNode | FSMLink;\nexport type FSMElementString = string;\n","/** \r\n * Math utility functions.\r\n * @module\r\n */\r\n\r\n/**\r\n * Return the determinant of\r\n * a b c\r\n * d e f\r\n * g h i\r\n */\r\nfunction det(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) {\r\n\treturn a * e * i + b * f * g + c * d * h - a * f * h - b * d * i - c * e * g;\r\n}\r\n\r\n/**\r\n * Return a circle object given 3 coordinates.\r\n */\r\nexport function circleFromThreePoints(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number) {\r\n\tconst a = det(x1, y1, 1, x2, y2, 1, x3, y3, 1);\r\n\tconst bx = -det(x1 * x1 + y1 * y1, y1, 1, x2 * x2 + y2 * y2, y2, 1, x3 * x3 + y3 * y3, y3, 1);\r\n\tconst by = det(x1 * x1 + y1 * y1, x1, 1, x2 * x2 + y2 * y2, x2, 1, x3 * x3 + y3 * y3, x3, 1);\r\n\tconst c = -det(x1 * x1 + y1 * y1, x1, y1, x2 * x2 + y2 * y2, x2, y2, x3 * x3 + y3 * y3, x3, y3);\r\n\treturn {\r\n\t\t'x': -bx / (2 * a),\r\n\t\t'y': -by / (2 * a),\r\n\t\t'radius': Math.sqrt(bx * bx + by * by - 4 * a * c) / (2 * Math.abs(a))\r\n\t};\r\n}\r\n\r\n/**\r\n * Replace excess zeroes with .'s.\r\n */\r\nexport function fixed(number: number, digits: number) {\r\n\treturn number.toFixed(digits).replace(/0+$/, '').replace(/\\.$/, '');\r\n}\r\n","import { circleFromThreePoints } from \"../../common/math\";\r\nimport { FSMContext, NodeLinkEndPointsAndCircle, Point2D } from \"../../types\";\r\nimport { DrawableElement } from \"./abstract\";\r\nimport { HIT_TARGET_PADDING, NODE_RADIUS, SNAP_TO_PADDING } from \"./constants\";\r\nimport { StateNode } from \"./state_node\";\r\nimport { draw_arrow, draw_text } from \"./text_utils\";\r\n\r\n/** A link connecting 2 nodes. */\r\nexport class NodeLink extends DrawableElement {\r\n\tpublic nodeA: StateNode;\r\n\tpublic nodeB: StateNode;\r\n\tpublic text: string;\r\n\tpublic lineAngleAdjust: number;\r\n\tpublic parallelPart: number;\r\n\tpublic perpendicularPart: number;\r\n\r\n\tconstructor(a: StateNode, b: StateNode) {\r\n\t\tsuper();\r\n\t\tthis.nodeA = a;\r\n\t\tthis.nodeB = b;\r\n\t\tthis.text = '';\r\n\t\tthis.lineAngleAdjust = 0; // value to add to textAngle when link is straight line\r\n\r\n\t\t// make anchor point relative to the locations of nodeA and nodeB\r\n\t\tthis.parallelPart = 0.5; // percentage from nodeA to nodeB\r\n\t\tthis.perpendicularPart = 0; // pixels from line between nodeA and nodeB\r\n\t}\r\n\r\n\tget_anchor_point(): Point2D {\r\n\t\tconst dx = this.nodeB.x - this.nodeA.x;\r\n\t\tconst dy = this.nodeB.y - this.nodeA.y;\r\n\t\tconst scale = Math.sqrt(dx * dx + dy * dy);\r\n\t\treturn {\r\n\t\t\t'x': this.nodeA.x + dx * this.parallelPart - dy * this.perpendicularPart / scale,\r\n\t\t\t'y': this.nodeA.y + dy * this.parallelPart + dx * this.perpendicularPart / scale\r\n\t\t};\r\n\t};\r\n\r\n\tset_anchor_point(x: number, y: number) {\r\n\t\tconst dx = this.nodeB.x - this.nodeA.x;\r\n\t\tconst dy = this.nodeB.y - this.nodeA.y;\r\n\t\tconst scale = Math.sqrt(dx * dx + dy * dy);\r\n\t\tthis.parallelPart = (dx * (x - this.nodeA.x) + dy * (y - this.nodeA.y)) / (scale * scale);\r\n\t\tthis.perpendicularPart = (dx * (y - this.nodeA.y) - dy * (x - this.nodeA.x)) / scale;\r\n\t\t// snap to a straight line\r\n\t\tif (this.parallelPart > 0 && this.parallelPart < 1 && Math.abs(this.perpendicularPart) < SNAP_TO_PADDING) {\r\n\t\t\tthis.lineAngleAdjust = +(this.perpendicularPart < 0) * Math.PI;\r\n\t\t\tthis.perpendicularPart = 0;\r\n\t\t}\r\n\t};\r\n\r\n\tprivate get_endpoints_and_circle(): NodeLinkEndPointsAndCircle {\r\n\t\tif (this.perpendicularPart == 0) {\r\n\t\t\tconst midX = (this.nodeA.x + this.nodeB.x) / 2;\r\n\t\t\tconst midY = (this.nodeA.y + this.nodeB.y) / 2;\r\n\t\t\tconst start = this.nodeA.closest_point_on_circle(midX, midY);\r\n\t\t\tconst end = this.nodeB.closest_point_on_circle(midX, midY);\r\n\t\t\treturn {\r\n\t\t\t\t'hasCircle': false,\r\n\t\t\t\t'startX': start.x,\r\n\t\t\t\t'startY': start.y,\r\n\t\t\t\t'endX': end.x,\r\n\t\t\t\t'endY': end.y,\r\n\t\t\t};\r\n\t\t}\r\n\t\tconst anchor = this.get_anchor_point();\r\n\t\tconst circle = circleFromThreePoints(this.nodeA.x, this.nodeA.y, this.nodeB.x, this.nodeB.y, anchor.x, anchor.y);\r\n\t\tconst isReversed = (this.perpendicularPart > 0);\r\n\t\tconst reverseScale = isReversed ? 1 : -1;\r\n\t\tconst startAngle = Math.atan2(this.nodeA.y - circle.y, this.nodeA.x - circle.x) - reverseScale * NODE_RADIUS / circle.radius;\r\n\t\tconst endAngle = Math.atan2(this.nodeB.y - circle.y, this.nodeB.x - circle.x) + reverseScale * NODE_RADIUS / circle.radius;\r\n\t\tconst startX = circle.x + circle.radius * Math.cos(startAngle);\r\n\t\tconst startY = circle.y + circle.radius * Math.sin(startAngle);\r\n\t\tconst endX = circle.x + circle.radius * Math.cos(endAngle);\r\n\t\tconst endY = circle.y + circle.radius * Math.sin(endAngle);\r\n\t\treturn {\r\n\t\t\thasCircle: true,\r\n\t\t\tstartX: startX,\r\n\t\t\tstartY: startY,\r\n\t\t\tendX: endX,\r\n\t\t\tendY: endY,\r\n\t\t\tstartAngle: startAngle,\r\n\t\t\tendAngle: endAngle,\r\n\t\t\tcircleX: circle.x,\r\n\t\t\tcircleY: circle.y,\r\n\t\t\tcircleRadius: circle.radius,\r\n\t\t\treverseScale: reverseScale,\r\n\t\t\tisReversed: isReversed,\r\n\t\t};\r\n\t};\r\n\r\n\tdraw(c: FSMContext, with_caret: boolean = false) {\r\n\t\t\r\n\t\tconst stuff = this.get_endpoints_and_circle();\r\n\t\t// draw arc\r\n\t\tc.beginPath();\r\n\t\tif (stuff.hasCircle) {\r\n\t\t\tc.arc(stuff.circleX, stuff.circleY, stuff.circleRadius, stuff.startAngle, stuff.endAngle, stuff.isReversed);\r\n\t\t} else {\r\n\t\t\tc.moveTo(stuff.startX, stuff.startY);\r\n\t\t\tc.lineTo(stuff.endX, stuff.endY);\r\n\t\t}\r\n\t\tc.stroke();\r\n\t\t// draw the head of the arrow\r\n\t\tif (stuff.hasCircle) {\r\n\t\t\tdraw_arrow(c, stuff.endX, stuff.endY, stuff.endAngle - stuff.reverseScale * (Math.PI / 2));\r\n\t\t} else {\r\n\t\t\tdraw_arrow(c, stuff.endX, stuff.endY, Math.atan2(stuff.endY - stuff.startY, stuff.endX - stuff.startX));\r\n\t\t}\r\n\t\t// draw the text\r\n\t\tif (stuff.hasCircle) {\r\n\t\t\tlet startAngle = stuff.startAngle;\r\n\t\t\tlet endAngle = stuff.endAngle;\r\n\t\t\tif (endAngle < startAngle) {\r\n\t\t\t\tendAngle += Math.PI * 2;\r\n\t\t\t}\r\n\t\t\tconst textAngle = (startAngle + endAngle) / 2 + +stuff.isReversed * Math.PI;\r\n\t\t\tconst textX = stuff.circleX + stuff.circleRadius * Math.cos(textAngle);\r\n\t\t\tconst textY = stuff.circleY + stuff.circleRadius * Math.sin(textAngle);\r\n\t\t\tdraw_text(c, this.text, textX, textY, textAngle, this.selected, with_caret);\r\n\t\t} else {\r\n\t\t\tconst textX = (stuff.startX + stuff.endX) / 2;\r\n\t\t\tconst textY = (stuff.startY + stuff.endY) / 2;\r\n\t\t\tconst textAngle = Math.atan2(stuff.endX - stuff.startX, stuff.startY - stuff.endY);\r\n\t\t\tdraw_text(c, this.text, textX, textY, textAngle + this.lineAngleAdjust, this.selected, with_caret);\r\n\t\t}\r\n\t};\r\n\r\n\tcontains_point(pos: Point2D) {\r\n\t\tconst x = pos.x;\r\n\t\tconst y = pos.y;\r\n\t\tconst stuff = this.get_endpoints_and_circle();\r\n\t\tif (stuff.hasCircle) {\r\n\t\t\tconst dx = x - stuff.circleX;\r\n\t\t\tconst dy = y - stuff.circleY;\r\n\t\t\tconst distance = Math.sqrt(dx * dx + dy * dy) - stuff.circleRadius;\r\n\t\t\tif (Math.abs(distance) < HIT_TARGET_PADDING) {\r\n\t\t\t\tlet angle = Math.atan2(dy, dx);\r\n\t\t\t\tlet startAngle = stuff.startAngle;\r\n\t\t\t\tlet endAngle = stuff.endAngle;\r\n\t\t\t\tif (stuff.isReversed) {\r\n\t\t\t\t\tconst temp = startAngle;\r\n\t\t\t\t\tstartAngle = endAngle;\r\n\t\t\t\t\tendAngle = temp;\r\n\t\t\t\t}\r\n\t\t\t\tif (endAngle < startAngle) {\r\n\t\t\t\t\tendAngle += Math.PI * 2;\r\n\t\t\t\t}\r\n\t\t\t\tif (angle < startAngle) {\r\n\t\t\t\t\tangle += Math.PI * 2;\r\n\t\t\t\t} else if (angle > endAngle) {\r\n\t\t\t\t\tangle -= Math.PI * 2;\r\n\t\t\t\t}\r\n\t\t\t\treturn (angle > startAngle && angle < endAngle);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst dx = stuff.endX - stuff.startX;\r\n\t\t\tconst dy = stuff.endY - stuff.startY;\r\n\t\t\tconst length = Math.sqrt(dx * dx + dy * dy);\r\n\t\t\tconst percent = (dx * (x - stuff.startX) + dy * (y - stuff.startY)) / (length * length);\r\n\t\t\tconst distance = (dx * (y - stuff.startY) - dy * (x - stuff.startX)) / length;\r\n\t\t\treturn (percent > 0 && percent < 1 && Math.abs(distance) < HIT_TARGET_PADDING);\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n}","/**\n * Various constants for parsing regular expressions.\n */\n\n/** Internal operators. */\nexport const OPS = {\n    CONCAT: \"*&*\",\n    KLEIN: \"*\",\n    OR: \"+\",\n    OPEN_LEFT: \"(\",\n    CLOSE_RIGHT: \")\",\n}\n\n/** Operators which already follow infix notation. */\nexport const INFIX_CHAR_OPS = [OPS.OR, OPS.OPEN_LEFT, OPS.CLOSE_RIGHT];\n/** Standard operators which can be recognized in user inputted strings. */\nexport const STANDARD_CHAR_OPS = [OPS.KLEIN, OPS.OR, OPS.OPEN_LEFT, OPS.CLOSE_RIGHT];\n/** Binary operators. */\nexport const BIN_OPS = [OPS.CONCAT, OPS.OR];\n/** Operators which should be recognized as function. */\nexport const FUNCTIONS_OPS = [OPS.KLEIN];\n/** Operators which should not be concatenated from the left side. */\nexport const L_NON_CONCAT_OPS = [OPS.OPEN_LEFT, OPS.OR, OPS.CONCAT, OPS.KLEIN];\n/** Operators which should not be concatenated from the right side. */\nexport const R_NON_CONCAT_OPS = [OPS.CLOSE_RIGHT, OPS.OR, OPS.CONCAT];\n\n/** Operator precedence lookup. Higher precedence is a higher number.\n * \n * \\* > concatenation > +\n */\nexport const OP_PRECEDENCE = {\n    [OPS.KLEIN]: 8,\n    [OPS.CONCAT]: 4,\n    [OPS.OR]: 2,\n}\n\n/** Epsilon empty string character. */\nexport const EPSILON = '\\\\epsilon';","/**\n * Regex parsing and utilities.\n */\n\nimport { convert_latex_shortcuts } from \"../components/elements/text_utils\";\nimport { BIN_OPS, FUNCTIONS_OPS, INFIX_CHAR_OPS, L_NON_CONCAT_OPS, OPS, OP_PRECEDENCE, R_NON_CONCAT_OPS } from \"./constants\";\n\n\n/**\n * Convert string to RPN stack.\n * Using https://en.wikipedia.org/wiki/Shunting-yard_algorithm.\n */\nexport function to_RPN(s: string) {\n    const lst = _parse_tokens(s);\n    const output: string[] = [];\n    const op_stack: string[] = [];\n\n    for (let i = 0; i < lst.length; i++) {\n        const token: string = lst[i];\n\n\n        if (token == OPS.KLEIN) {\n            // Function case.\n            op_stack.push(token);\n\n        } else if (BIN_OPS.includes(token)) {\n            // Binary operands.\n            while (op_stack.length > 0) {\n                let top = op_stack[op_stack.length - 1];\n\n                if (top != OPS.OPEN_LEFT && OP_PRECEDENCE[top] >= OP_PRECEDENCE[token]) {\n                    const next = op_stack.pop();\n                    if (next != null) output.push(next);\n                } else break;\n            }\n\n            op_stack.push(token);\n        } else if (token == OPS.OPEN_LEFT) {\n            // (\n            op_stack.push(token);\n        } else if (token == OPS.CLOSE_RIGHT) {\n            // )\n            while (op_stack.length > 0) {\n                let top = op_stack[op_stack.length - 1];\n\n                if (top != OPS.OPEN_LEFT) {\n                    const next = op_stack.pop();\n                    if (next != null) output.push(next);\n                } else break;\n            }\n\n            if (op_stack.length == 0)\n                console.error('The operator stack is empty, fix the parentheses.');\n\n            op_stack.pop();\n\n            if (op_stack.length > 0 && FUNCTIONS_OPS.includes(op_stack[length - 1])) {\n                const next = op_stack.pop();\n                if (next != null) output.push(next);\n            }\n        } else {\n            output.push(token);\n        }\n\n    }\n\n    let top = op_stack.pop();\n    while (top != null) {\n        output.push(top);\n        top = op_stack.pop();\n    }\n\n    return output;\n}\n\n/**\n * Convert string to token list.\n */\nfunction _parse_tokens(s: string) {\n    // Add explicity brackets to a* single character expressions.\n    s = s.replace(/(\\w)\\*/g, '($1)*');\n    s = convert_latex_shortcuts(s);\n    const lst: string[] = [];\n    let last = 0;\n    let i = 0;\n\n    while (i < s.length) {\n        if (INFIX_CHAR_OPS.includes(s[i])) {\n            if (last != i)\n                lst.push(s.slice(last, i));\n            last = i + 1;\n            lst.push(s[i]);\n        } else if (s[i] == OPS.KLEIN) {\n            // Reverse order as * (operand)\n            let locator = lst.length - 1;\n            let score = 0;\n\n            // Find where to insert *\n            while (locator >= 0) {\n                if (lst[locator] == OPS.CLOSE_RIGHT)\n                    score++;\n                else if (lst[locator] == OPS.OPEN_LEFT)\n                    score--;\n\n                if (score == 0)\n                    break;\n\n                locator--;\n            }\n            // Insert *\n            lst.splice(locator, 0, s[i]);\n\n            last = i + 1;\n        }\n\n        i++;\n    }\n\n    // Add remaining chars.\n    if (last != i)\n        lst.push(s.slice(last));\n\n    // Insert concatenation operators.\n    i = lst.length - 1;\n    while (i > 0) {\n        // Left is not: (x  +x  &x  *x\n        // Right is not: x)  x+  x&\n        // but x(  )x  *x allowed.\n        if (!L_NON_CONCAT_OPS.includes(lst[i - 1]) && !R_NON_CONCAT_OPS.includes(lst[i])) {\n            lst.splice(i, 0, OPS.CONCAT);\n        }\n\n        i--;\n    }\n\n    return lst;\n}","/**\n * General purpose utilities for managing node data.\n */\n\nimport { FSMElementString, FSMStringableElement } from \"../components/elements/abstract\";\nimport { StateNode } from \"../components/elements/state_node\";\nimport { NodeLink } from \"../components/elements/node_link\";\nimport { StartLink } from \"../components/elements/start_link\";\nimport { get_canvas } from \"../store/store\";\nimport { Point2D } from \"../types\";\nimport { CANVAS_PADDING } from \"../components/elements/constants\";\n\n/**\n * Return the union of A and B.\n */\nexport function union<T>(a: T[], b: T[]) {\n    const set: T[] = [];\n\n    inplace_union(set, a);\n    inplace_union(set, b);\n\n    return set;\n}\n\n/**\n * Add B's elements to A, as a set.\n * Mutates A.\n */\nexport function inplace_union<T>(a: T[], b: T[]) {\n    for (const el of b)\n        if (!a.includes(el)) a.push(el);\n}\n\n/**\n * Return a unique string for each node or link.\n */\nexport function to_symbol(node: FSMStringableElement): FSMElementString {\n    if (node instanceof StateNode)\n        return `${node.text}:${node.x},${node.y}`;\n    else if (node instanceof NodeLink)\n        return `${to_symbol(node.nodeA)}->${to_symbol(node.nodeB)}:${node.text}${node.get_anchor_point().x},${node.get_anchor_point().y}`;\n    else if (node instanceof StartLink)\n        return `${to_symbol(node.node)}:${node.get_start_point().x},${node.get_start_point().y}`;\n    return JSON.stringify(node);\n}\n\n/**\n * Get a random position object.\n */\nexport function rand_pos(): Point2D {\n    const canvas = get_canvas();\n    if (canvas != null) {\n        const canvas_el = canvas.el;\n        if (canvas_el != null) {\n            return {\n                x: Math.random() * (canvas_el.width - 2 * CANVAS_PADDING) + CANVAS_PADDING,\n                y: Math.random() * (canvas_el.height - 2 * CANVAS_PADDING) + CANVAS_PADDING\n            }\n        }\n    }\n    return { x: 0, y: 0 };\n}","/**\n * State elimination of nodes.\n */\nimport { AnyLink, FSMElementString, FSMLink } from \"../components/elements/abstract\";\nimport { NodeLink } from \"../components/elements/node_link\";\nimport { SelfLink } from \"../components/elements/self_link\";\nimport { StartLink } from \"../components/elements/start_link\";\nimport { StateNode } from \"../components/elements/state_node\";\nimport { EPSILON, OPS } from \"./constants\";\nimport { to_RPN } from \"./expr\";\nimport { to_symbol } from \"./shared_utils\";\n\n/**\n * Eliminate node from nodes.\n * Replace transitions with a partial regex.\n * \n * @return Whether any states were eliminated.\n */\nexport function _eliminate(node: StateNode, nodes: StateNode[], links: AnyLink[]): boolean {\n\n    if (node.isAcceptState)\n        return false;\n\n    const incoming_links = [];\n    const outgoing_links = [];\n    const self_links = [];\n\n    const new_links: FSMLink[] = [];\n\n    // Find and categorize links.\n    for (let i = 0; i < links.length; i++) {\n        const link = links[i];\n\n        if (link instanceof SelfLink && link.node == node)\n            self_links.push(link);\n        else if (link instanceof NodeLink) {\n            if (link.nodeA == node)\n                outgoing_links.push(link);\n            else if (link.nodeB == node)\n                incoming_links.push(link);\n        } else if (link instanceof StartLink) {\n            if (link.node == node)\n                return false;\n        }\n    }\n\n    // Create self pathway regex.\n    let self_reg = '';\n    if (self_links.length > 0) {\n        const self_options = [];\n        for (let _ = 0; _ < self_links.length; _++) {\n            self_options.push(...self_links[_].text.split(','));\n        }\n        if (self_options.length == 1 && self_options[0].length == 1)\n            self_reg = `${self_options[0]}*`\n        else if (self_options.length > 0)\n            self_reg = `(${self_options.join('+')})*`\n    }\n\n    // Create new links, 1 for each pair of incoming and outgoing links.\n    for (let i = 0; i < incoming_links.length; i++) {\n        const in_link = incoming_links[i];\n\n        for (let j = 0; j < outgoing_links.length; j++) {\n            const out_link = outgoing_links[j];\n\n            let new_link;\n            let text;\n\n            text = `${to_safe_str(in_link.text.split(',').map(s => s.trim()).join('+'))}${self_reg}${to_safe_str(out_link.text.split(',').map(s => s.trim()).join('+'))}`;\n\n            if (in_link.nodeA == out_link.nodeB)\n                new_link = new SelfLink(in_link.nodeA);\n            else\n                new_link = new NodeLink(in_link.nodeA, out_link.nodeB);\n\n            text = strip_parenthesis(remove_epsilon(text));\n            new_link.text = text;\n            links.push(new_link);\n        }\n    }\n\n    // Delete old links and node.\n    let i = links.length;\n    // js moment\n    while (i--)\n        if (incoming_links.some(link => link == links[i]) || outgoing_links.some(link => link == links[i]) || self_links.some(link => link == links[i]))\n            links.splice(i, 1);\n\n    nodes.splice(nodes.indexOf(node), 1);\n\n    for (let i = 0; i < new_links.length; i++) {\n        links.push(new_links[i]);\n    }\n\n    minimize_links(links);\n\n    return true;\n}\n\n/**\n * Remove redundant \\epsilon from the regex string.\n */\nfunction remove_epsilon(s: string) {\n    // xe or x*e or )e case\n    // And\n    // ex or e(\n    return s.replace(new RegExp(`/([)*\\w])(${EPSILON})/g`), '$1')\n        .replace(new RegExp(`/(${EPSILON})([(\\w])/g`), '$2');\n}\n\n/**\n * Minimize redundant links.\n */\nfunction minimize_links(links: AnyLink[]) {\n    const deletable: AnyLink[] = [];\n\n    const node_link_data = new Map<String, (NodeLink | SelfLink)[]>();\n\n    for (let i = 0; i < links.length; i++) {\n        const link = links[i];\n\n        if (link instanceof SelfLink) {\n            let key: FSMElementString = to_symbol(link.node);\n            const similar = node_link_data.get(key);\n\n            if (similar != null)\n                similar.push(link);\n            else\n                node_link_data.set(key, [link]);\n        } else if (link instanceof NodeLink) {\n            let key: FSMElementString = to_symbol(link.nodeA) + to_symbol(link.nodeB);\n            const similar = node_link_data.get(key);\n\n            if (similar != null)\n                similar.push(link);\n            else\n                node_link_data.set(key, [link]);\n        }\n    }\n\n    // Squish and mark as deletable.\n    for (const similar of node_link_data.values()) {\n        if (similar.length > 1) {\n            similar[0].text = `${similar.map\n                (l => l.text)\n                .join('+')}`;\n\n            for (let i = 1; i < similar.length; i++)\n                deletable.push(similar[i]);\n        }\n    }\n\n    let i = links.length;\n    // js moment\n    while (i--)\n        if (deletable.includes(links[i]))\n            links.splice(i, 1);\n}\n\n/**\n * Take a regular expression string and add parenthesis if needed.\n * Parentheses are needed for when there is an exposed binary operator +.\n */\nfunction to_safe_str(s: string) {\n    if (s.includes('+')) {\n        let rpn = to_RPN(s);\n        // Has first level binary operator (+) which needs parentheses.\n        if (rpn.length > 0 && rpn[rpn.length - 1] == OPS.OR) {\n            // Has parentheses already, ex: (x+x)\n            // Must check if those are needed.\n            if (s.charAt(0) == OPS.OPEN_LEFT && s.charAt(s.length - 1) == OPS.CLOSE_RIGHT) {\n                // Check if the parenthesis are needed.\n                // By checking validity of x[1:-1] without them.\n                let score = 0;\n                for (let i = 1; i < s.length - 1; i++) {\n                    if (s[i] == OPS.OPEN_LEFT)\n                        score++;\n                    else if (s[i] == OPS.CLOSE_RIGHT)\n                        score--;\n\n                    // More closed than expected (counting from the first index), ex: (x+y)+(x+z)\n                    // So return s back immediately.\n                    if (score < 0) return `(${s})`;\n                }\n                // More open that expected (counting from the first index), ex: (()\n                if (score != 0) {\n                    console.warn(`String \"${s}\" has non matching number of parentheses.`);\n                    return s;\n                };\n                // Otherwise, just return s.\n            }\n            // Add brackets, ex: x+y --> (x+y) \n            else return `(${s})`;\n        }\n    }\n\n    // All other operators are safely concatenated.\n    return s;\n}\n\n/**\n * Remove unnecessary outer parenthesis if needed.\n */\nfunction strip_parenthesis(s: string) {\n    if (s.length > 2 && s.charAt(0) == OPS.OPEN_LEFT && s.charAt(s.length - 1) == OPS.CLOSE_RIGHT) {\n        // Check if the parenthesis are needed.\n        // By checking validity of x[1:-1] without them.\n        let score = 0;\n        for (let i = 1; i < s.length - 1; i++) {\n            if (s[i] == OPS.OPEN_LEFT)\n                score++;\n            else if (s[i] == OPS.CLOSE_RIGHT)\n                score--;\n\n            // More closed than expected (counting from the first index), ex: (x+y)+(x+z)\n            // So return s back immediately.\n            if (score < 0) return s;\n        }\n        // More open that expected (counting from the first index), ex: (()\n        if (score != 0) {\n            return s;\n        };\n        // Otherwise, return s[1:-1] without those parenthesis as they were not needed.\n        return s.substring(1, s.length - 1);\n    }\n    return s;\n}\n\n// {\"nodes\":[{\"x\":124,\"y\":106,\"text\":\"q_0\",\"isAcceptState\":false},{\"x\":366,\"y\":98,\"text\":\"q_1\",\"isAcceptState\":false},{\"x\":609,\"y\":98,\"text\":\"q_2\",\"isAcceptState\":false},{\"x\":685,\"y\":328,\"text\":\"q_3\",\"isAcceptState\":false},{\"x\":557,\"y\":512,\"text\":\"q_4\",\"isAcceptState\":false},{\"x\":358,\"y\":328,\"text\":\"q_5\",\"isAcceptState\":false},{\"x\":150,\"y\":428,\"text\":\"q_6\",\"isAcceptState\":true}],\"links\":[{\"type\":\"Link\",\"nodeA\":0,\"nodeB\":1,\"text\":\"\\\\epsilon\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"SelfLink\",\"node\":1,\"text\":\"0\",\"anchorAngle\":-2.0344439357957027},{\"type\":\"Link\",\"nodeA\":1,\"nodeB\":2,\"text\":\"1\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"Link\",\"nodeA\":1,\"nodeB\":6,\"text\":\"\\\\epsilon\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"Link\",\"nodeA\":5,\"nodeB\":1,\"text\":\"0\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"Link\",\"nodeA\":4,\"nodeB\":6,\"text\":\"\\\\epsilon\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"SelfLink\",\"node\":4,\"text\":\"0,1\",\"anchorAngle\":0.866302262552679},{\"type\":\"Link\",\"nodeA\":5,\"nodeB\":4,\"text\":\"1\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"Link\",\"nodeA\":3,\"nodeB\":5,\"text\":\"0\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"Link\",\"nodeA\":2,\"nodeB\":4,\"text\":\"1\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"Link\",\"nodeA\":2,\"nodeB\":3,\"text\":\"0\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"Link\",\"nodeA\":3,\"nodeB\":4,\"text\":\"1\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0}]}\n\n// {\"nodes\":[{\"x\":166,\"y\":269,\"text\":\"q_0\",\"isAcceptState\":false},{\"x\":315,\"y\":269,\"text\":\"q_1\",\"isAcceptState\":false},{\"x\":485,\"y\":269,\"text\":\"q_2\",\"isAcceptState\":false},{\"x\":676,\"y\":276,\"text\":\"q_3\",\"isAcceptState\":false},{\"x\":585,\"y\":144,\"text\":\"q_5\",\"isAcceptState\":true},{\"x\":158,\"y\":463,\"text\":\"q_4\",\"isAcceptState\":false}],\"links\":[{\"type\":\"StartLink\",\"node\":5,\"text\":\"start\",\"deltaX\":0,\"deltaY\":78},{\"type\":\"Link\",\"nodeA\":5,\"nodeB\":0,\"text\":\"\\\\epsilon\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"Link\",\"nodeA\":2,\"nodeB\":4,\"text\":\"\\\\epsilon\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"Link\",\"nodeA\":3,\"nodeB\":4,\"text\":\"\\\\epsilon\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"Link\",\"nodeA\":1,\"nodeB\":0,\"text\":\"a\",\"lineAngleAdjust\":0,\"parallelPart\":0.44966442953020136,\"perpendicularPart\":-25},{\"type\":\"Link\",\"nodeA\":0,\"nodeB\":1,\"text\":\"a\",\"lineAngleAdjust\":3.141592653589793,\"parallelPart\":0.6174496644295302,\"perpendicularPart\":-28},{\"type\":\"Link\",\"nodeA\":0,\"nodeB\":2,\"text\":\"b\",\"lineAngleAdjust\":3.141592653589793,\"parallelPart\":0.6807205087375884,\"perpendicularPart\":-79.68112458455441},{\"type\":\"Link\",\"nodeA\":1,\"nodeB\":2,\"text\":\"\\\\epsilon\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"Link\",\"nodeA\":3,\"nodeB\":2,\"text\":\"a\",\"lineAngleAdjust\":3.141592653589793,\"parallelPart\":0.37839384167273493,\"perpendicularPart\":-27.283137716577034},{\"type\":\"Link\",\"nodeA\":3,\"nodeB\":1,\"text\":\"a\",\"lineAngleAdjust\":3.141592653589793,\"parallelPart\":0.364309273605891,\"perpendicularPart\":-76.56455478932932},{\"type\":\"Link\",\"nodeA\":2,\"nodeB\":3,\"text\":\"b\",\"lineAngleAdjust\":3.141592653589793,\"parallelPart\":0.6044073364358062,\"perpendicularPart\":-15.241076695359656},{\"type\":\"SelfLink\",\"node\":2,\"text\":\"b\",\"anchorAngle\":-1.5707963267948966}]}\n","import { FSMContext, Point2D } from \"../../types\";\r\nimport { DrawableElement } from \"./abstract\";\r\nimport { draw_arrow } from \"./text_utils\";\r\n\r\n/** An arbitrary link in space. */\r\nexport class TemporaryLink extends DrawableElement {\r\n\tfrom: Point2D;\r\n\tto: Point2D;\r\n\r\n\tconstructor(from: Point2D, to: Point2D) {\r\n\t\tsuper();\r\n\t\tthis.from = from;\r\n\t\tthis.to = to;\r\n\t}\r\n\r\n\tdraw(c: FSMContext, selected: boolean = false) {\r\n\t\t// draw the line\r\n\t\tc.beginPath();\r\n\t\tc.moveTo(this.to.x, this.to.y);\r\n\t\tc.lineTo(this.from.x, this.from.y);\r\n\t\tc.stroke();\r\n\r\n\t\t// draw the head of the arrow\r\n\t\tdraw_arrow(c, this.to.x, this.to.y, Math.atan2(this.to.y - this.from.y, this.to.x - this.from.x));\r\n\t};\r\n\r\n\tcontains_point(pos: Point2D): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tset_anchor_point(x: number, y: number): void { }\r\n}","/**\n * Tool functions for canvas handlers and actions.\n * All tools are functions of the state.\n * \n * @note Move this to a class in the future to avoid dependencies.\n */\n\nimport { _eliminate } from \"../../algs/eliminate\";\nimport { State } from \"../../types\";\nimport { Canvas } from \"../canvas/canvas\";\nimport { NodeLink } from \"../elements/node_link\";\nimport { SelfLink } from \"../elements/self_link\";\nimport { StartLink } from \"../elements/start_link\";\nimport { StateNode } from \"../elements/state_node\";\nimport { TemporaryLink } from \"../elements/temporary_link\";\n\n\nexport class _CanvasTools {\n    private canvas: Canvas;\n\n    constructor(canvas: Canvas) {\n        this.canvas = canvas;\n    }\n\n    // Tools:\n\n    /** Select an object if necessary. */\n    update_select = (state: State) => {\n        // Deselect old object.\n        if (state.selected_object != null) state.selected_object.selected = false;\n\n        // Select the new object if applicable.\n        const at_cursor = this.canvas.cursor.obj_at_last_pos;\n        state.selected_object = at_cursor;\n\n        // Update the selected object's state.\n        if (at_cursor != null) {\n            at_cursor.selected = true;\n\n            if (at_cursor instanceof StateNode || at_cursor instanceof SelfLink)\n                at_cursor.set_mouse_start(this.canvas.cursor.mouse_down_pos.x, this.canvas.cursor.mouse_down_pos.y);\n        }\n\n    }\n\n    /** Draw a new node at the cursor's position and select it. */\n    draw_node = (state: State) => {\n        if (this.canvas.cursor.obj_at_last_pos == null) {\n            const pos = this.canvas.cursor.last_pos;\n\n            const new_node = new StateNode(pos.x, pos.y);\n            new_node.selected = true;\n\n            // Deselect old object.\n            if (state.selected_object != null) state.selected_object.selected = false;\n            state.selected_object = new_node;\n\n            state.nodes.push(new_node);\n        }\n    }\n\n    /** Toggle the selected node's accepting node / vice versa. */\n    toggle_accept_state = (state: State) => {\n        const obj = this.canvas.cursor.obj_at_last_pos;\n        if (obj instanceof StateNode)\n            obj.isAcceptState = !obj.isAcceptState;\n\n        state.selected_object = obj;\n    }\n\n    /** Drag the selected object across the canvas. */\n    drag = (state: State) => {\n        const anchor = this.canvas.cursor.last_pos;\n\n        if (state.active_objects.length > 0) {\n            // Implement group dragging.\n        } else if (state.selected_object != undefined) {\n            state.selected_object.set_anchor_point(anchor.x, anchor.y);\n        }\n    }\n\n    /** Update the temporary link that should be created given the state of the cursor. */\n    update_temp_link = (state: State) => {\n        let temp;\n\n        const start = this.canvas.cursor.obj_at_mouse_down;\n        const end = this.canvas.cursor.obj_at_last_pos;\n        const start_pos = { ... this.canvas.cursor.mouse_down_pos };\n        const end_pos = { ... this.canvas.cursor.last_pos };\n\n        // The link starts and ends at a node.\n        if (start instanceof StateNode && end instanceof StateNode) {\n            if (start == end) {\n                // The links start and ends at the same node.\n                temp = new SelfLink(start);\n                temp.set_mouse_start(start_pos.x, start_pos.y);\n                temp.set_anchor_point(end_pos.x, end_pos.y);\n            } else {\n                // If it ends at a different node, create a regular link.\n                temp = new NodeLink(start, end);\n            }\n\n        } else if (end instanceof StateNode) {\n            temp = new StartLink(end, start_pos);\n        }\n\n        else {\n            // Starting anywhere else, it is a temp link, possibly with a starting node.\n            temp = new TemporaryLink(\n                (start instanceof StateNode)\n                    ? start.closest_point_on_circle(end_pos.x, end_pos.y) :\n                    start_pos,\n                end_pos);\n        }\n\n        state.temp_link = temp;\n    }\n\n    /** Add the currently worked on temporary link to the list of links. */\n    end_temp_link = (state: State) => {\n        if (!(state.temp_link instanceof TemporaryLink)) {\n            state.links.push(state.temp_link!);\n\n            // Select the new link automatically.\n            state.temp_link!.selected = true;\n            if (state.selected_object != null) state.selected_object.selected = false;\n            state.selected_object = state.temp_link;\n        }\n\n        state.temp_link = undefined;\n    }\n\n    /** Eliminate the selected state node. */\n    eliminate = (state: State) => {\n        let should_update = false;\n        const active_objects = [state.selected_object, ...state.active_objects];\n\n        for (const obj of active_objects) {\n            if (obj instanceof StateNode)\n                should_update = should_update || _eliminate(obj, state.nodes, state.links);\n        }\n\n        if (state.selected_object != null) {\n            state.selected_object.selected = false;\n            state.selected_object = undefined;\n        }\n\n        return should_update;\n    }\n\n    // Actions:\n\n    /** Element deletion from model. */\n    delete_element = (state: State) => {\n\n        if (state.selected_object != null) {\n\n            if (state.selected_object instanceof StateNode) {\n                // Delete the node.\n                for (let i = state.nodes.length - 1; i >= 0; i--)\n                    if (state.selected_object == state.nodes[i]) {\n                        state.nodes.splice(i, 1);\n                        break;\n                    }\n\n                // Delete links attached to the node.\n                for (let i = state.links.length - 1; i >= 0; i--) {\n                    const link = state.links[i];\n                    let should_delete = false;\n\n                    if (link instanceof NodeLink)\n                        should_delete = link.nodeA == state.selected_object || link.nodeB == state.selected_object;\n                    else if (link instanceof StartLink || link instanceof SelfLink)\n                        should_delete = link.node == state.selected_object;\n\n                    if (should_delete) state.links.splice(i, 1);\n\n                }\n            } else {\n                // Delete links themselves.\n                for (let i = state.links.length - 1; i >= 0; i--)\n                    if (state.selected_object == state.links[i]) {\n                        state.links.splice(i, 1);\n                        break;\n                    }\n            }\n            state.selected_object = undefined;\n        }\n        return false;\n    }\n}","/**\n * Data objects parsed from the canvas elements.\n */\n\nimport { FSMCanvasState, Point2D } from \"../types\";\nimport { AnyLink, FSMElementString, FSMLink, FSMStringableElement } from \"../components/elements/abstract\";\nimport { NodeLink } from \"../components/elements/node_link\";\nimport { SelfLink } from \"../components/elements/self_link\";\nimport { StartLink } from \"../components/elements/start_link\";\nimport { StateNode } from \"../components/elements/state_node\";\nimport { EPSILON } from \"./constants\";\nimport { inplace_union, rand_pos, to_symbol, union } from \"./shared_utils\";\nimport { force_update } from \"../store/store\";\n\n/**\n * Utility data for FAs. Can be used to test strings,\n * and evaluate the delta function.\n */\nexport class FAData {\n    /** Names of all of the states. */\n    state_names: string[];\n    /** Transitions from the ith state via a string to a list of states. */\n    transitions: Map<number, Map<string, number[]>>;\n    /** Index of starting state. */\n    starting_state: number;\n    /** Index of accepting states. */\n    accepting_states: number[];\n\n    /**\n     * Create an empty FAData.\n     */\n    constructor() {\n        this.state_names = [];\n        this.transitions = new Map();\n        this.starting_state = -1;\n        this.accepting_states = [];\n    }\n    /**\n     * Load states and links from elements into this FAData.\n     * Automatically generate state transitions.\n     */\n    load(nodes: StateNode[], links: AnyLink[]) {\n        // Reset\n        this.state_names = [];\n        this.transitions = new Map();\n        this.starting_state = -1;\n        this.accepting_states = [];\n\n        const node_to_index = new Map<FSMElementString, number>();\n\n        // Get nodes.\n        let curr = 0;\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n\n            node_to_index.set(to_symbol(node), curr);\n            this.state_names.push(node.text);\n\n            if (node.isAcceptState)\n                this.accepting_states.push(curr);\n\n            curr++;\n        }\n\n        // Get links.\n        for (let i = 0; i < links.length; i++) {\n            const link = links[i];\n\n            if (link instanceof NodeLink) {\n                const start = node_to_index.get(to_symbol(link.nodeA));\n                const end = node_to_index.get(to_symbol(link.nodeB));\n                const options = link.text.split(',').map(s => s.trim());\n\n                if (start != null && end != null) {\n                    // Initialize transition map.\n                    let map = this.transitions.get(start);\n                    if (map == null) {\n                        map = new Map<string, number[]>();\n                        this.transitions.set(start, map);\n                    }\n\n                    // Append options.\n                    for (const option of options) {\n                        let opt = map.get(option);\n                        if (opt == null) {\n                            opt = [];\n                            map.set(option, opt);\n                        }\n\n                        opt.push(end);\n                    }\n                }\n            }\n            else if (link instanceof SelfLink) {\n                const start = node_to_index.get(to_symbol(link.node));\n                const end = start;\n                const options = link.text.split(',').map(s => s.trim());\n\n                if (start != null && end != null) {\n                    // Initialize transition map.\n                    let map = this.transitions.get(start);\n                    if (map == null) {\n                        map = new Map<string, number[]>();\n                        this.transitions.set(start, map);\n                    }\n\n                    // Append options.\n                    for (const option of options) {\n                        let opt = map.get(option);\n                        if (opt == null) {\n                            opt = [];\n                            map.set(option, opt);\n                        }\n\n                        opt.push(end);\n                    }\n                }\n            }\n            else if (link instanceof StartLink) {\n                const index = node_to_index.get(to_symbol(link.node));\n                if (index != null) this.starting_state = index;\n            }\n        }\n    }\n\n    /**\n     * Create StateNodes and Links from this FAData.\n     * All elements are created at a random position\n     * in the canvas.\n     */\n    create_elements(): FSMCanvasState {\n        const new_nodes: StateNode[] = [];\n        const new_links: FSMLink[] = [];\n\n        const index_to_node = new Map<number, StateNode>();\n\n        for (let i = 0; i < this.state_names.length; i++) {\n            const pos = rand_pos();\n            const node = new StateNode(pos.x, pos.y);\n            node.text = this.state_names[i];\n            index_to_node.set(i, node);\n\n            if (this.accepting_states.includes(i))\n                node.isAcceptState = true;\n\n            new_nodes.push(node);\n        }\n\n        for (const [start, transitions] of this.transitions.entries()) {\n            const start_node = index_to_node.get(start);\n\n            if (start_node != null) {\n                for (const [transition, ends] of transitions.entries()) {\n                    for (const end of ends) {\n                        const end_node = index_to_node.get(end);\n                        if (end_node != null) {\n                            let link;\n                            if (start == end) {\n                                link = new SelfLink(start_node);\n\n                            } else {\n                                link = new NodeLink(start_node, end_node);\n                                link.perpendicularPart += 100 * Math.random();\n                            }\n\n                            link.text = transition;\n                            new_links.push(link);\n                        }\n                    }\n                }\n            }\n        }\n\n        if (this.starting_state != -1) {\n            const start = index_to_node.get(this.starting_state);\n            if (start != null) {\n                const link = new StartLink(start);\n                const pos = rand_pos();\n                link.set_anchor_point(pos.x, pos.y);\n                link.text = 'start';\n                new_links.push(link);\n            }\n        }\n\n        return {\n            nodes: new_nodes,\n            links: new_links\n        }\n    }\n\n    /**\n     * Add a new transition from an index to another via a transition.\n     */\n    add_transitions(from: number, transition: string, to: number[]) {\n        let map = this.transitions.get(from);\n        if (map == null) {\n            map = new Map<string, number[]>();\n            this.transitions.set(from, map);\n        }\n\n        let opt = map.get(transition);\n        if (opt == null) {\n            opt = [];\n            map.set(transition, opt);\n        }\n\n        inplace_union(opt, to);\n    }\n\n    /**\n     * Add one new transition from an index to another via a transition.\n     */\n    add_transition(from: number, transition: string, to: number) {\n        let map = this.transitions.get(from);\n        if (map == null) {\n            map = new Map<string, number[]>();\n            this.transitions.set(from, map);\n        }\n\n        let opt = map.get(transition);\n        if (opt == null) {\n            opt = [];\n            map.set(transition, opt);\n        }\n\n        if (!opt.includes(to)) opt.push(to);\n    }\n\n    /**\n     * Delta transition for this FA.\n     * \n     * *transition must not be epsilon\n     */\n    deep_delta(state: number, transition: string): number[] {\n        const shallow_dests: number[] = [];\n\n        // Explore each equivalent starting state, and add the destinations.\n        for (const from of this.get_equivalents(state)) {\n            inplace_union(shallow_dests, this.shallow_delta(from, transition));\n        }\n\n        // Return each equivalent destination state.\n        return this.get_equivalents(shallow_dests).slice();\n    }\n\n    /**\n     * Shallow delta function for this FA, ignoring epsilon transitions.\n     */\n    shallow_delta(state: number, transition: string): number[] {\n        let map = this.transitions.get(state);\n        if (map != null) {\n            let opt = map.get(transition);\n            if (opt != null) {\n                return opt.slice();\n            }\n        }\n\n        return [];\n    }\n\n    /**\n     * Return the set of all equivalent states in this fa.\n     * Equivalent states are states reachable via epsilon transitions.\n     * @param {number|number>} state\n     */\n    get_equivalents(state: number | number[]): number[] {\n        // Make a set of the initial states from which to begin the search.\n        if (!Array.isArray(state))\n            state = [state];\n        else\n            state = state.slice();\n\n        const stack = state.slice();\n\n        let top = stack.pop();\n\n        while (top != null) {\n            let destinations = this.shallow_delta(top, EPSILON);\n\n            for (const dest of destinations.values())\n                // The state has not yet been explored, so add it to the stack and the set.\n                if (!state.includes(dest)) stack.push(dest);\n\n            top = stack.pop();\n        }\n\n        return state;\n    }\n\n    /**\n     * Return true if the FA is deterministic.\n     */\n    is_deterministic() {\n        // Check that all transitions are non epsilon, and all transitions are\n        // deterministic (return size of 1 state).\n        for (const trans_map of this.transitions.values()) {\n            for (const [transition, result] of trans_map.entries()) {\n                if (transition == EPSILON || result.length > 1)\n                    return false;\n            }\n        }\n\n        return true;\n    }\n}\n\n/**\n * Utility data for a graph where StateNodes are vertices,\n * links' anchor points are vertices, and edges connect\n * vertices and links as needed.\n * \n * The graph is undirected.\n * \n * Each vertex has a {x, y} position object.\n */\nexport class FSAGraph {\n    private node_to_vert: Map<FSMElementString, number>;\n    private vert_to_node: Map<number, FSMStringableElement>;\n    private vertices: Point2D[];\n    private edges: [number, number][];\n\n    /**\n     * Create an empty FSAGraph.\n     * Modifying the vertices and edges does not modify\n     * the canvas until sync_positions is called.\n     */\n    constructor() {\n        /** Map from canvas element to vertex index. */\n        this.node_to_vert = new Map();\n        /** Map from vertex index to canvas element. */\n        this.vert_to_node = new Map();\n        /** List of vertex position objects. */\n        this.vertices = [];\n        /** List of edge tuples [a, b]. a,b are vertex indices\n         * with a < b always. */\n        this.edges = [];\n    }\n\n    /**\n     * Load states and links from elements into this FSAGraph.\n     */\n    load(nodes: StateNode[], links: AnyLink[]) {\n        this.node_to_vert = new Map();\n        this.vert_to_node = new Map();\n        this.vertices = [];\n        this.edges = [];\n\n        let curr = 0;\n\n        // Append nodes.\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n            this.vertices[curr] = { x: node.x, y: node.y };\n            this.node_to_vert.set(to_symbol(node), curr);\n            this.vert_to_node.set(curr, node);\n            curr++;\n        }\n\n        // Append links.\n        for (let i = 0; i < links.length; i++) {\n            const link = links[i];\n            if (link instanceof NodeLink) {\n                const pos = link.get_anchor_point();\n                this.vertices[curr] = { x: pos.x, y: pos.y };\n                this.node_to_vert.set(to_symbol(link), curr);\n                this.vert_to_node.set(curr, link);\n\n                // Add linking edges.\n                this.edges.push([this.node_to_vert.get(to_symbol(link.nodeA))!, curr]);\n                this.edges.push([this.node_to_vert.get(to_symbol(link.nodeB))!, curr]);\n\n\n                curr++;\n            } else if (link instanceof StartLink) {\n                const pos = link.get_start_point();\n                this.vertices[curr] = { x: pos.x, y: pos.y };\n                this.node_to_vert.set(to_symbol(link), curr);\n                this.vert_to_node.set(curr, link);\n\n                // Only 1 linking edge to StartLinks.\n                this.edges.push([this.node_to_vert.get(to_symbol(link.node))!, curr]);\n\n                curr++;\n            }\n\n        }\n    }\n\n    /**\n     * Update all of the nodes and links referenced by the graph to\n     * match its vertices' positions.\n     */\n    sync_positions() {\n        // Update StateNodes.\n        for (let i = 0; i < this.vertices.length; i++) {\n            /** @type {{x: number, y:number}} */\n            const v: Point2D = this.vertices[i];\n            const node = this.vert_to_node.get(i);\n\n            if (node instanceof StateNode) {\n                node.set_mouse_start(node.x, node.y);\n                node.set_anchor_point(v.x, v.y);\n            } else if (node instanceof Node || node instanceof StartLink) {\n                node.set_anchor_point(v.x, v.y);\n            }\n        }\n\n        force_update(['nodes', 'links']);\n    }\n}","/**\n * Subset construction for converting NFAs to DFAs.\n */\n\nimport { AnyLink } from \"../components/elements/abstract\";\nimport { StateNode } from \"../components/elements/state_node\";\nimport { State } from \"../types\";\nimport { EPSILON } from \"./constants\";\nimport { FAData } from \"./data\";\nimport { inplace_union } from \"./shared_utils\";\n\n\n/**\n * Preform subset construction on the current \n */\nexport function subset_construct(state: State): boolean {\n    const fa = new FAData();\n    const nodes = state.nodes;\n    const links = state.links;\n\n    fa.load(nodes, links);\n\n    if (fa.is_deterministic()) {\n        console.warn('Tried to perform subset construction on a DFA.');\n        return false;\n    } else if (fa.starting_state == -1) {\n        console.warn('FA has no starting state so subset construction failed.');\n        return false;\n    }\n\n    const dfa = _subset_alg(fa);\n    const { nodes: new_nodes, links: new_links } = dfa.create_elements();\n\n    replace_elements(nodes, links, new_nodes, new_links);\n\n    return true;\n}\n\n/**\n * Return a new DFA equivalent to the given FA.\n */\nfunction _subset_alg(fa: FAData) {\n    const dfa = new FAData();\n\n    /** Map of all state strings, ex; '0,2,4' which have\n     * already been explored to index of state in the new DFA. */\n    const name_to_index = new Map<string, number>();\n    /** List of names of all state transitions corresponding\n     * to dfa.state_names. */\n    const names: string[] = [];\n    const state_stack: number[][] = [];\n\n    let curr = 0;\n\n    dfa.starting_state = 0;\n\n    // Initialize the FA and search with the FA's start/equivalent states.\n    // The steps are:\n    // 1. Create the set.\n    // 2. Get it's identifying symbol and assign it an index.\n    // 3. Give it a name and add it to the names array.\n    // 4. Push the state-set to the stack to be explored.\n    // 5. Check if the state should be accepting.\n\n    const dfa_start_set = fa.get_equivalents(fa.starting_state);\n    name_to_index.set(_set_to_string(dfa_start_set), curr);\n    const start_state_names = Array.from(dfa_start_set).map(i => fa.state_names[i]);\n    start_state_names.sort();\n    names.push(`{${start_state_names.join('')}}`);\n    state_stack.push(dfa_start_set);\n\n    if (Array.from(dfa_start_set).some(i => fa.accepting_states.includes(i)))\n        dfa.accepting_states.push(curr);\n    curr++;\n\n    // Iterate over the state stack.\n    let origin = state_stack.pop();\n    while (origin != null) {\n        const from_name = _set_to_string(origin);\n\n        /** The new transitions from the popped state-set. */\n        const transitions = new Map<string, number[]>();\n\n        // Populate transitions.\n        for (const state of origin) {\n            const from_state_transitions = fa.transitions.get(state);\n            if (from_state_transitions != null) {\n                // Iterate over all possible transitions from the state.\n                for (const transition of from_state_transitions.keys()) {\n                    // Excluding epislon transitions.\n                    if (transition != EPSILON) {\n                        let result = transitions.get(transition);\n                        if (result == null) {\n                            result = [];\n                            transitions.set(transition, result);\n                        }\n                        inplace_union(result, fa.deep_delta(state, transition));\n                    }\n                }\n            }\n        }\n\n        // Add transitions map to dfa.\n        for (const [transition, output] of transitions.entries()) {\n            const to_name = _set_to_string(output);\n            const from = name_to_index.get(from_name)!;\n\n            if (name_to_index.has(to_name)) {\n                // Case 1, the state has already been defined.\n                // Add it to the dfa and move on.\n                dfa.add_transition(from, transition, name_to_index.get(to_name)!);\n            } else {\n                // Case 2, the state has not been defined.\n                const to_name = _set_to_string(output);\n\n                // Initialize the new state.\n                name_to_index.set(to_name, curr);\n                const state_names = Array.from(output).map(i => fa.state_names[i]);\n                state_names.sort();\n                names.push(`{${state_names.join(',')}}`);\n                state_stack.push(output);\n\n                // The state is accepting if any constituents are accepting.\n                if (Array.from(output).some(i => fa.accepting_states.includes(i)))\n                    dfa.accepting_states.push(curr);\n\n                // Add the transition. curr is the index of the newly created state.\n                dfa.add_transition(from, transition, curr);\n\n                curr++;\n            }\n\n        }\n\n        origin = state_stack.pop();\n    }\n\n    dfa.state_names = names;\n\n    return dfa;\n}\n\n/**\n * Convert a set to its string representation.\n */\nfunction _set_to_string(set: number[]) {\n    const arr = set.slice();\n    arr.sort();\n    return arr.join(',');\n}\n\n/**\n * Move new nodes and new links into node and links array.\n */\nfunction replace_elements(nodes: StateNode[], links: AnyLink[], new_nodes: StateNode[], new_links: AnyLink[]) {\n    nodes.splice(0, nodes.length);\n    links.splice(0, links.length);\n\n    for (let i = 0; i < new_nodes.length; i++)\n        nodes.push(new_nodes[i]);\n    for (let i = 0; i < new_links.length; i++)\n        links.push(new_links[i]);\n\n}","/** \n * Collision detection of states and nodes.\n */\n\nimport { get_state } from \"../../store/store\";\nimport { Point2D } from \"../../types\";\nimport { DrawableElement } from \"../elements/abstract\";\n\nexport function object_at(pos: Point2D): DrawableElement | undefined {\n    const nodes = get_state('nodes');\n    const links = get_state('links');\n\n    for (let i = 0; i < nodes.length; i++) {\n        if (nodes[i].contains_point(pos)) {\n            return nodes[i];\n        }\n    }\n    for (let i = 0; i < links.length; i++) {\n        if (links[i].contains_point(pos)) {\n            return links[i];\n        }\n    }\n\n    return undefined;\n}","/**\n * Canvas input handlers.\n * \n * @note Move this to a class in the future to avoid dependencies.\n */\n\nimport { subset_construct } from \"../../algs/subset_construct\";\nimport { get_state, mutate } from \"../../store/store\";\nimport { CanvasTool, MouseButton } from \"../../types\";\nimport { StateNode } from \"../elements/state_node\";\nimport { _CanvasTools } from \"../tool_bar/tools\";\nimport { Canvas } from \"./canvas\";\nimport { object_at } from \"./collide\";\n\nexport class _CanvasHandler {\n    private canvas: Canvas;\n    private Tools: _CanvasTools;\n\n    constructor(canvas: Canvas) {\n        this.canvas = canvas;\n        this.Tools = canvas.tools;\n    }\n\n    /** Dummy event handler. */\n    prevent_default(e: Event) {\n        e.preventDefault();\n        return false;\n    }\n\n    /**\n     * Sync up the state's cursor with the given mouse event.\n     * @param canvas_coord Point in canvas element space.\n     */\n    sync_canvas_coordinates(e: MouseEvent, update_object_at_cursor: boolean = false) {\n        this.canvas.cursor.last_pos = this.canvas.to_canvas_space(e);\n        if (update_object_at_cursor) this.canvas.cursor.obj_at_last_pos = object_at(this.canvas.cursor.last_pos);\n    }\n\n    mouse_down = (e: MouseEvent) => {\n        // Update cursor.\n        this.sync_canvas_coordinates(e, true);\n        this.canvas.cursor.mouse_down_pos = { ... this.canvas.cursor.last_pos };\n        this.canvas.cursor.obj_at_mouse_down = this.canvas.cursor.obj_at_last_pos;\n\n        // Select if possible.\n        mutate(['selected_object'], this.Tools.update_select);\n        this.canvas.cursor.down = true;\n\n\n        // Hand over control to tools.\n        switch (get_state('curr_tool')) {\n            case CanvasTool.DRAW_LINK: mutate(['temp_link'], this.Tools.update_temp_link)\n        }\n\n        this.canvas.cursor.moving = false;\n    }\n\n    mouse_up = (e: MouseEvent) => {\n        // Update cursor.\n        this.sync_canvas_coordinates(e);\n        this.canvas.cursor.down = false;\n\n        if (this.canvas.cursor.moving) {\n            // The mouse was being dragged.\n        } else {\n            // The mouse was clicked.\n            if (e.button == MouseButton.LEFT)\n                this.left_click();\n            else if (e.button == MouseButton.RIGHT)\n                this.right_click();\n        }\n\n        // Pop the temp link if it exists.\n        if (get_state('temp_link') != undefined) mutate(['temp_link'], this.Tools.end_temp_link);\n\n        this.canvas.cursor.moving = false;\n\n        e.preventDefault();\n        return false;\n    }\n\n    mouse_move = (e: MouseEvent) => {\n        // Update cursor.\n        this.sync_canvas_coordinates(e, true);\n        this.canvas.cursor.moving = true;\n\n        // Only drag if the mouse was down.\n        if (this.canvas.cursor.down) {\n            this.drag();\n        }\n    }\n\n    dbl_click = (e: MouseEvent) => {\n        // Shortcut for node creation / toggling accept state ported from original.\n        this.sync_canvas_coordinates(e);\n\n        const obj = this.canvas.cursor.obj_at_last_pos;\n\n        if (obj instanceof StateNode)\n            // Toggle accept.\n            mutate(['nodes', 'selected_object'], this.Tools.toggle_accept_state);\n        else\n            // Create node.\n            mutate(['nodes', 'selected_object'], this.Tools.draw_node);\n    }\n\n    private drag = () => {\n        switch (get_state('curr_tool')) {\n            // A link is being drawn.\n            case CanvasTool.DRAW_LINK: { mutate(['temp_link'], this.Tools.update_temp_link); break; }\n            // An object is being dragged.\n            default: mutate(['nodes', 'links'], this.Tools.drag);\n        }\n    }\n\n    private left_click = () => {\n        switch (get_state('curr_tool')) {\n            // A node is being created.\n            case CanvasTool.DRAW_NODE: mutate(['nodes', 'selected_object'], this.Tools.draw_node); break;\n            case CanvasTool.DRAW_ACCEPT: mutate(['nodes', 'selected_object'], this.Tools.toggle_accept_state); break;\n            case CanvasTool.ELIMINATE: mutate(['nodes', 'links', 'selected_object'], this.Tools.eliminate); break;\n        }\n    }\n\n    private right_click = () => {\n        mutate(['nodes', 'links'], subset_construct);\n    }\n}\n\n","/**\n * Canvas component wrapper and event binder.\n * The Canvas retains and updates its own cursor data state.\n */\n\nimport { Component, ComponentChild, createRef, h } from \"preact\";\nimport { access, get_state, set_default_canvas, subscribe, unsubscribe } from \"../../store/store\";\nimport { CanvasRectangle, CanvasViewTransform, FSMContext, Point2D } from \"../../types\";\nimport { DrawableElement } from \"../elements/abstract\";\nimport { CANVAS_SIZE } from \"../elements/constants\";\nimport { _CanvasTools } from \"../tool_bar/tools\";\nimport { _CanvasHandler } from \"./handlers\";\n\n/** State only accessible to the canvas and it's handlers. */\ntype CanvasRenderState = {\n    caret_visible: boolean,\n    view_zone: CanvasViewTransform,\n    selected_zone: CanvasRectangle | undefined,\n};\n\ntype CursorData = {\n    mouse_down_pos: Point2D,\n    obj_at_mouse_down: DrawableElement | undefined,\n    last_pos: Point2D,\n    obj_at_last_pos: DrawableElement | undefined,\n    down: boolean,\n    moving: boolean,\n};\n\nexport class Canvas extends Component<any, CanvasRenderState> {\n    private ref = createRef();\n    public el: HTMLCanvasElement | undefined;\n\n    public ctx: CanvasRenderingContext2D | undefined;\n    public cursor: CursorData;\n\n    private handlers: _CanvasHandler;\n    public tools: _CanvasTools;\n\n    private caret_interval: number = -1;\n\n    constructor() {\n        super();\n        this.state = {\n            caret_visible: false,\n\n            view_zone: {\n                zoom: 1,\n                x: 0,\n                y: 0,\n            },\n            selected_zone: undefined,\n        };\n        this.cursor = {\n            mouse_down_pos: { x: 0, y: 0 },\n            obj_at_mouse_down: undefined,\n            last_pos: { x: 0, y: 0 },\n            obj_at_last_pos: undefined,\n            down: false,\n            moving: false,\n        };\n        this.tools = new _CanvasTools(this);\n        this.handlers = new _CanvasHandler(this);\n    }\n\n    componentDidMount() {\n        set_default_canvas(this);\n        this.el = this.ref.current;\n        this.ctx = this.el!.getContext('2d')!;\n\n        this.el!.onmousedown = this.handlers.mouse_down;\n        this.el!.onmousemove = this.handlers.mouse_move;\n        this.el!.onmouseup = this.handlers.mouse_up;\n        this.el!.ondblclick = this.handlers.dbl_click;\n        this.el!.oncontextmenu = this.handlers.prevent_default;\n\n        subscribe(['nodes', 'links', 'active_objects', 'selected_object', 'temp_link'], this);\n        access(this.draw);\n    }\n\n    componentWillUnmount() {\n        unsubscribe(this);\n    }\n\n    shouldComponentUpdate() {\n        this.reinit_caret();\n        this.draw();\n        return false;\n    }\n\n    render(): ComponentChild {\n        return (\n            <canvas ref={this.ref} id=\"canvas\" width={CANVAS_SIZE.x} height={CANVAS_SIZE.y}>\n                <span>Your browser does not support<br />the HTML5 &lt;canvas&gt; element</span>\n            </canvas>\n        );\n    }\n\n    /**  */\n    reinit_caret() {\n        if (get_state('selected_object') != null && this.caret_interval == -1) {\n            this.caret_interval = window.setInterval(this.caret_function, 300);\n        }\n    }\n\n    private caret_function = () => {\n        if (get_state('selected_object') == null) {\n            window.clearInterval(this.caret_interval);\n            this.caret_interval = -1;\n        } else {\n            this.setState({ caret_visible: !this.state.caret_visible });\n        }\n    }\n\n    /**\n     * Convert a mouse event to it's corresponding point in canvas draw space.\n     */\n    public to_canvas_space(e: MouseEvent): Point2D {\n        const view = this.state.view_zone;\n        const rect = this.el!.getBoundingClientRect();\n        const element_space = {\n            x: e.clientX - rect.x,\n            y: e.clientY - rect.y,\n        };\n\n        // Apply the inverse of the view transform.\n        return {\n            x: (element_space.x - view.x) / view.zoom,\n            y: (element_space.y - view.y) / view.zoom,\n        }\n    }\n\n    /** Draw the canvas using its own 2D context. */\n    draw = () => {\n        if (this.ctx != null) {\n            const zone = this.state.view_zone;\n            this.ctx.setTransform(zone.zoom, 0, 0, zone.zoom, zone.x, zone.y);\n            this.draw_using(this.ctx);\n        } else if (this.el != null) {\n            const ctx = this.el.getContext(\"2d\");\n            if (ctx != null) {\n                this.ctx = ctx;\n                const zone = this.state.view_zone;\n                ctx.setTransform(zone.zoom, 0, 0, zone.zoom, zone.x, zone.y);\n                this.draw_using(ctx);\n            }\n        }\n    }\n\n    draw_using(ctx: FSMContext) {\n        if (this.el != null) {\n            const nodes = get_state(\"nodes\");\n            const links = get_state(\"links\");\n            const selected_object = get_state(\"selected_object\");\n            const current_link = get_state(\"temp_link\");\n\n            ctx.clearRect(0, 0, this.el.width, this.el.height);\n            ctx.save();\n            ctx.translate(0.5, 0.5);\n\n            for (let i = 0; i < nodes.length; i++) {\n                ctx.lineWidth = 1;\n                ctx.fillStyle = ctx.strokeStyle = nodes[i].curr_colour();\n                nodes[i].draw(ctx, nodes[i] == selected_object && this.state.caret_visible);\n            }\n            for (let i = 0; i < links.length; i++) {\n                ctx.lineWidth = 1;\n                ctx.fillStyle = ctx.strokeStyle = links[i].curr_colour();\n                links[i].draw(ctx, links[i] == selected_object && this.state.caret_visible);\n            }\n            if (current_link != null) {\n                ctx.lineWidth = 1;\n                ctx.fillStyle = ctx.strokeStyle = 'black';\n                current_link.draw(ctx, current_link == selected_object && this.state.caret_visible);\n            }\n\n            // Debug.\n            // ctx.fillStyle = ctx.strokeStyle = 'magenta';\n            // if (this.cursor.obj_at_mouse_down != null) this.cursor.obj_at_mouse_down.draw(ctx, false);\n            // ctx.fillStyle = ctx.strokeStyle = 'lime';\n            // if (this.cursor.obj_at_last_pos != null) this.cursor.obj_at_last_pos.draw(ctx, false);\n\n            ctx.restore();\n        }\n    }\n}","module.exports = require(\"preact\");","import { FSMContext, Point2D } from \"../../types\";\r\nimport { DrawableElement } from \"./abstract\";\r\nimport { HIT_TARGET_PADDING, SNAP_TO_PADDING } from \"./constants\";\r\nimport { StateNode } from \"./state_node\";\r\nimport { draw_arrow, draw_text } from \"./text_utils\";\r\n\r\n/** A link from a textbox to a node. */\r\nexport class StartLink extends DrawableElement {\r\n\tpublic node: StateNode;\r\n\tpublic deltaX: number;\r\n\tpublic deltaY: number;\r\n\tpublic text: string;\r\n\r\n\tconstructor(node: StateNode, start?: Point2D) {\r\n\t\tsuper();\r\n\t\tthis.node = node;\r\n\t\tthis.deltaX = 0;\r\n\t\tthis.deltaY = 0;\r\n\t\tthis.text = '';\r\n\r\n\t\tif (start) {\r\n\t\t\tthis.set_anchor_point(start.x, start.y);\r\n\t\t}\r\n\t}\r\n\r\n\tset_anchor_point(x: number, y: number) {\r\n\t\tthis.deltaX = x - this.node.x;\r\n\t\tthis.deltaY = y - this.node.y;\r\n\r\n\t\tif (Math.abs(this.deltaX) < SNAP_TO_PADDING) {\r\n\t\t\tthis.deltaX = 0;\r\n\t\t}\r\n\r\n\t\tif (Math.abs(this.deltaY) < SNAP_TO_PADDING) {\r\n\t\t\tthis.deltaY = 0;\r\n\t\t}\r\n\t};\r\n\r\n\tget_start_point() {\r\n\t\treturn {\r\n\t\t\tx: this.node.x + this.deltaX,\r\n\t\t\ty: this.node.y + this.deltaY\r\n\t\t}\r\n\t}\r\n\r\n\tget_endpoints() {\r\n\t\tconst startX = this.node.x + this.deltaX;\r\n\t\tconst startY = this.node.y + this.deltaY;\r\n\t\tconst end = this.node.closest_point_on_circle(startX, startY);\r\n\t\treturn {\r\n\t\t\t'startX': startX,\r\n\t\t\t'startY': startY,\r\n\t\t\t'endX': end.x,\r\n\t\t\t'endY': end.y,\r\n\t\t};\r\n\t};\r\n\r\n\tdraw(c: FSMContext, with_caret: boolean = false) {\r\n\t\tconst stuff = this.get_endpoints();\r\n\r\n\t\t// draw the line\r\n\t\tc.beginPath();\r\n\t\tc.moveTo(stuff.startX, stuff.startY);\r\n\t\tc.lineTo(stuff.endX, stuff.endY);\r\n\t\tc.stroke();\r\n\r\n\t\t// draw the text at the end without the arrow\r\n\t\tconst textAngle = Math.atan2(stuff.startY - stuff.endY, stuff.startX - stuff.endX);\r\n\t\tdraw_text(c, this.text, stuff.startX, stuff.startY, textAngle, this.selected, with_caret);\r\n\r\n\t\t// draw the head of the arrow\r\n\t\tdraw_arrow(c, stuff.endX, stuff.endY, Math.atan2(-this.deltaY, -this.deltaX));\r\n\t};\r\n\r\n\tcontains_point(pos: Point2D) {\r\n\t\tconst x = pos.x;\r\n\t\tconst y = pos.y;\r\n\t\tconst stuff = this.get_endpoints();\r\n\t\tconst dx = stuff.endX - stuff.startX;\r\n\t\tconst dy = stuff.endY - stuff.startY;\r\n\t\tconst length = Math.sqrt(dx * dx + dy * dy);\r\n\t\tconst percent = (dx * (x - stuff.startX) + dy * (y - stuff.startY)) / (length * length);\r\n\t\tconst distance = (dx * (y - stuff.startY) - dy * (x - stuff.startX)) / length;\r\n\t\treturn (percent > 0 && percent < 1 && Math.abs(distance) < HIT_TARGET_PADDING);\r\n\t};\r\n}","import { FSMContext, Point2D } from \"../../types\";\r\nimport { DrawableElement } from \"./abstract\";\r\nimport { NODE_RADIUS } from \"./constants\";\r\nimport { draw_text } from \"./text_utils\";\r\n\r\n/** A circular node representing a state in the finite automaton. */\r\nexport class StateNode extends DrawableElement {\r\n\tpublic x: number;\r\n\tpublic y: number;\r\n\tprivate mouseOffsetX: number;\r\n\tprivate mouseOffsetY: number;\r\n\tpublic isAcceptState: boolean;\r\n\tpublic text: string;\r\n\r\n\tconstructor(x: number, y: number) {\r\n\t\tsuper();\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.mouseOffsetX = 0;\r\n\t\tthis.mouseOffsetY = 0;\r\n\t\tthis.isAcceptState = false;\r\n\t\tthis.text = '';\r\n\t}\r\n\r\n\tset_mouse_start(x: number, y: number) {\r\n\t\tthis.mouseOffsetX = this.x - x;\r\n\t\tthis.mouseOffsetY = this.y - y;\r\n\t};\r\n\r\n\tset_anchor_point(x: number, y: number) {\r\n\t\tthis.x = x + this.mouseOffsetX;\r\n\t\tthis.y = y + this.mouseOffsetY;\r\n\t};\r\n\r\n\tdraw(c: FSMContext, with_caret: boolean = false) {\r\n\t\t// draw the circle\r\n\t\tc.beginPath();\r\n\t\tc.arc(this.x, this.y, NODE_RADIUS, 0, 2 * Math.PI, false);\r\n\t\tc.stroke();\r\n\r\n\t\t// draw the text\r\n\t\tdraw_text(c, this.text, this.x, this.y, null, this.selected, with_caret);\r\n\r\n\t\t// draw a double circle for an accept state\r\n\t\tif (this.isAcceptState) {\r\n\t\t\tc.beginPath();\r\n\t\t\tc.arc(this.x, this.y, NODE_RADIUS - 6, 0, 2 * Math.PI, false);\r\n\t\t\tc.stroke();\r\n\t\t}\r\n\t};\r\n\r\n\tclosest_point_on_circle(x: number, y: number): Point2D {\r\n\t\tconst dx = x - this.x;\r\n\t\tconst dy = y - this.y;\r\n\t\tconst scale = Math.sqrt(dx * dx + dy * dy);\r\n\t\treturn {\r\n\t\t\t'x': this.x + dx * NODE_RADIUS / scale,\r\n\t\t\t'y': this.y + dy * NODE_RADIUS / scale,\r\n\t\t};\r\n\t};\r\n\r\n\tcontains_point(pos: Point2D) {\r\n\t\treturn (pos.x - this.x) * (pos.x - this.x) + (pos.y - this.y) * (pos.y - this.y) < NODE_RADIUS * NODE_RADIUS;\r\n\t};\r\n}","import { Attributes, Component, ComponentChild, ComponentChildren, Fragment, h, Ref } from \"preact\";\nimport { get_state, mutate, mutate_if_true, subscribe } from \"../../store/store\";\nimport { CanvasTool } from \"../../types\";\n\n// Consider removing this parent reference and relying strictly on vDOM.\ntype ToolProps = {\n    tooltip: string,\n    icon: string,\n    tool_mode: CanvasTool,\n};\n\nexport class ToolBar extends Component {\n    constructor() {\n        super();\n        subscribe(['curr_tool'], this);\n    }\n\n    render(): ComponentChild {\n        return (<>\n            <div>Tools:</div>\n            <div style='display: flex; flex-direction: row;'>\n                <Tool tooltip='Select' icon='' tool_mode={CanvasTool.POINTER} />\n                <Tool tooltip='Draw Node' icon='' tool_mode={CanvasTool.DRAW_NODE} />\n                <Tool tooltip='Draw Link' icon='' tool_mode={CanvasTool.DRAW_LINK} />\n                <Tool tooltip='Draw Accept' icon='' tool_mode={CanvasTool.DRAW_ACCEPT} />\n                <Tool tooltip='Eliminate' icon='' tool_mode={CanvasTool.ELIMINATE} />\n                {/* <Tool tooltip='Pan (not yet implemented)' icon={''} tool_mode={CanvasTool.PAN} /> */}\n            </div>\n        </>);\n    }\n}\n\nclass Tool extends Component<ToolProps> {\n    constructor(props: ToolProps) {\n        super(props);\n    }\n\n    render(): ComponentChild {\n        return (\n            <div\n                onClick={e => {\n                    mutate_if_true(['curr_tool'], state => {\n                        if (state.curr_tool == this.props.tool_mode) return false;\n                        state.curr_tool = this.props.tool_mode;\n                        return true;\n                    });\n                }}\n\n                style={\n                    this.props.tool_mode == get_state('curr_tool') ? 'color: cyan' : 'color: black'\n                }\n            >{this.props.tooltip}</div>\n        );\n    }\n}","import { Component, FunctionalComponent, h, Fragment } from 'preact';\nimport { restore_backup } from '../store/store';\nimport { Canvas } from './canvas/canvas';\nimport { ToolBar } from './tool_bar/tool_bar';\n\nclass App extends Component {\n    componentWillMount() {\n        restore_backup();\n    }\n\n    render() {\n        return (\n            <>\n                <div id=\"preact_root\">\n                    <ToolBar />\n                    <Canvas />\n                </div>\n                <div>\n                    {/* <p class=\"center\">Export as: <a id=\"a-saveAsPNG\">PNG</a> | <a id=\"a-saveAsSVG\">SVG</a>\n                        | <a id=\"a-saveAsLaTeX\">LaTeX</a></p> */}\n                    <textarea id=\"output\"></textarea>\n                    <p>The big white box above is the FSM designer.&nbsp; Here's how to use it:</p>\n                    <ul>\n                        <li><b>Add a state:</b> double-click on the canvas</li>\n                        <li><b>Add an arrow:</b> shift-drag on the canvas</li>\n                        <li><b>Move something:</b> drag it around</li>\n                        <li><b>Delete something:</b> click it and press the delete key (not the backspace key)</li>\n                    </ul>\n                    <ul>\n                        <li><b>Make accept state:</b> double-click on an existing state</li>\n                        <li><b>Type numeric subscript:</b> put an underscore before the number (like \"S_0\")</li>\n                        <li><b>Type greek letter:</b> put a backslash before it (like \"\\beta\")</li>\n                        <li><b>Eliminate a non-accept, non-start state:</b> use the state tool or press ]</li>\n                        <li><b>Perform subset construction:</b> right click anywhere on the canvas</li>\n                    </ul>\n                    <p>This was made in HTML5 and JavaScript using the canvas element.</p>\n                </div>\n                <p>Created by <a href=\"http://madebyevan.com/\">Evan Wallace</a> in 2010 <br />\n                    + Extended by <a href=\"https://alialhasnawi.github.io/\">Ali Al-Hasnawi in 2021</a>\n                </p>\n            </>\n        );\n    };\n}\n\nexport default App;\n","/**\n * In charge of loading strings, undoing and redoing actions.\n * Stores the global state and its subscribers.\n */\n\nimport { Component } from \"preact\";\nimport { Canvas } from \"../components/canvas/canvas\";\nimport { FSMLink } from \"../components/elements/abstract\";\nimport { NodeLink } from \"../components/elements/node_link\";\nimport { SelfLink } from \"../components/elements/self_link\";\nimport { StartLink } from \"../components/elements/start_link\";\nimport { StateNode } from \"../components/elements/state_node\";\nimport { Backup, BackupLink, BackupNode, CanvasJSON, CanvasTool, FSMCanvasState, State, StateKey, Subscribers } from \"../types\";\n\nconst _state: State = {\n    temp_link: undefined, // a Link\n\n    active_objects: [],\n    selected_object: undefined, // either a Link or a Node\n    nodes: [],\n    links: [],\n\n    last_tool: CanvasTool.POINTER,\n    curr_tool: CanvasTool.POINTER,\n};\n\nconst _subscribers: Subscribers<State> = {\n    temp_link: [],\n\n    active_objects: [],\n    selected_object: [],\n    nodes: [],\n    links: [],\n\n    last_tool: [],\n    curr_tool: [],\n};\n\nconst _subscriber_map: Map<Component, StateKey[]> = new Map();\n\n/**\n * Subscribe the component to certain keys.\n */\nexport function subscribe(keys: StateKey[], component: Component) {\n    for (const key of keys) {\n        if (!_subscribers[key].includes(component)) _subscribers[key].push(component);\n    }\n    _subscriber_map.set(component, keys);\n}\n\n/**\n * Unsubscribe the component from all keys.\n */\nexport function unsubscribe(component: Component) {\n    const subbed_keys = _subscriber_map.get(component);\n\n    if (subbed_keys != null) {\n        for (let key of subbed_keys) {\n            for (let i = _subscribers[key].length - 1; i >= 0; i--) {\n                if (component == _subscribers[key][i]) {\n                    _subscribers[key].splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    }\n}\n\nlet _canvas: Canvas;\n\nexport function get_canvas(): Canvas {\n    return _canvas;\n}\n\n/** Set the canvas if not already set. */\nexport function set_default_canvas(c: Canvas): void {\n    if (_canvas == null) _canvas = c;\n\n\n}\n\nlet _undo_stack: CanvasJSON[] = [];\nlet _redo_stack: CanvasJSON[] = [];\n\n/**\n * Undo a canvas change if possible.\n */\nexport function undo() {\n    let next_str = _undo_stack.pop();\n    if (next_str != null) {\n        // Push current state to the redo stack.\n        _redo_stack.push(canvas_to_string());\n\n        // Load the new state from the undo stack.\n        const next_state: FSMCanvasState = string_to_canvas(next_str);\n        _state.nodes = next_state.nodes;\n        _state.links = next_state.links;\n\n        // Update subscribers.\n        push_update(['nodes', 'links']);\n    }\n}\n\n/**\n * Redo an undone canvas change if possible.\n */\nexport function redo() {\n    let next_str = _redo_stack.pop();\n    if (next_str != null) {\n        // Push current state to the undo stack.\n        _undo_stack.push(canvas_to_string());\n\n        // Load the new state from the undo stack.\n        const next_state: FSMCanvasState = JSON.parse(next_str);\n        _state.nodes = next_state.nodes;\n        _state.links = next_state.links;\n\n        // Update subscribers.\n        push_update(['nodes', 'links']);\n    }\n}\n\n\n/**\n * Apply a function onto the state.\n * @param keys State keys which will be mutated.\n * @param func Function of the state.\n */\nexport function mutate(keys: StateKey[], func: (state: State) => void) {\n    if (keys.includes('curr_tool')) {\n        _state.last_tool = _state.curr_tool;\n    }\n\n    func(_state);\n\n    if (keys.includes('nodes') || keys.includes('links') || keys.includes('selected_object')) {\n        save_undo_redo();\n    }\n\n\n    push_update(keys);\n}\n\n/**\n * Apply a function onto the state. Mutate the keys if the function returns true.\n * @param keys State keys which will be mutated.\n * @param func Function of the state.\n */\nexport function mutate_if_true(keys: StateKey[], func: (state: State) => boolean) {\n    let last_tool = _state.curr_tool;\n\n    const result = func(_state);\n\n    if (result) {\n        if (keys.includes('curr_tool'))\n            _state.last_tool = last_tool;\n\n        if (keys.includes('nodes') || keys.includes('links') || keys.includes('selected_object')) {\n            save_undo_redo();\n        }\n\n        push_update(keys);\n    }\n}\n\n/**\n * Update the keys without explicit mutation.\n * \n * Use with caution.\n */\nexport function force_update(keys: StateKey[]) {\n    push_update(keys);\n}\n\n/**\n * Get a state.\n * \n * Must not mutate the state.\n */\nexport function get_state<K extends StateKey>(key: K): State[K] {\n    return _state[key];\n}\n\n/**\n * Apply a function onto the state and return the result.\n * \n * Must not mutate the state.\n * @param func Function of the state.\n */\nexport function access<T>(func: (state: State) => T): T {\n    return func(_state);\n}\n\n/**\n * Save the canvas to the undo/redo stacks and to localStorage.\n */\nfunction save_undo_redo() {\n    const str = canvas_to_string();\n    _undo_stack.push(str);\n    _redo_stack = [];\n    save_backup(str);\n}\n\n/**\n * Update all the subscribers to this key.\n * @param key \n */\nfunction push_update(keys: StateKey[]) {\n    // Store update-ables in set to minimize duplicate rerenders.\n    const will_update: Component[] = [];\n    for (const key of keys) {\n        for (const subscriber of _subscribers[key])\n            if (!will_update.includes(subscriber)) will_update.push(subscriber);\n    }\n\n    for (const comp of will_update) {\n        comp.setState({});\n    }\n}\n\n/**\n * Load the canvas from localStorage.\n */\nexport function restore_backup() {\n    if (typeof window != 'undefined') {\n        if (!localStorage || !JSON) {\n            return;\n        }\n\n        try {\n            const storage = localStorage.getItem(\"fsm\");\n            if (storage != null) {\n                const next_state = string_to_canvas(storage);\n                _state.nodes = next_state.nodes;\n                _state.links = next_state.links;\n            }\n\n        } catch (error) {\n            localStorage['fsm'] = \"\";\n        }\n\n        push_update(['nodes', 'links']);\n    }\n}\n\n/**\n * Save the current canvas to localStorage.\n */\nexport function save_backup(backup: CanvasJSON) {\n    if (!localStorage || !JSON) {\n        return;\n    }\n\n    localStorage['fsm'] = backup;\n}\n\n\n/**\n * Get the node and link elements corresponding to the given json string.\n */\nfunction string_to_canvas(json: CanvasJSON): FSMCanvasState {\n    const nodes: StateNode[] = [];\n    const links: FSMLink[] = [];\n\n    if (!localStorage || !JSON) {\n        return { nodes, links };\n    }\n\n    const backup = JSON.parse(json);\n\n    for (let i = 0; i < backup.nodes.length; i++) {\n        const backupNode: BackupNode = backup.nodes[i];\n        const node = new StateNode(backupNode.x, backupNode.y);\n        node.isAcceptState = backupNode.isAcceptState;\n        node.text = backupNode.text;\n        nodes.push(node);\n    }\n\n    for (let i = 0; i < backup.links.length; i++) {\n        const backupLink: BackupLink = backup.links[i];\n        let link = null;\n        if (backupLink.type == 'SelfLink') {\n            link = new SelfLink(nodes[backupLink.node]);\n            link.anchorAngle = backupLink.anchorAngle;\n            link.text = backupLink.text;\n        } else if (backupLink.type == 'StartLink') {\n            link = new StartLink(nodes[backupLink.node]);\n            link.deltaX = backupLink.deltaX;\n            link.deltaY = backupLink.deltaY;\n            link.text = backupLink.text;\n        } else if (backupLink.type == 'NodeLink') {\n            link = new NodeLink(nodes[backupLink.nodeA], nodes[backupLink.nodeB]);\n            link.parallelPart = backupLink.parallelPart;\n            link.perpendicularPart = backupLink.perpendicularPart;\n            link.text = backupLink.text;\n            link.lineAngleAdjust = backupLink.lineAngleAdjust;\n        }\n        if (link != null) {\n            links.push(link);\n        }\n    }\n\n    return { nodes, links };\n}\n\n/**\n * Convert the current canvas state to a JSON string.\n * @returns The string representation of the current canvas.\n */\nfunction canvas_to_string(): CanvasJSON {\n    if (!localStorage || !JSON) {\n        return \"\";\n    }\n\n    const nodes = _state.nodes;\n    const links = _state.links;\n\n    const backup: Backup = {\n        nodes: [],\n        links: [],\n    };\n    for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        let backup_node = {\n            x: node.x,\n            y: node.y,\n            text: node.text,\n            isAcceptState: node.isAcceptState,\n        };\n        backup.nodes.push(backup_node);\n    }\n    for (let i = 0; i < links.length; i++) {\n        const link = links[i];\n        let backup_link: BackupLink | undefined = undefined;\n        if (link instanceof SelfLink) {\n            backup_link = {\n                type: 'SelfLink',\n                node: nodes.indexOf(link.node),\n                text: link.text,\n                anchorAngle: link.anchorAngle,\n            };\n        } else if (link instanceof StartLink) {\n            backup_link = {\n                type: 'StartLink',\n                node: nodes.indexOf(link.node),\n                text: link.text,\n                deltaX: link.deltaX,\n                deltaY: link.deltaY,\n            };\n        } else if (link instanceof NodeLink) {\n            backup_link = {\n                type: 'NodeLink',\n                nodeA: nodes.indexOf(link.nodeA),\n                nodeB: nodes.indexOf(link.nodeB),\n                text: link.text,\n                lineAngleAdjust: link.lineAngleAdjust,\n                parallelPart: link.parallelPart,\n                perpendicularPart: link.perpendicularPart,\n            };\n        }\n        if (backup_link != null) {\n            backup.links.push(backup_link);\n        }\n    }\n\n    return JSON.stringify(backup);\n}","/**\n * Non-specific types.\n */\n\nimport { Component } from \"preact\";\nimport { AnyLink, DrawableElement, FSMLink } from \"./components/elements/abstract\";\nimport { StateNode } from \"./components/elements/state_node\";\nimport { ExportAsLaTeX } from \"./export_as/latex\";\nimport { ExportAsSVG } from \"./export_as/svg\";\n\nexport enum CanvasTool {\n    POINTER = 1,\n    DRAW_NODE,\n    DRAW_LINK,\n    DRAW_ACCEPT,\n    ELIMINATE,\n    PAN,\n};\n\nexport interface State {\n    temp_link: AnyLink | undefined, // a Link\n\n    // Active objects is an experimental property and should not be used.\n    active_objects: StateNode[],\n    selected_object: DrawableElement | undefined, // either a Link or a Node\n    nodes: StateNode[],\n    links: FSMLink[],\n\n    last_tool: CanvasTool,\n    curr_tool: CanvasTool,\n};\n\nexport enum CanvasAction {\n    LOAD = 1,\n    SAVE,\n    UNDO,\n    REDO,\n    SUBSET_CONSTRUCT,\n    RESET_ZOOM,\n    FORCE_EXPAND,\n}\n\nexport enum MouseButton {\n    LEFT = 0,\n    MIDDLE = 1,\n    RIGHT = 2,\n}\n\n\nexport type CursorFlags = {\n    moving: boolean,\n    down: boolean,\n}\n\nexport interface CanvasRectangle {\n    top: number,\n    left: number,\n    width: number,\n    height: number,\n}\n\nexport interface CanvasViewTransform {\n    zoom: number,\n    x: number,\n    y: number,\n}\n\nexport type FSMContext = CanvasRenderingContext2D | ExportAsLaTeX | ExportAsSVG;\n\nexport type Subscribers<State> = {\n    [K in keyof State]: Component[];\n};\n\nexport type NodeLinkEndPointsAndCircle = LinkNoCircle | LinkCircleReversible;\nexport type SelfLinkCircle = LinkCircle;\n\ninterface LinkEndPoints {\n    startX: number,\n    startY: number,\n    endX: number,\n    endY: number,\n};\n\ninterface LinkNoCircle extends LinkEndPoints {\n    hasCircle: false\n};\n\ninterface LinkCircle extends LinkEndPoints {\n    hasCircle: true,\n    startAngle: number,\n    endAngle: number,\n    circleX: number,\n    circleY: number,\n    circleRadius: number,\n}\n\ninterface LinkCircleReversible extends LinkCircle {\n    reverseScale: number,\n    isReversed: boolean,\n}\n\nexport type StateKey = keyof State;\n\n/** A JSON string containing nodes and links properties. */\nexport type CanvasJSON = string;\n\nexport type FSMCanvasState = {\n    nodes: StateNode[],\n    links: FSMLink[],\n};\n\nexport interface Point2D {\n    x: number;\n    y: number;\n};\n\nexport type Backup = {\n    nodes: BackupNode[],\n    links: BackupLink[]\n};\n\nexport type BackupNode = {\n    x: number,\n    y: number,\n    text: string,\n    isAcceptState: boolean,\n};\n\nexport type BackupLink = BackupNodeLink | BackupStartLink | BackupSelfLink;\n\ntype _BackupLink = {\n    text: string,\n};\n\ntype BackupNodeLink = _BackupLink & {\n    type: 'NodeLink',\n    nodeA: number,\n    nodeB: number,\n    lineAngleAdjust: number,\n    parallelPart: number,\n    perpendicularPart: number,\n}\n\ntype BackupStartLink = _BackupLink & {\n    type: 'StartLink',\n    node: number,\n    deltaX: number,\n    deltaY: number,\n}\n\ntype BackupSelfLink = _BackupLink & {\n    type: 'SelfLink',\n    node: number,\n    anchorAngle: number,\n}","import { get_canvas } from \"../../store/store\";\nimport { FSMContext } from \"../../types\";\n\nconst greek_letter_names = ['Alpha', 'Beta', 'Gamma', 'Delta', 'Epsilon', 'Zeta', 'Eta', 'Theta', 'Iota', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Xi', 'Omicron', 'Pi', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'Phi', 'Chi', 'Psi', 'Omega'];\n\n/**\n * Draw text using the context and with a caret if necessary.\n */\nexport function draw_text(c: FSMContext, original_text: string, x: number, y: number, angle_or_null: number | null, is_selected: boolean, caret_visible: boolean = false) {\n    const text = convert_latex_shortcuts(original_text);\n    c.font = '20px \"Times New Roman\", serif';\n    const width = measure_text(text);\n\n    // center the text\n    x -= width / 2;\n\n    // position the text intelligently if given an angle\n    if (angle_or_null != null) {\n        const cos = Math.cos(angle_or_null);\n        const sin = Math.sin(angle_or_null);\n        const cornerPointX = (width / 2 + 5) * (cos > 0 ? 1 : -1);\n        const cornerPointY = (10 + 5) * (sin > 0 ? 1 : -1);\n        const slide = sin * Math.pow(Math.abs(sin), 40) * cornerPointX - cos * Math.pow(Math.abs(cos), 10) * cornerPointY;\n        x += cornerPointX - sin * slide;\n        y += cornerPointY + cos * slide;\n    }\n\n    // draw text and caret (round the coordinates so the caret falls on a pixel)\n    // Used for exports.\n    if ('advancedFillText' in c) {\n        // @ts-ignore\n        c.advancedFillText(text, original_text, x + width / 2, y, angle_or_null);\n    } else {\n        x = Math.round(x);\n        y = Math.round(y);\n        c.fillText(text, x, y + 6);\n        if (is_selected && caret_visible && document.hasFocus()) {\n            x += width;\n            c.beginPath();\n            c.moveTo(x, y - 10);\n            c.lineTo(x, y + 10);\n            c.stroke();\n        }\n    }\n}\n\n/**\n * Draw an arrow at (x,y).\n * @param c Context.\n * @param x\n * @param y \n * @param angle in rad.\n */\nexport function draw_arrow(c: FSMContext, x: number, y: number, angle: number) {\n    const dx = Math.cos(angle);\n    const dy = Math.sin(angle);\n    c.beginPath();\n    c.moveTo(x, y);\n    c.lineTo(x - 8 * dx + 5 * dy, y - 8 * dy - 5 * dx);\n    c.lineTo(x - 8 * dx - 5 * dy, y - 8 * dy + 5 * dx);\n    c.fill();\n}\n\n/** Return the length of the text in the default 20px font, in px. */\nexport function measure_text(text: string): number {\n    const c = get_canvas();\n    if (c != null) {\n        const ctx = c.ctx;\n        if (ctx != null) {\n            ctx.font = '20px \"Times New Roman\", serif';\n            return ctx.measureText(text).width;\n        }\n    }\n    return 0;\n}\n\n/**\n * Replace all LaTeX greek letter shortcuts with their characters.\n * @returns Converted string.\n */\nexport function convert_latex_shortcuts(text: string) {\n    // html greek characters\n    for (let i = 0; i < greek_letter_names.length; i++) {\n        const name = greek_letter_names[i];\n        text = text.replace(new RegExp('\\\\\\\\' + name, 'g'), String.fromCharCode(913 + i + +(i > 16)));\n        text = text.replace(new RegExp('\\\\\\\\' + name.toLowerCase(), 'g'), String.fromCharCode(945 + i + +(i > 16)));\n    }\n\n    // subscripts\n    for (let i = 0; i < 10; i++) {\n        text = text.replace(new RegExp('_' + i, 'g'), String.fromCharCode(8320 + i));\n    }\n\n    return text;\n}\n\n/**\n * Convert text string to XML safe text.\n * @returns XML string.\n */\nexport function text_to_xml(text: string) {\n    text = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    let result = '';\n    for (let i = 0; i < text.length; i++) {\n        let c = text.charCodeAt(i);\n        if (c >= 0x20 && c <= 0x7E) {\n            result += text[i];\n        } else {\n            result += '&#' + c + ';';\n        }\n    }\n    return result;\n}","/**\n * Bind key handlers and render the app.\n */\n\nimport './style/index.css';\nimport App from './components/app';\nimport { get_canvas, mutate, mutate_if_true, restore_backup } from './store/store';\nimport { CanvasTool } from './types';\nimport { StateNode } from './components/elements/state_node';\n\nexport default App;\n\n/** On initialized. */\nrestore_backup();\n\n// Bind keyboard shortcuts.\nif (typeof window != 'undefined') {\n    window.onkeydown = e => {\n        switch (e.key) {\n            // Shift activates link drawing.\n            case 'Shift': mutate_if_true(['curr_tool'], state => {\n                // Note: This is an illegal mutation of last_tool for reducing render calls.\n                if (state.curr_tool == CanvasTool.DRAW_LINK) { state.last_tool = state.curr_tool; return false; };\n                state.curr_tool = CanvasTool.DRAW_LINK;\n                return true;\n            });\n                break;\n\n            // Backspace deletes text.\n            case 'Backspace': mutate_if_true(['selected_object'], state => {\n                if (state.selected_object != null) {\n                    state.selected_object.text = state.selected_object.text.substring(0, state.selected_object.text.length - 1);\n                    return true;\n                }\n                return false;\n            });\n                break;\n\n            // ] is for state elimination.\n            case ']': mutate_if_true(['selected_object'], get_canvas().tools.eliminate); break;\n\n            // Delete is for deleting the element.\n            case 'Delete': mutate(['selected_object'], get_canvas().tools.delete_element);\n                break;\n\n            // Try to enter a key.\n            default: if (e.key.length == 1) {\n                mutate_if_true(['selected_object'], state => {\n                    if (state.selected_object != null) {\n                        state.selected_object.text += e.key;\n                        return true;\n                    }\n                    return false;\n                });\n            }\n\n        }\n\n        // Prevent actions.\n        e.preventDefault();\n        return false;\n    }\n\n    window.onkeyup = e => {\n        if (e.key == 'Shift') {\n            // Unshifting return to node drawing.\n            mutate_if_true(['curr_tool'], state => {\n                if (state.curr_tool != CanvasTool.DRAW_LINK) return false;\n                state.curr_tool = state.last_tool;\n                return true;\n            });\n\n        }\n\n        // Prevent actions.\n        e.preventDefault();\n        return false;\n    }\n}","export const NODE_RADIUS = 30;\nexport const SNAP_TO_PADDING = 6; // pixels\nexport const HIT_TARGET_PADDING = 6; // pixels\nexport const CANVAS_PADDING = 30;\nexport const CANVAS_SIZE = { x: 800, y: 600 };\nexport const STANDARD_COLOUR = 'black';\nexport const SELECTED_COLOUR = 'blue';\nexport const ACTIVE_COLOUR = 'green';\n"],"sourceRoot":""}