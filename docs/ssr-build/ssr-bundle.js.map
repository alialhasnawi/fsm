{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./components/elements/self_link.ts","webpack:///./components/elements/abstract.ts","webpack:///./index.tsx","webpack:///./components/elements/node_link.ts","webpack:///./components/canvas/collide.ts","webpack:///./components/canvas/handlers.ts","webpack:///./components/canvas/canvas.tsx","webpack:///external \"preact\"","webpack:///./components/action_bar/actions.ts","webpack:///./components/elements/start_link.ts","webpack:///./common/math.ts","webpack:///./export_as/latex.ts","webpack:///./algs/data.ts","webpack:///./algs/subset_construct.ts","webpack:///./algs/shared_utils.ts","webpack:///./components/elements/state_node.ts","webpack:///./export_as/png.ts","webpack:///./export_as/svg.ts","webpack:///./components/tool_bar/tool_bar.tsx","webpack:///./algs/constants.ts","webpack:///./store/files.ts","webpack:///./store/store.ts","webpack:///./store/effects.ts","webpack:///./store/undo_redo.ts","webpack:///./types.ts","webpack:///./algs/expr.ts","webpack:///./algs/eliminate.ts","webpack:///./components/elements/temporary_link.ts","webpack:///./components/tool_bar/tools.ts","webpack:///./components/elements/text_utils.ts","webpack:///./components/action_bar/action_bar.tsx","webpack:///./components/elements/constants.ts","webpack:///./store/backup.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","SelfLink","node","mouse","anchorAngle","mouseOffsetAngle","text","set_anchor_point","x","y","this","Math","atan2","snap","round","PI","abs","circleX","NODE_RADIUS","cos","circleY","sin","circleRadius","startAngle","endAngle","with_caret","stuff","get_endpoints_and_circle","beginPath","arc","stroke","textX","textY","draw_text","selected","draw_arrow","endX","endY","pos","dx","dy","distance","sqrt","HIT_TARGET_PADDING","DrawableElement","SELECTED_COLOUR","active","ACTIVE_COLOUR","STANDARD_COLOUR","App","init","canvas","get_canvas","id","href","mutate","restore_backup","reset_undo_redo","window","onkeydown","e","state","curr_tool","CanvasTool","DRAW_LINK","last_tool","Tools","length","mutate_with_args","preventDefault","onkeyup","Component","NodeLink","a","b","nodeA","nodeB","lineAngleAdjust","parallelPart","perpendicularPart","scale","SNAP_TO_PADDING","midX","midY","start","closest_point_on_circle","end","anchor","get_anchor_point","circle","circleFromThreePoints","isReversed","reverseScale","radius","hasCircle","startX","startY","moveTo","lineTo","textAngle","percent","angle","temp","object_at","nodes","get_state","links","contains_point","_CanvasHandler","sync_canvas_coordinates","cursor","mouse_down_pos","last_pos","obj_at_mouse_down","obj_at_last_pos","down","moving","button","MouseButton","LEFT","left_click","RIGHT","right_click","undefined","drag","StateNode","DRAW_NODE","DRAW_ACCEPT","ELIMINATE","subset_construct","update_object_at_cursor","event_to_canvas_space","Canvas","createRef","clearInterval","caret_interval","setState","caret_visible","zone","ctx","setTransform","zoom","draw_using","el","getContext","selected_zone","handlers","set_default_canvas","ref","current","onmousedown","mouse_down","onmousemove","mouse_move","onmouseup","mouse_up","ondblclick","dbl_click","oncontextmenu","prevent_default","onwheel","wheel","subscribe","access","draw","unsubscribe","reinit_caret","width","CANVAS_SIZE","height","setInterval","caret_function","view","rect","getBoundingClientRect","element_space","clientX","clientY","with_border","selected_object","current_link","upper_left","point_to_canvas_space","lower_right","clearRect","save","lineWidth","fillStyle","strokeStyle","curr_colour","restore","require","reset_camera","view_zone","StartLink","deltaX","deltaY","get_endpoints","det","f","g","h","x1","y1","x2","y2","x3","y3","bx","by","fixed","number","digits","toFixed","replace","ExportAsLaTeX","_points","_texData","_scale","min","max","push","originalText","angleOrNull","nodeParams","measure_text","export_to_latex","exporter","navigator","clipboard","writeText","toLaTeX","FAData","state_names","transitions","Map","starting_state","accepting_states","node_to_index","curr","set","to_symbol","isAcceptState","link","options","split","map","trim","option","opt","index","new_nodes","new_links","index_to_node","rand_pos","includes","entries","start_node","transition","end_node","random","from","to","inplace_union","shallow_dests","get_equivalents","shallow_delta","slice","stack","Array","isArray","top","pop","EPSILON","values","dest","result","fa","load","is_deterministic","console","warn","dfa","name_to_index","names","state_stack","dfa_start_set","_set_to_string","start_state_names","sort","join","some","origin","from_name","from_state_transitions","keys","deep_delta","output","to_name","has","add_transition","_subset_alg","create_elements","splice","replace_elements","arr","get_start_point","JSON","stringify","canvas_el","CANVAS_PADDING","mouseOffsetX","mouseOffsetY","export_to_png","document","createElement","save_canvas","file_name","ExportAsSVG","font","_svgData","_transX","_transY","style","useGreaterThan180","text_to_xml","export_to_svg","save_file","toSVG","ToolBar","Tool","tooltip","icon","tool_mode","POINTER","props","onClick","mutator","OPS","CONCAT","KLEIN","OR","OPEN_LEFT","CLOSE_RIGHT","INFIX_CHAR_OPS","BIN_OPS","FUNCTIONS_OPS","L_NON_CONCAT_OPS","R_NON_CONCAT_OPS","OP_PRECEDENCE","save_as","canvas_to_string","Date","toISOString","toDataURL","download","click","URL","revokeObjectURL","data","type","Blob","createObjectURL","open","_open_text","then","rep","next_state","string_to_canvas","substring","lastIndexOf","force_update","error","Promise","resolve","reject","f_input","accept","oninput","target","files","_canvas","_state","temp_link","active_objects","can","undo","redo","_subscribers","_post_effects","effect_undo_redo","effect_save_backup","_subscriber_map","component","subbed_keys","post_actions","actions","action","func","execute_actions","push_update","args","will_update","subscriber","_undo_stack","_curr","_redo_stack","prev","str","deselect","next_str","CanvasAction","to_RPN","lst","convert_latex_shortcuts","last","locator","score","_parse_tokens","op_stack","token","next","_eliminate","incoming_links","outgoing_links","self_links","self_reg","self_options","_","in_link","j","out_link","new_link","to_safe_str","strip_parenthesis","RegExp","indexOf","deletable","node_link_data","similar","minimize_links","rpn","charAt","TemporaryLink","update_select","at_cursor","set_mouse_start","draw_node","new_node","toggle_accept_state","obj","next_view","update_temp_link","start_pos","end_pos","end_temp_link","eliminate","should_update","delete_element","should_delete","type_text","delete_char","end_drag","prev_view","draw_space","exp","greek_letter_names","original_text","angle_or_null","is_selected","cornerPointX","cornerPointY","slide","pow","advancedFillText","fillText","hasFocus","fill","measureText","String","fromCharCode","toLowerCase","charCodeAt","ActionBar","Action","handle_click","localStorage","storage","getItem","json","backup","parse","backupNode","backupLink","backup_node","backup_link"],"mappings":"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","file":"ssr-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/fsm/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"/hs+\");\n","import { FSMContext, Point2D, SelfLinkCircle } from \"../../types\";\r\nimport { DrawableElement } from \"./abstract\";\r\nimport { HIT_TARGET_PADDING, NODE_RADIUS } from \"./constants\";\r\nimport { StateNode } from \"./state_node\";\r\nimport { draw_arrow, draw_text } from \"./text_utils\";\r\n\r\n/** A circular link connecting a state to itself. */\r\nexport class SelfLink extends DrawableElement {\r\n\tpublic node: StateNode;\r\n\tpublic text: string;\r\n\tpublic anchorAngle: number;\r\n\tprivate mouseOffsetAngle: number;\r\n\r\n\tconstructor(node: StateNode, mouse?: Point2D) {\r\n\t\tsuper();\r\n\t\tthis.node = node;\r\n\t\tthis.anchorAngle = 0;\r\n\t\tthis.mouseOffsetAngle = 0;\r\n\t\tthis.text = '';\r\n\r\n\t\tif (mouse) {\r\n\t\t\tthis.set_anchor_point(mouse.x, mouse.y);\r\n\t\t}\r\n\t}\r\n\r\n\tset_mouse_start(x: number, y: number) {\r\n\t\tthis.mouseOffsetAngle = this.anchorAngle - Math.atan2(y - this.node.y, x - this.node.x);\r\n\t};\r\n\r\n\tset_anchor_point(x: number, y: number) {\r\n\t\tthis.anchorAngle = Math.atan2(y - this.node.y, x - this.node.x) + this.mouseOffsetAngle;\r\n\t\t// snap to 90 degrees\r\n\t\tconst snap = Math.round(this.anchorAngle / (Math.PI / 2)) * (Math.PI / 2);\r\n\t\tif (Math.abs(this.anchorAngle - snap) < 0.1) this.anchorAngle = snap;\r\n\t\t// keep in the range -pi to pi so our containsPoint() function always works\r\n\t\tif (this.anchorAngle < -Math.PI) this.anchorAngle += 2 * Math.PI;\r\n\t\tif (this.anchorAngle > Math.PI) this.anchorAngle -= 2 * Math.PI;\r\n\t};\r\n\r\n\tprivate get_endpoints_and_circle(): SelfLinkCircle {\r\n\t\tconst circleX = this.node.x + 1.5 * NODE_RADIUS * Math.cos(this.anchorAngle);\r\n\t\tconst circleY = this.node.y + 1.5 * NODE_RADIUS * Math.sin(this.anchorAngle);\r\n\t\tconst circleRadius = 0.75 * NODE_RADIUS;\r\n\t\tconst startAngle = this.anchorAngle - Math.PI * 0.8;\r\n\t\tconst endAngle = this.anchorAngle + Math.PI * 0.8;\r\n\t\tconst startX = circleX + circleRadius * Math.cos(startAngle);\r\n\t\tconst startY = circleY + circleRadius * Math.sin(startAngle);\r\n\t\tconst endX = circleX + circleRadius * Math.cos(endAngle);\r\n\t\tconst endY = circleY + circleRadius * Math.sin(endAngle);\r\n\t\treturn {\r\n\t\t\t'hasCircle': true,\r\n\t\t\t'startX': startX,\r\n\t\t\t'startY': startY,\r\n\t\t\t'endX': endX,\r\n\t\t\t'endY': endY,\r\n\t\t\t'startAngle': startAngle,\r\n\t\t\t'endAngle': endAngle,\r\n\t\t\t'circleX': circleX,\r\n\t\t\t'circleY': circleY,\r\n\t\t\t'circleRadius': circleRadius\r\n\t\t};\r\n\t}\r\n\r\n\tdraw(c: FSMContext, with_caret: boolean = false) {\r\n\t\tconst stuff = this.get_endpoints_and_circle();\r\n\t\t// draw arc\r\n\t\tc.beginPath();\r\n\t\tc.arc(stuff.circleX, stuff.circleY, stuff.circleRadius, stuff.startAngle, stuff.endAngle, false);\r\n\t\tc.stroke();\r\n\t\t// draw the text on the loop farthest from the node\r\n\t\tconst textX = stuff.circleX + stuff.circleRadius * Math.cos(this.anchorAngle);\r\n\t\tconst textY = stuff.circleY + stuff.circleRadius * Math.sin(this.anchorAngle);\r\n\t\tdraw_text(c, this.text, textX, textY, this.anchorAngle, this.selected, with_caret);\r\n\t\t// draw the head of the arrow\r\n\t\tdraw_arrow(c, stuff.endX, stuff.endY, stuff.endAngle + Math.PI * 0.4);\r\n\t}\r\n\r\n\tcontains_point(pos: Point2D) {\r\n\t\tconst stuff = this.get_endpoints_and_circle();\r\n\t\tconst dx = pos.x - stuff.circleX;\r\n\t\tconst dy = pos.y - stuff.circleY;\r\n\t\tconst distance = Math.sqrt(dx * dx + dy * dy) - stuff.circleRadius;\r\n\t\treturn (Math.abs(distance) < HIT_TARGET_PADDING);\r\n\t}\r\n}","/**\n * Parent class and types of nodes and links.\n */\n\nimport { FSMContext, Point2D } from \"../../types\";\nimport { ACTIVE_COLOUR, SELECTED_COLOUR, STANDARD_COLOUR } from \"./constants\";\nimport { NodeLink } from \"./node_link\";\nimport { SelfLink } from \"./self_link\";\nimport { StartLink } from \"./start_link\";\nimport { StateNode } from \"./state_node\";\nimport { TemporaryLink } from \"./temporary_link\";\n\n/**\n * A canvas element which can be drawn using a canvas context.\n */\nexport abstract class DrawableElement {\n    public selected: boolean = false;\n    public active: boolean = false;\n    public text: string = '';\n\n    abstract draw(ctx: FSMContext, with_caret: boolean): void;\n\n    public curr_colour(): string {\n        if (this.selected)\n            return SELECTED_COLOUR;\n        if (this.active)\n            return ACTIVE_COLOUR;\n        return STANDARD_COLOUR;\n    }\n\n    abstract contains_point(pos: Point2D): boolean;\n    abstract set_anchor_point(x: number, y: number): void;\n}\n\nexport type FSMLink = NodeLink | SelfLink | StartLink;\nexport type AnyLink = FSMLink | TemporaryLink;\nexport type FSMStringableElement = StateNode | FSMLink;\nexport type FSMElementString = string;\n","/**\n * Bind key handlers and render the app.\n */\n\nimport { Component, Fragment, h } from 'preact';\nimport { ActionBar } from './components/action_bar/action_bar';\nimport { Canvas } from './components/canvas/canvas';\nimport * as Tools from './components/tool_bar/tools';\nimport { ToolBar } from './components/tool_bar/tool_bar';\nimport { restore_backup } from './store/backup';\nimport { get_canvas, mutate, mutate_with_args } from './store/store';\nimport { reset_undo_redo } from './store/undo_redo';\nimport './style/main.css';\nimport { CanvasTool, State } from './types';\n\n\nclass App extends Component {\n    private canvas: Canvas | undefined;\n\n\n    componentWillMount() {\n        this.init();\n    }\n\n    componentDidMount() {\n        this.canvas = get_canvas();\n    }\n\n    render() {\n        return (\n            <>\n                <div id=\"preact_root\">\n                    <ActionBar />\n                    <ToolBar />\n                    <Canvas />\n                </div>\n                <div>\n                    {/* <p class=\"center\">Export as: <a id=\"a-saveAsPNG\">PNG</a> | <a id=\"a-saveAsSVG\">SVG</a>\n                        | <a id=\"a-saveAsLaTeX\">LaTeX</a></p> */}\n                    <textarea id=\"output\"></textarea>\n                    <p>The big white box above is the FSM designer.&nbsp; Here's how to use it:</p>\n                    <ul>\n                        <li><b>Add a state:</b> double-click on the canvas</li>\n                        <li><b>Add an arrow:</b> shift-drag on the canvas</li>\n                        <li><b>Move something:</b> drag it around</li>\n                        <li><b>Delete something:</b> click it and press the delete key (not the backspace key)</li>\n                    </ul>\n                    <ul>\n                        <li><b>Make accept state:</b> double-click on an existing state</li>\n                        <li><b>Type numeric subscript:</b> put an underscore before the number (like \"S_0\")</li>\n                        <li><b>Type greek letter:</b> put a backslash before it (like \"\\beta\")</li>\n                        <li><b>Eliminate a non-accept, non-start state:</b> use the state tool or press ]</li>\n                        <li><b>Perform subset construction:</b> right click anywhere on the canvas</li>\n                    </ul>\n                    <p>This was made in HTML5 and JavaScript using the canvas element.</p>\n                </div>\n                <p>Created by <a href=\"http://madebyevan.com/\">Evan Wallace</a> in 2010 <br />\n                    + Extended by <a href=\"https://alialhasnawi.github.io/\">Ali Al-Hasnawi in 2021</a>\n                </p>\n            </>\n        );\n    };\n\n    init(): void {\n        /** On initialized. */\n        mutate(restore_backup);\n        mutate(reset_undo_redo);\n\n        // Bind keyboard shortcuts.\n        if (typeof window != 'undefined') {\n            window.onkeydown = e => {\n                switch (e.key) {\n                    // Shift activates link drawing.\n                    case 'Shift': mutate((state: State) => {\n                        // Note: This is an illegal mutation of last_tool for reducing render calls.\n                        if (state.curr_tool == CanvasTool.DRAW_LINK) { state.last_tool = state.curr_tool; return; };\n                        state.curr_tool = CanvasTool.DRAW_LINK;\n                        return ['curr_tool'];\n                    }, false); break;\n\n                    // Backspace deletes text.\n                    case 'Backspace': mutate(Tools.delete_char, false); break;\n\n                    // ] is for state elimination.\n                    case ']': mutate(Tools.eliminate); break;\n\n                    // Delete is for deleting the element.\n                    case 'Delete': mutate(Tools.delete_element); break;\n\n                    // Try to enter a key.\n                    default: if (e.key.length == 1) {\n                        mutate_with_args(Tools.type_text, false, e.key);\n                    }\n\n                }\n\n                // Prevent actions.\n                e.preventDefault();\n                return false;\n            }\n\n            window.onkeyup = e => {\n                if (e.key == 'Shift') {\n                    // Unshifting return to node drawing.\n                    mutate((state: State) => {\n                        if (state.curr_tool != CanvasTool.DRAW_LINK) return;\n                        state.curr_tool = state.last_tool;\n                        return ['curr_tool'];\n                    }, false);\n\n                }\n\n                // Prevent actions.\n                e.preventDefault();\n                return false;\n            }\n        }\n    }\n}\n\nexport default App;","import { circleFromThreePoints } from \"../../common/math\";\r\nimport { FSMContext, NodeLinkEndPointsAndCircle, Point2D } from \"../../types\";\r\nimport { DrawableElement } from \"./abstract\";\r\nimport { HIT_TARGET_PADDING, NODE_RADIUS, SNAP_TO_PADDING } from \"./constants\";\r\nimport { StateNode } from \"./state_node\";\r\nimport { draw_arrow, draw_text } from \"./text_utils\";\r\n\r\n/** A link connecting 2 nodes. */\r\nexport class NodeLink extends DrawableElement {\r\n\tpublic nodeA: StateNode;\r\n\tpublic nodeB: StateNode;\r\n\tpublic text: string;\r\n\tpublic lineAngleAdjust: number;\r\n\tpublic parallelPart: number;\r\n\tpublic perpendicularPart: number;\r\n\r\n\tconstructor(a: StateNode, b: StateNode) {\r\n\t\tsuper();\r\n\t\tthis.nodeA = a;\r\n\t\tthis.nodeB = b;\r\n\t\tthis.text = '';\r\n\t\tthis.lineAngleAdjust = 0; // value to add to textAngle when link is straight line\r\n\r\n\t\t// make anchor point relative to the locations of nodeA and nodeB\r\n\t\tthis.parallelPart = 0.5; // percentage from nodeA to nodeB\r\n\t\tthis.perpendicularPart = 0; // pixels from line between nodeA and nodeB\r\n\t}\r\n\r\n\tget_anchor_point(): Point2D {\r\n\t\tconst dx = this.nodeB.x - this.nodeA.x;\r\n\t\tconst dy = this.nodeB.y - this.nodeA.y;\r\n\t\tconst scale = Math.sqrt(dx * dx + dy * dy);\r\n\t\treturn {\r\n\t\t\t'x': this.nodeA.x + dx * this.parallelPart - dy * this.perpendicularPart / scale,\r\n\t\t\t'y': this.nodeA.y + dy * this.parallelPart + dx * this.perpendicularPart / scale\r\n\t\t};\r\n\t};\r\n\r\n\tset_anchor_point(x: number, y: number) {\r\n\t\tconst dx = this.nodeB.x - this.nodeA.x;\r\n\t\tconst dy = this.nodeB.y - this.nodeA.y;\r\n\t\tconst scale = Math.sqrt(dx * dx + dy * dy);\r\n\t\tthis.parallelPart = (dx * (x - this.nodeA.x) + dy * (y - this.nodeA.y)) / (scale * scale);\r\n\t\tthis.perpendicularPart = (dx * (y - this.nodeA.y) - dy * (x - this.nodeA.x)) / scale;\r\n\t\t// snap to a straight line\r\n\t\tif (this.parallelPart > 0 && this.parallelPart < 1 && Math.abs(this.perpendicularPart) < SNAP_TO_PADDING) {\r\n\t\t\tthis.lineAngleAdjust = +(this.perpendicularPart < 0) * Math.PI;\r\n\t\t\tthis.perpendicularPart = 0;\r\n\t\t}\r\n\t};\r\n\r\n\tprivate get_endpoints_and_circle(): NodeLinkEndPointsAndCircle {\r\n\t\tif (this.perpendicularPart == 0) {\r\n\t\t\tconst midX = (this.nodeA.x + this.nodeB.x) / 2;\r\n\t\t\tconst midY = (this.nodeA.y + this.nodeB.y) / 2;\r\n\t\t\tconst start = this.nodeA.closest_point_on_circle(midX, midY);\r\n\t\t\tconst end = this.nodeB.closest_point_on_circle(midX, midY);\r\n\t\t\treturn {\r\n\t\t\t\t'hasCircle': false,\r\n\t\t\t\t'startX': start.x,\r\n\t\t\t\t'startY': start.y,\r\n\t\t\t\t'endX': end.x,\r\n\t\t\t\t'endY': end.y,\r\n\t\t\t};\r\n\t\t}\r\n\t\tconst anchor = this.get_anchor_point();\r\n\t\tconst circle = circleFromThreePoints(this.nodeA.x, this.nodeA.y, this.nodeB.x, this.nodeB.y, anchor.x, anchor.y);\r\n\t\tconst isReversed = (this.perpendicularPart > 0);\r\n\t\tconst reverseScale = isReversed ? 1 : -1;\r\n\t\tconst startAngle = Math.atan2(this.nodeA.y - circle.y, this.nodeA.x - circle.x) - reverseScale * NODE_RADIUS / circle.radius;\r\n\t\tconst endAngle = Math.atan2(this.nodeB.y - circle.y, this.nodeB.x - circle.x) + reverseScale * NODE_RADIUS / circle.radius;\r\n\t\tconst startX = circle.x + circle.radius * Math.cos(startAngle);\r\n\t\tconst startY = circle.y + circle.radius * Math.sin(startAngle);\r\n\t\tconst endX = circle.x + circle.radius * Math.cos(endAngle);\r\n\t\tconst endY = circle.y + circle.radius * Math.sin(endAngle);\r\n\t\treturn {\r\n\t\t\thasCircle: true,\r\n\t\t\tstartX: startX,\r\n\t\t\tstartY: startY,\r\n\t\t\tendX: endX,\r\n\t\t\tendY: endY,\r\n\t\t\tstartAngle: startAngle,\r\n\t\t\tendAngle: endAngle,\r\n\t\t\tcircleX: circle.x,\r\n\t\t\tcircleY: circle.y,\r\n\t\t\tcircleRadius: circle.radius,\r\n\t\t\treverseScale: reverseScale,\r\n\t\t\tisReversed: isReversed,\r\n\t\t};\r\n\t};\r\n\r\n\tdraw(c: FSMContext, with_caret: boolean = false) {\r\n\t\t\r\n\t\tconst stuff = this.get_endpoints_and_circle();\r\n\t\t// draw arc\r\n\t\tc.beginPath();\r\n\t\tif (stuff.hasCircle) {\r\n\t\t\tc.arc(stuff.circleX, stuff.circleY, stuff.circleRadius, stuff.startAngle, stuff.endAngle, stuff.isReversed);\r\n\t\t} else {\r\n\t\t\tc.moveTo(stuff.startX, stuff.startY);\r\n\t\t\tc.lineTo(stuff.endX, stuff.endY);\r\n\t\t}\r\n\t\tc.stroke();\r\n\t\t// draw the head of the arrow\r\n\t\tif (stuff.hasCircle) {\r\n\t\t\tdraw_arrow(c, stuff.endX, stuff.endY, stuff.endAngle - stuff.reverseScale * (Math.PI / 2));\r\n\t\t} else {\r\n\t\t\tdraw_arrow(c, stuff.endX, stuff.endY, Math.atan2(stuff.endY - stuff.startY, stuff.endX - stuff.startX));\r\n\t\t}\r\n\t\t// draw the text\r\n\t\tif (stuff.hasCircle) {\r\n\t\t\tlet startAngle = stuff.startAngle;\r\n\t\t\tlet endAngle = stuff.endAngle;\r\n\t\t\tif (endAngle < startAngle) {\r\n\t\t\t\tendAngle += Math.PI * 2;\r\n\t\t\t}\r\n\t\t\tconst textAngle = (startAngle + endAngle) / 2 + +stuff.isReversed * Math.PI;\r\n\t\t\tconst textX = stuff.circleX + stuff.circleRadius * Math.cos(textAngle);\r\n\t\t\tconst textY = stuff.circleY + stuff.circleRadius * Math.sin(textAngle);\r\n\t\t\tdraw_text(c, this.text, textX, textY, textAngle, this.selected, with_caret);\r\n\t\t} else {\r\n\t\t\tconst textX = (stuff.startX + stuff.endX) / 2;\r\n\t\t\tconst textY = (stuff.startY + stuff.endY) / 2;\r\n\t\t\tconst textAngle = Math.atan2(stuff.endX - stuff.startX, stuff.startY - stuff.endY);\r\n\t\t\tdraw_text(c, this.text, textX, textY, textAngle + this.lineAngleAdjust, this.selected, with_caret);\r\n\t\t}\r\n\t};\r\n\r\n\tcontains_point(pos: Point2D) {\r\n\t\tconst x = pos.x;\r\n\t\tconst y = pos.y;\r\n\t\tconst stuff = this.get_endpoints_and_circle();\r\n\t\tif (stuff.hasCircle) {\r\n\t\t\tconst dx = x - stuff.circleX;\r\n\t\t\tconst dy = y - stuff.circleY;\r\n\t\t\tconst distance = Math.sqrt(dx * dx + dy * dy) - stuff.circleRadius;\r\n\t\t\tif (Math.abs(distance) < HIT_TARGET_PADDING) {\r\n\t\t\t\tlet angle = Math.atan2(dy, dx);\r\n\t\t\t\tlet startAngle = stuff.startAngle;\r\n\t\t\t\tlet endAngle = stuff.endAngle;\r\n\t\t\t\tif (stuff.isReversed) {\r\n\t\t\t\t\tconst temp = startAngle;\r\n\t\t\t\t\tstartAngle = endAngle;\r\n\t\t\t\t\tendAngle = temp;\r\n\t\t\t\t}\r\n\t\t\t\tif (endAngle < startAngle) {\r\n\t\t\t\t\tendAngle += Math.PI * 2;\r\n\t\t\t\t}\r\n\t\t\t\tif (angle < startAngle) {\r\n\t\t\t\t\tangle += Math.PI * 2;\r\n\t\t\t\t} else if (angle > endAngle) {\r\n\t\t\t\t\tangle -= Math.PI * 2;\r\n\t\t\t\t}\r\n\t\t\t\treturn (angle > startAngle && angle < endAngle);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst dx = stuff.endX - stuff.startX;\r\n\t\t\tconst dy = stuff.endY - stuff.startY;\r\n\t\t\tconst length = Math.sqrt(dx * dx + dy * dy);\r\n\t\t\tconst percent = (dx * (x - stuff.startX) + dy * (y - stuff.startY)) / (length * length);\r\n\t\t\tconst distance = (dx * (y - stuff.startY) - dy * (x - stuff.startX)) / length;\r\n\t\t\treturn (percent > 0 && percent < 1 && Math.abs(distance) < HIT_TARGET_PADDING);\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n}","/** \n * Collision detection of states and nodes.\n */\n\nimport { get_state } from \"../../store/store\";\nimport { Point2D } from \"../../types\";\nimport { DrawableElement } from \"../elements/abstract\";\n\nexport function object_at(pos: Point2D): DrawableElement | undefined {\n    const nodes = get_state('nodes');\n    const links = get_state('links');\n\n    for (let i = 0; i < nodes.length; i++) {\n        if (nodes[i].contains_point(pos)) {\n            return nodes[i];\n        }\n    }\n    for (let i = 0; i < links.length; i++) {\n        if (links[i].contains_point(pos)) {\n            return links[i];\n        }\n    }\n\n    return undefined;\n}","/**\n * Canvas input handlers.\n * \n * @note Move this to a class in the future to avoid dependencies.\n */\n\nimport { subset_construct } from \"../../algs/subset_construct\";\nimport { get_state, mutate, mutate_with_args } from \"../../store/store\";\nimport { CanvasTool, MouseButton } from \"../../types\";\nimport { StateNode } from \"../elements/state_node\";\nimport * as Tools from \"../tool_bar/tools\";\nimport { Canvas } from \"./canvas\";\nimport { object_at } from \"./collide\";\n\nexport class _CanvasHandler {\n    private canvas: Canvas;\n\n    constructor(canvas: Canvas) {\n        this.canvas = canvas;\n    }\n\n    /** Dummy event handler. */\n    prevent_default(e: Event) {\n        e.preventDefault();\n        return false;\n    }\n\n    /**\n     * Sync up the state's cursor with the given mouse event.\n     * @param canvas_coord Point in canvas element space.\n     */\n    sync_canvas_coordinates(e: MouseEvent, update_object_at_cursor: boolean = false) {\n        this.canvas.cursor.last_pos = this.canvas.event_to_canvas_space(e);\n        if (update_object_at_cursor) this.canvas.cursor.obj_at_last_pos = object_at(this.canvas.cursor.last_pos);\n    }\n\n    mouse_down = (e: MouseEvent) => {\n        // Update cursor.\n        this.sync_canvas_coordinates(e, true);\n        this.canvas.cursor.mouse_down_pos = { ... this.canvas.cursor.last_pos };\n        this.canvas.cursor.obj_at_mouse_down = this.canvas.cursor.obj_at_last_pos;\n\n        // Select if possible.\n        mutate(Tools.update_select);\n        this.canvas.cursor.down = true;\n\n\n        // Hand over control to tools.\n        switch (get_state('curr_tool')) {\n            case CanvasTool.DRAW_LINK: mutate(Tools.update_temp_link, false);\n        }\n\n        this.canvas.cursor.moving = false;\n    }\n\n    mouse_up = (e: MouseEvent) => {\n        // Update cursor.\n        this.sync_canvas_coordinates(e);\n        this.canvas.cursor.down = false;\n\n        if (this.canvas.cursor.moving) {\n            mutate(Tools.end_drag);\n        } else {\n            // The mouse was clicked.\n            if (e.button == MouseButton.LEFT)\n                this.left_click();\n            else if (e.button == MouseButton.RIGHT)\n                this.right_click();\n        }\n\n        // Pop the temp link if it exists.\n        if (get_state('temp_link') != undefined) mutate(Tools.end_temp_link);\n\n        this.canvas.cursor.moving = false;\n\n        e.preventDefault();\n        return false;\n    }\n\n    mouse_move = (e: MouseEvent) => {\n        // Update cursor.\n        this.sync_canvas_coordinates(e, true);\n        this.canvas.cursor.moving = true;\n\n        // Only drag if the mouse was down.\n        if (this.canvas.cursor.down) {\n            this.drag();\n        }\n    }\n\n    dbl_click = (e: MouseEvent) => {\n        // Shortcut for node creation / toggling accept state ported from original.\n        this.sync_canvas_coordinates(e);\n\n        const obj = this.canvas.cursor.obj_at_last_pos;\n\n        if (obj instanceof StateNode)\n            // Toggle accept.\n            mutate(Tools.toggle_accept_state);\n        else\n            // Create node.\n            mutate(Tools.draw_node);\n    }\n\n    wheel = (e: WheelEvent) => {\n        if (!this.canvas.cursor.down) {\n            mutate_with_args(Tools.zoom, true, e);\n\n            e.preventDefault();\n            return false;\n        }\n    }\n\n    private drag = () => {\n        switch (get_state('curr_tool')) {\n            // A link is being drawn.\n            case CanvasTool.DRAW_LINK: { mutate(Tools.update_temp_link, false); break; }\n            // An object is being dragged.\n            default: mutate(Tools.drag, false);\n        }\n    }\n\n    private left_click = () => {\n        switch (get_state('curr_tool')) {\n            // A node is being created.\n            case CanvasTool.DRAW_NODE: mutate(Tools.draw_node); break;\n            case CanvasTool.DRAW_ACCEPT: mutate(Tools.toggle_accept_state); break;\n            case CanvasTool.ELIMINATE: mutate(Tools.eliminate); break;\n        }\n    }\n\n    private right_click = () => {\n        mutate(subset_construct);\n    }\n}\n\n","/**\n * Canvas component wrapper and event binder.\n * The Canvas retains and updates its own cursor data state.\n */\n\nimport { Component, ComponentChild, createRef, h } from \"preact\";\nimport { access, get_state, set_default_canvas, subscribe, unsubscribe } from \"../../store/store\";\nimport { CanvasRectangle, CanvasViewTransform, FSMContext, Point2D } from \"../../types\";\nimport { DrawableElement } from \"../elements/abstract\";\nimport { CANVAS_SIZE } from \"../elements/constants\";\nimport { _CanvasHandler } from \"./handlers\";\n\nimport './style.css';\n\n/** State only accessible to the canvas and it's handlers. */\ntype CanvasRenderState = {\n    caret_visible: boolean,\n    selected_zone: CanvasRectangle | undefined,\n};\n\ntype CursorData = {\n    mouse_down_pos: Point2D,\n    obj_at_mouse_down: DrawableElement | undefined,\n    last_pos: Point2D,\n    obj_at_last_pos: DrawableElement | undefined,\n    down: boolean,\n    moving: boolean,\n};\n\nexport class Canvas extends Component<any, CanvasRenderState> {\n    private ref = createRef();\n    public el: HTMLCanvasElement | undefined;\n\n    public ctx: CanvasRenderingContext2D | undefined;\n    public cursor: CursorData;\n\n    private handlers: _CanvasHandler;\n\n    private caret_interval: number = -1;\n\n    constructor() {\n        super();\n        this.state = {\n            caret_visible: false,\n            selected_zone: undefined,\n        };\n        this.cursor = {\n            mouse_down_pos: { x: 0, y: 0 },\n            obj_at_mouse_down: undefined,\n            last_pos: { x: 0, y: 0 },\n            obj_at_last_pos: undefined,\n            down: false,\n            moving: false,\n        };\n        this.handlers = new _CanvasHandler(this);\n    }\n\n    componentDidMount() {\n        set_default_canvas(this);\n        this.el = this.ref.current;\n        this.ctx = this.el!.getContext('2d')!;\n\n        this.el!.onmousedown = this.handlers.mouse_down;\n        this.el!.onmousemove = this.handlers.mouse_move;\n        this.el!.onmouseup = this.handlers.mouse_up;\n        this.el!.ondblclick = this.handlers.dbl_click;\n        this.el!.oncontextmenu = this.handlers.prevent_default;\n        this.el!.onwheel = this.handlers.wheel;\n\n        subscribe(['nodes', 'links', 'active_objects', 'selected_object', 'temp_link', 'view_zone'], this);\n        access(this.draw);\n    }\n\n    componentWillUnmount() {\n        unsubscribe(this);\n    }\n\n    shouldComponentUpdate() {\n        this.reinit_caret();\n        this.draw();\n        return false;\n    }\n\n    render(): ComponentChild {\n        return (\n            <canvas ref={this.ref} id=\"canvas\" width={CANVAS_SIZE.x} height={CANVAS_SIZE.y}>\n                <span>Your browser does not support<br />the HTML5 &lt;canvas&gt; element</span>\n            </canvas>\n        );\n    }\n\n    /** Restart the caret blink interval. */\n    reinit_caret() {\n        if (get_state('selected_object') != null && this.caret_interval == -1) {\n            this.caret_interval = window.setInterval(this.caret_function, 300);\n        }\n    }\n\n    private caret_function = () => {\n        if (get_state('selected_object') == null) {\n            window.clearInterval(this.caret_interval);\n            this.caret_interval = -1;\n        } else {\n            this.setState({ caret_visible: !this.state.caret_visible });\n        }\n    }\n\n    /**\n     * Convert a mouse event to it's corresponding point in canvas draw space.\n     */\n    public event_to_canvas_space(e: MouseEvent): Point2D {\n        const view = get_state('view_zone');\n        const rect = this.el!.getBoundingClientRect();\n        const element_space = {\n            x: e.clientX - rect.x,\n            y: e.clientY - rect.y,\n        };\n\n        // Apply the inverse of the view transform.\n        return {\n            x: (element_space.x - view.x) / view.zoom,\n            y: (element_space.y - view.y) / view.zoom,\n        }\n    }\n\n    /** Convert a point in canvas element space to it's corresponding point in canvas draw space. */\n    public point_to_canvas_space(p: Point2D): Point2D {\n        const view = get_state('view_zone');\n\n        // Apply the inverse of the view transform.\n        return {\n            x: (p.x - view.x) / view.zoom,\n            y: (p.y - view.y) / view.zoom,\n        }\n    }\n\n    /** Draw the canvas using its own 2D context. */\n    draw = () => {\n        const zone = get_state('view_zone');\n\n        if (this.ctx != null) {\n            this.ctx.setTransform(zone.zoom, 0, 0, zone.zoom, zone.x, zone.y);\n            this.draw_using(this.ctx, true);\n        } else if (this.el != null) {\n            const ctx = this.el.getContext(\"2d\");\n            if (ctx != null) {\n                this.ctx = ctx;\n                ctx.setTransform(zone.zoom, 0, 0, zone.zoom, zone.x, zone.y);\n                this.draw_using(ctx, true);\n            }\n        }\n    }\n\n    draw_using(ctx: FSMContext, with_border: boolean = false) {\n        if (this.el != null) {\n            const nodes = get_state(\"nodes\");\n            const links = get_state(\"links\");\n            const selected_object = get_state(\"selected_object\");\n            const current_link = get_state(\"temp_link\");\n\n            // Draw rectangle.\n            const upper_left = this.point_to_canvas_space({ x: 0, y: 0 });\n            const lower_right = this.point_to_canvas_space({ x: this.el.width, y: this.el.height });\n            ctx.clearRect(upper_left.x, upper_left.y, lower_right.x - upper_left.x, lower_right.y - upper_left.y);\n            ctx.save();\n\n            if (with_border) {\n                ctx.beginPath();\n                ctx.rect(-1, -1, this.el.width + 2, this.el.height + 2);\n                ctx.stroke();\n            }\n\n            for (let i = 0; i < nodes.length; i++) {\n                ctx.lineWidth = 1;\n                ctx.fillStyle = ctx.strokeStyle = nodes[i].curr_colour();\n                nodes[i].draw(ctx, nodes[i] == selected_object && this.state.caret_visible);\n            }\n            for (let i = 0; i < links.length; i++) {\n                ctx.lineWidth = 1;\n                ctx.fillStyle = ctx.strokeStyle = links[i].curr_colour();\n                links[i].draw(ctx, links[i] == selected_object && this.state.caret_visible);\n            }\n            if (current_link != null) {\n                ctx.lineWidth = 1;\n                ctx.fillStyle = ctx.strokeStyle = 'black';\n                current_link.draw(ctx, current_link == selected_object && this.state.caret_visible);\n            }\n\n            // // Debug.\n            // ctx.fillStyle = ctx.strokeStyle = 'magenta';\n            // if (this.cursor.obj_at_mouse_down != null) this.cursor.obj_at_mouse_down.draw(ctx, false);\n            // ctx.fillStyle = ctx.strokeStyle = 'lime';\n            // if (this.cursor.obj_at_last_pos != null) this.cursor.obj_at_last_pos.draw(ctx, false);\n\n            ctx.restore();\n        }\n    }\n}","module.exports = require(\"preact\");","import { State, StateKey } from \"../../types\";\n\nexport { redo, undo } from \"../../store/undo_redo\";\nexport { subset_construct } from \"../../algs/subset_construct\";\n\nexport function reset_camera(state: State): StateKey[] | undefined {\n    state.view_zone = { zoom: 1, x: 0, y: 0 };\n\n    return ['view_zone'];\n}\n\nexport {open, save_as} from \"../../store/files\";","import { FSMContext, Point2D } from \"../../types\";\r\nimport { DrawableElement } from \"./abstract\";\r\nimport { HIT_TARGET_PADDING, SNAP_TO_PADDING } from \"./constants\";\r\nimport { StateNode } from \"./state_node\";\r\nimport { draw_arrow, draw_text } from \"./text_utils\";\r\n\r\n/** A link from a textbox to a node. */\r\nexport class StartLink extends DrawableElement {\r\n\tpublic node: StateNode;\r\n\tpublic deltaX: number;\r\n\tpublic deltaY: number;\r\n\tpublic text: string;\r\n\r\n\tconstructor(node: StateNode, start?: Point2D) {\r\n\t\tsuper();\r\n\t\tthis.node = node;\r\n\t\tthis.deltaX = 0;\r\n\t\tthis.deltaY = 0;\r\n\t\tthis.text = '';\r\n\r\n\t\tif (start) {\r\n\t\t\tthis.set_anchor_point(start.x, start.y);\r\n\t\t}\r\n\t}\r\n\r\n\tset_anchor_point(x: number, y: number) {\r\n\t\tthis.deltaX = x - this.node.x;\r\n\t\tthis.deltaY = y - this.node.y;\r\n\r\n\t\tif (Math.abs(this.deltaX) < SNAP_TO_PADDING) {\r\n\t\t\tthis.deltaX = 0;\r\n\t\t}\r\n\r\n\t\tif (Math.abs(this.deltaY) < SNAP_TO_PADDING) {\r\n\t\t\tthis.deltaY = 0;\r\n\t\t}\r\n\t};\r\n\r\n\tget_start_point() {\r\n\t\treturn {\r\n\t\t\tx: this.node.x + this.deltaX,\r\n\t\t\ty: this.node.y + this.deltaY\r\n\t\t}\r\n\t}\r\n\r\n\tget_endpoints() {\r\n\t\tconst startX = this.node.x + this.deltaX;\r\n\t\tconst startY = this.node.y + this.deltaY;\r\n\t\tconst end = this.node.closest_point_on_circle(startX, startY);\r\n\t\treturn {\r\n\t\t\t'startX': startX,\r\n\t\t\t'startY': startY,\r\n\t\t\t'endX': end.x,\r\n\t\t\t'endY': end.y,\r\n\t\t};\r\n\t};\r\n\r\n\tdraw(c: FSMContext, with_caret: boolean = false) {\r\n\t\tconst stuff = this.get_endpoints();\r\n\r\n\t\t// draw the line\r\n\t\tc.beginPath();\r\n\t\tc.moveTo(stuff.startX, stuff.startY);\r\n\t\tc.lineTo(stuff.endX, stuff.endY);\r\n\t\tc.stroke();\r\n\r\n\t\t// draw the text at the end without the arrow\r\n\t\tconst textAngle = Math.atan2(stuff.startY - stuff.endY, stuff.startX - stuff.endX);\r\n\t\tdraw_text(c, this.text, stuff.startX, stuff.startY, textAngle, this.selected, with_caret);\r\n\r\n\t\t// draw the head of the arrow\r\n\t\tdraw_arrow(c, stuff.endX, stuff.endY, Math.atan2(-this.deltaY, -this.deltaX));\r\n\t};\r\n\r\n\tcontains_point(pos: Point2D) {\r\n\t\tconst x = pos.x;\r\n\t\tconst y = pos.y;\r\n\t\tconst stuff = this.get_endpoints();\r\n\t\tconst dx = stuff.endX - stuff.startX;\r\n\t\tconst dy = stuff.endY - stuff.startY;\r\n\t\tconst length = Math.sqrt(dx * dx + dy * dy);\r\n\t\tconst percent = (dx * (x - stuff.startX) + dy * (y - stuff.startY)) / (length * length);\r\n\t\tconst distance = (dx * (y - stuff.startY) - dy * (x - stuff.startX)) / length;\r\n\t\treturn (percent > 0 && percent < 1 && Math.abs(distance) < HIT_TARGET_PADDING);\r\n\t};\r\n}","/** \r\n * Math utility functions.\r\n * @module\r\n */\r\n\r\n/**\r\n * Return the determinant of\r\n * a b c\r\n * d e f\r\n * g h i\r\n */\r\nfunction det(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) {\r\n\treturn a * e * i + b * f * g + c * d * h - a * f * h - b * d * i - c * e * g;\r\n}\r\n\r\n/**\r\n * Return a circle object given 3 coordinates.\r\n */\r\nexport function circleFromThreePoints(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number) {\r\n\tconst a = det(x1, y1, 1, x2, y2, 1, x3, y3, 1);\r\n\tconst bx = -det(x1 * x1 + y1 * y1, y1, 1, x2 * x2 + y2 * y2, y2, 1, x3 * x3 + y3 * y3, y3, 1);\r\n\tconst by = det(x1 * x1 + y1 * y1, x1, 1, x2 * x2 + y2 * y2, x2, 1, x3 * x3 + y3 * y3, x3, 1);\r\n\tconst c = -det(x1 * x1 + y1 * y1, x1, y1, x2 * x2 + y2 * y2, x2, y2, x3 * x3 + y3 * y3, x3, y3);\r\n\treturn {\r\n\t\t'x': -bx / (2 * a),\r\n\t\t'y': -by / (2 * a),\r\n\t\t'radius': Math.sqrt(bx * bx + by * by - 4 * a * c) / (2 * Math.abs(a))\r\n\t};\r\n}\r\n\r\n/**\r\n * Replace excess zeroes with .'s.\r\n */\r\nexport function fixed(number: number, digits: number) {\r\n\treturn number.toFixed(digits).replace(/0+$/, '').replace(/\\.$/, '');\r\n}\r\n","import { fixed } from \"../common/math\";\nimport { measure_text } from \"../components/elements/text_utils\";\nimport { Point2D, State, StateKey } from \"../types\";\n\n// draw using this instead of a canvas and call toLaTeX() afterward\n/**\n * LaTeX rendering context.\n * @extends CanvasRenderingContext2D\n */\nexport class ExportAsLaTeX {\n\tprivate _points: Point2D[];\n\tprivate _texData: string;\n\tprivate _scale: number;\n\tpublic strokeStyle: string = \"black\";\n\tpublic fillStyle: string = \"black\";\n\tpublic lineWidth: number = 1;\n\tpublic font: string = '';\n\n\tconstructor() {\n\t\tthis._points = [];\n\t\tthis._texData = '';\n\t\tthis._scale = 0.1; // to convert pixels to document space (TikZ breaks if the numbers get too big, above 500?)\n\t}\n\n\ttoLaTeX() {\n\t\treturn '\\\\documentclass[12pt]{article}\\n' +\n\t\t\t'\\\\usepackage{tikz}\\n' +\n\t\t\t'\\n' +\n\t\t\t'\\\\begin{document}\\n' +\n\t\t\t'\\n' +\n\t\t\t'\\\\begin{center}\\n' +\n\t\t\t'\\\\begin{tikzpicture}[scale=0.2]\\n' +\n\t\t\t'\\\\tikzstyle{every node}+=[inner sep=0pt]\\n' +\n\t\t\tthis._texData +\n\t\t\t'\\\\end{tikzpicture}\\n' +\n\t\t\t'\\\\end{center}\\n' +\n\t\t\t'\\n' +\n\t\t\t'\\\\end{document}\\n';\n\t}\n\n\tbeginPath() {\n\t\tthis._points = [];\n\t}\n\n\tarc(x: number, y: number, radius: number, startAngle: number, endAngle: number, isReversed: boolean) {\n\t\tx *= this._scale;\n\t\ty *= this._scale;\n\t\tradius *= this._scale;\n\t\tif (endAngle - startAngle == Math.PI * 2) {\n\t\t\tthis._texData += '\\\\draw [' + this.strokeStyle + '] (' + fixed(x, 3) + ',' + fixed(-y, 3) + ') circle (' + fixed(radius, 3) + ');\\n';\n\t\t} else {\n\t\t\tif (isReversed) {\n\t\t\t\tconst temp = startAngle;\n\t\t\t\tstartAngle = endAngle;\n\t\t\t\tendAngle = temp;\n\t\t\t}\n\t\t\tif (endAngle < startAngle) {\n\t\t\t\tendAngle += Math.PI * 2;\n\t\t\t}\n\t\t\t// TikZ needs the angles to be in between -2pi and 2pi or it breaks\n\t\t\tif (Math.min(startAngle, endAngle) < -2 * Math.PI) {\n\t\t\t\tstartAngle += 2 * Math.PI;\n\t\t\t\tendAngle += 2 * Math.PI;\n\t\t\t} else if (Math.max(startAngle, endAngle) > 2 * Math.PI) {\n\t\t\t\tstartAngle -= 2 * Math.PI;\n\t\t\t\tendAngle -= 2 * Math.PI;\n\t\t\t}\n\t\t\tstartAngle = -startAngle;\n\t\t\tendAngle = -endAngle;\n\t\t\tthis._texData += '\\\\draw [' + this.strokeStyle + '] (' + fixed(x + radius * Math.cos(startAngle), 3) + ',' + fixed(-y + radius * Math.sin(startAngle), 3) + ') arc (' + fixed(startAngle * 180 / Math.PI, 5) + ':' + fixed(endAngle * 180 / Math.PI, 5) + ':' + fixed(radius, 3) + ');\\n';\n\t\t}\n\t}\n\n\tmoveTo(x: number, y: number) {\n\t\tx *= this._scale;\n\t\ty *= this._scale;\n\t\tthis._points.push({ 'x': x, 'y': y });\n\t}\n\n\tlineTo(x: number, y: number) {\n\t\tx *= this._scale;\n\t\ty *= this._scale;\n\t\tthis._points.push({ 'x': x, 'y': y });\n\t}\n\n\tstroke() {\n\t\tif (this._points.length == 0) return;\n\t\tthis._texData += '\\\\draw [' + this.strokeStyle + ']';\n\t\tfor (let i = 0; i < this._points.length; i++) {\n\t\t\tconst p = this._points[i];\n\t\t\tthis._texData += (i > 0 ? ' --' : '') + ' (' + fixed(p.x, 2) + ',' + fixed(-p.y, 2) + ')';\n\t\t}\n\t\tthis._texData += ';\\n';\n\t}\n\n\tfill() {\n\t\tif (this._points.length == 0) return;\n\t\tthis._texData += '\\\\fill [' + this.strokeStyle + ']';\n\t\tfor (let i = 0; i < this._points.length; i++) {\n\t\t\tconst p = this._points[i];\n\t\t\tthis._texData += (i > 0 ? ' --' : '') + ' (' + fixed(p.x, 2) + ',' + fixed(-p.y, 2) + ')';\n\t\t}\n\t\tthis._texData += ';\\n';\n\t}\n\n\tadvancedFillText(text: string, originalText: string, x: number, y: number, angleOrNull: number | undefined) {\n\t\tif (text.replace(' ', '').length > 0) {\n\t\t\tlet nodeParams = '';\n\t\t\t// x and y start off as the center of the text, but will be moved to one side of the box when angleOrNull != null\n\t\t\tif (angleOrNull != null) {\n\t\t\t\tconst width = measure_text(text);\n\t\t\t\tconst dx = Math.cos(angleOrNull);\n\t\t\t\tconst dy = Math.sin(angleOrNull);\n\t\t\t\tif (Math.abs(dx) > Math.abs(dy)) {\n\t\t\t\t\tif (dx > 0) nodeParams = '[right] ', x -= width / 2;\n\t\t\t\t\telse nodeParams = '[left] ', x += width / 2;\n\t\t\t\t} else {\n\t\t\t\t\tif (dy > 0) nodeParams = '[below] ', y -= 10;\n\t\t\t\t\telse nodeParams = '[above] ', y += 10;\n\t\t\t\t}\n\t\t\t}\n\t\t\tx *= this._scale;\n\t\t\ty *= this._scale;\n\t\t\tthis._texData += '\\\\draw (' + fixed(x, 2) + ',' + fixed(-y, 2) + ') node ' + nodeParams + '{$' + originalText.replace(/ /g, '\\\\mbox{ }') + '$};\\n';\n\t\t}\n\t}\n\n\ttranslate() { }\n\tsave() { }\n\trestore() { }\n\tclearRect() { }\n\trect() { }\n}\n\nexport function export_to_latex(state: State): StateKey[] | undefined {\n\tconst exporter = new ExportAsLaTeX();\n\n\tif (state.selected_object != null) {\n\t\tstate.selected_object.selected = false;\n\t\tstate.selected_object = undefined;\n\t}\n\n\tstate.canvas.draw_using(exporter);\n\n\tnavigator.clipboard.writeText(exporter.toLaTeX());\n\n\treturn ['selected_object'];\n}","/**\n * Data objects parsed from the canvas elements.\n */\n\nimport { FSMCanvasState, Point2D } from \"../types\";\nimport { AnyLink, FSMElementString, FSMLink, FSMStringableElement } from \"../components/elements/abstract\";\nimport { NodeLink } from \"../components/elements/node_link\";\nimport { SelfLink } from \"../components/elements/self_link\";\nimport { StartLink } from \"../components/elements/start_link\";\nimport { StateNode } from \"../components/elements/state_node\";\nimport { EPSILON } from \"./constants\";\nimport { inplace_union, rand_pos, to_symbol, union } from \"./shared_utils\";\nimport { force_update } from \"../store/store\";\n\n/**\n * Utility data for FAs. Can be used to test strings,\n * and evaluate the delta function.\n */\nexport class FAData {\n    /** Names of all of the states. */\n    state_names: string[];\n    /** Transitions from the ith state via a string to a list of states. */\n    transitions: Map<number, Map<string, number[]>>;\n    /** Index of starting state. */\n    starting_state: number;\n    /** Index of accepting states. */\n    accepting_states: number[];\n\n    /**\n     * Create an empty FAData.\n     */\n    constructor() {\n        this.state_names = [];\n        this.transitions = new Map();\n        this.starting_state = -1;\n        this.accepting_states = [];\n    }\n    /**\n     * Load states and links from elements into this FAData.\n     * Automatically generate state transitions.\n     */\n    load(nodes: StateNode[], links: AnyLink[]) {\n        // Reset\n        this.state_names = [];\n        this.transitions = new Map();\n        this.starting_state = -1;\n        this.accepting_states = [];\n\n        const node_to_index = new Map<FSMElementString, number>();\n\n        // Get nodes.\n        let curr = 0;\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n\n            node_to_index.set(to_symbol(node), curr);\n            this.state_names.push(node.text);\n\n            if (node.isAcceptState)\n                this.accepting_states.push(curr);\n\n            curr++;\n        }\n\n        // Get links.\n        for (let i = 0; i < links.length; i++) {\n            const link = links[i];\n\n            if (link instanceof NodeLink) {\n                const start = node_to_index.get(to_symbol(link.nodeA));\n                const end = node_to_index.get(to_symbol(link.nodeB));\n                const options = link.text.split(',').map(s => s.trim());\n\n                if (start != null && end != null) {\n                    // Initialize transition map.\n                    let map = this.transitions.get(start);\n                    if (map == null) {\n                        map = new Map<string, number[]>();\n                        this.transitions.set(start, map);\n                    }\n\n                    // Append options.\n                    for (const option of options) {\n                        let opt = map.get(option);\n                        if (opt == null) {\n                            opt = [];\n                            map.set(option, opt);\n                        }\n\n                        opt.push(end);\n                    }\n                }\n            }\n            else if (link instanceof SelfLink) {\n                const start = node_to_index.get(to_symbol(link.node));\n                const end = start;\n                const options = link.text.split(',').map(s => s.trim());\n\n                if (start != null && end != null) {\n                    // Initialize transition map.\n                    let map = this.transitions.get(start);\n                    if (map == null) {\n                        map = new Map<string, number[]>();\n                        this.transitions.set(start, map);\n                    }\n\n                    // Append options.\n                    for (const option of options) {\n                        let opt = map.get(option);\n                        if (opt == null) {\n                            opt = [];\n                            map.set(option, opt);\n                        }\n\n                        opt.push(end);\n                    }\n                }\n            }\n            else if (link instanceof StartLink) {\n                const index = node_to_index.get(to_symbol(link.node));\n                if (index != null) this.starting_state = index;\n            }\n        }\n    }\n\n    /**\n     * Create StateNodes and Links from this FAData.\n     * All elements are created at a random position\n     * in the canvas.\n     */\n    create_elements(): FSMCanvasState {\n        const new_nodes: StateNode[] = [];\n        const new_links: FSMLink[] = [];\n\n        const index_to_node = new Map<number, StateNode>();\n\n        for (let i = 0; i < this.state_names.length; i++) {\n            const pos = rand_pos();\n            const node = new StateNode(pos.x, pos.y);\n            node.text = this.state_names[i];\n            index_to_node.set(i, node);\n\n            if (this.accepting_states.includes(i))\n                node.isAcceptState = true;\n\n            new_nodes.push(node);\n        }\n\n        for (const [start, transitions] of this.transitions.entries()) {\n            const start_node = index_to_node.get(start);\n\n            if (start_node != null) {\n                for (const [transition, ends] of transitions.entries()) {\n                    for (const end of ends) {\n                        const end_node = index_to_node.get(end);\n                        if (end_node != null) {\n                            let link;\n                            if (start == end) {\n                                link = new SelfLink(start_node);\n\n                            } else {\n                                link = new NodeLink(start_node, end_node);\n                                link.perpendicularPart += 100 * Math.random();\n                            }\n\n                            link.text = transition;\n                            new_links.push(link);\n                        }\n                    }\n                }\n            }\n        }\n\n        if (this.starting_state != -1) {\n            const start = index_to_node.get(this.starting_state);\n            if (start != null) {\n                const link = new StartLink(start);\n                const pos = rand_pos();\n                link.set_anchor_point(pos.x, pos.y);\n                link.text = 'start';\n                new_links.push(link);\n            }\n        }\n\n        return {\n            nodes: new_nodes,\n            links: new_links\n        }\n    }\n\n    /**\n     * Add a new transition from an index to another via a transition.\n     */\n    add_transitions(from: number, transition: string, to: number[]) {\n        let map = this.transitions.get(from);\n        if (map == null) {\n            map = new Map<string, number[]>();\n            this.transitions.set(from, map);\n        }\n\n        let opt = map.get(transition);\n        if (opt == null) {\n            opt = [];\n            map.set(transition, opt);\n        }\n\n        inplace_union(opt, to);\n    }\n\n    /**\n     * Add one new transition from an index to another via a transition.\n     */\n    add_transition(from: number, transition: string, to: number) {\n        let map = this.transitions.get(from);\n        if (map == null) {\n            map = new Map<string, number[]>();\n            this.transitions.set(from, map);\n        }\n\n        let opt = map.get(transition);\n        if (opt == null) {\n            opt = [];\n            map.set(transition, opt);\n        }\n\n        if (!opt.includes(to)) opt.push(to);\n    }\n\n    /**\n     * Delta transition for this FA.\n     * \n     * *transition must not be epsilon\n     */\n    deep_delta(state: number, transition: string): number[] {\n        const shallow_dests: number[] = [];\n\n        // Explore each equivalent starting state, and add the destinations.\n        for (const from of this.get_equivalents(state)) {\n            inplace_union(shallow_dests, this.shallow_delta(from, transition));\n        }\n\n        // Return each equivalent destination state.\n        return this.get_equivalents(shallow_dests).slice();\n    }\n\n    /**\n     * Shallow delta function for this FA, ignoring epsilon transitions.\n     */\n    shallow_delta(state: number, transition: string): number[] {\n        let map = this.transitions.get(state);\n        if (map != null) {\n            let opt = map.get(transition);\n            if (opt != null) {\n                return opt.slice();\n            }\n        }\n\n        return [];\n    }\n\n    /**\n     * Return the set of all equivalent states in this fa.\n     * Equivalent states are states reachable via epsilon transitions.\n     * @param {number|number>} state\n     */\n    get_equivalents(state: number | number[]): number[] {\n        // Make a set of the initial states from which to begin the search.\n        if (!Array.isArray(state))\n            state = [state];\n        else\n            state = state.slice();\n\n        const stack = state.slice();\n\n        let top = stack.pop();\n\n        while (top != null) {\n            let destinations = this.shallow_delta(top, EPSILON);\n\n            for (const dest of destinations.values())\n                // The state has not yet been explored, so add it to the stack and the set.\n                if (!state.includes(dest)) { stack.push(dest); state.push(dest); }\n\n            top = stack.pop();\n        }\n\n        return state;\n    }\n\n    /**\n     * Return true if the FA is deterministic.\n     */\n    is_deterministic() {\n        // Check that all transitions are non epsilon, and all transitions are\n        // deterministic (return size of 1 state).\n        for (const trans_map of this.transitions.values()) {\n            for (const [transition, result] of trans_map.entries()) {\n                if (transition == EPSILON || result.length > 1)\n                    return false;\n            }\n        }\n\n        return true;\n    }\n}\n\n/**\n * Utility data for a graph where StateNodes are vertices,\n * links' anchor points are vertices, and edges connect\n * vertices and links as needed.\n * \n * The graph is undirected.\n * \n * Each vertex has a {x, y} position object.\n */\nexport class FSAGraph {\n    private node_to_vert: Map<FSMElementString, number>;\n    private vert_to_node: Map<number, FSMStringableElement>;\n    private vertices: Point2D[];\n    private edges: [number, number][];\n\n    /**\n     * Create an empty FSAGraph.\n     * Modifying the vertices and edges does not modify\n     * the canvas until sync_positions is called.\n     */\n    constructor() {\n        /** Map from canvas element to vertex index. */\n        this.node_to_vert = new Map();\n        /** Map from vertex index to canvas element. */\n        this.vert_to_node = new Map();\n        /** List of vertex position objects. */\n        this.vertices = [];\n        /** List of edge tuples [a, b]. a,b are vertex indices\n         * with a < b always. */\n        this.edges = [];\n    }\n\n    /**\n     * Load states and links from elements into this FSAGraph.\n     */\n    load(nodes: StateNode[], links: AnyLink[]) {\n        this.node_to_vert = new Map();\n        this.vert_to_node = new Map();\n        this.vertices = [];\n        this.edges = [];\n\n        let curr = 0;\n\n        // Append nodes.\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n            this.vertices[curr] = { x: node.x, y: node.y };\n            this.node_to_vert.set(to_symbol(node), curr);\n            this.vert_to_node.set(curr, node);\n            curr++;\n        }\n\n        // Append links.\n        for (let i = 0; i < links.length; i++) {\n            const link = links[i];\n            if (link instanceof NodeLink) {\n                const pos = link.get_anchor_point();\n                this.vertices[curr] = { x: pos.x, y: pos.y };\n                this.node_to_vert.set(to_symbol(link), curr);\n                this.vert_to_node.set(curr, link);\n\n                // Add linking edges.\n                this.edges.push([this.node_to_vert.get(to_symbol(link.nodeA))!, curr]);\n                this.edges.push([this.node_to_vert.get(to_symbol(link.nodeB))!, curr]);\n\n\n                curr++;\n            } else if (link instanceof StartLink) {\n                const pos = link.get_start_point();\n                this.vertices[curr] = { x: pos.x, y: pos.y };\n                this.node_to_vert.set(to_symbol(link), curr);\n                this.vert_to_node.set(curr, link);\n\n                // Only 1 linking edge to StartLinks.\n                this.edges.push([this.node_to_vert.get(to_symbol(link.node))!, curr]);\n\n                curr++;\n            }\n\n        }\n    }\n\n    /**\n     * Update all of the nodes and links referenced by the graph to\n     * match its vertices' positions.\n     */\n    sync_positions() {\n        // Update StateNodes.\n        for (let i = 0; i < this.vertices.length; i++) {\n            /** @type {{x: number, y:number}} */\n            const v: Point2D = this.vertices[i];\n            const node = this.vert_to_node.get(i);\n\n            if (node instanceof StateNode) {\n                node.set_mouse_start(node.x, node.y);\n                node.set_anchor_point(v.x, v.y);\n            } else if (node instanceof Node || node instanceof StartLink) {\n                node.set_anchor_point(v.x, v.y);\n            }\n        }\n\n        force_update(['nodes', 'links']);\n    }\n}","/**\n * Subset construction for converting NFAs to DFAs.\n */\n\nimport { AnyLink } from \"../components/elements/abstract\";\nimport { StateNode } from \"../components/elements/state_node\";\nimport { State, StateKey } from \"../types\";\nimport { EPSILON } from \"./constants\";\nimport { FAData } from \"./data\";\nimport { inplace_union } from \"./shared_utils\";\n\n\n/**\n * Preform subset construction on the current \n */\nexport function subset_construct(state: State): StateKey[] | undefined {\n    const fa = new FAData();\n    const nodes = state.nodes;\n    const links = state.links;\n\n    fa.load(nodes, links);\n\n    if (fa.is_deterministic()) {\n        console.warn('Tried to perform subset construction on a DFA.');\n        return;\n    } else if (fa.starting_state == -1) {\n        console.warn('FA has no starting state so subset construction failed.');\n        return;\n    }\n\n    const dfa = _subset_alg(fa);\n    const { nodes: new_nodes, links: new_links } = dfa.create_elements();\n\n    replace_elements(nodes, links, new_nodes, new_links);\n\n    state.selected_object = undefined;\n\n    return ['nodes', 'links'];\n}\n\n/**\n * Return a new DFA equivalent to the given FA.\n */\nfunction _subset_alg(fa: FAData) {\n    const dfa = new FAData();\n\n    /** Map of all state strings, ex; '0,2,4' which have\n     * already been explored to index of state in the new DFA. */\n    const name_to_index = new Map<string, number>();\n    /** List of names of all state transitions corresponding\n     * to dfa.state_names. */\n    const names: string[] = [];\n    const state_stack: number[][] = [];\n\n    let curr = 0;\n\n    dfa.starting_state = 0;\n\n    // Initialize the FA and search with the FA's start/equivalent states.\n    // The steps are:\n    // 1. Create the set.\n    // 2. Get it's identifying symbol and assign it an index.\n    // 3. Give it a name and add it to the names array.\n    // 4. Push the state-set to the stack to be explored.\n    // 5. Check if the state should be accepting.\n\n    const dfa_start_set = fa.get_equivalents(fa.starting_state);\n    name_to_index.set(_set_to_string(dfa_start_set), curr);\n    const start_state_names = Array.from(dfa_start_set).map(i => fa.state_names[i]);\n    start_state_names.sort();\n    names.push(`{${start_state_names.join(',')}}`);\n    state_stack.push(dfa_start_set);\n\n    if (Array.from(dfa_start_set).some(i => fa.accepting_states.includes(i)))\n        dfa.accepting_states.push(curr);\n    curr++;\n\n    // Iterate over the state stack.\n    let origin = state_stack.pop();\n    while (origin != null) {\n        const from_name = _set_to_string(origin);\n\n        /** The new transitions from the popped state-set. */\n        const transitions = new Map<string, number[]>();\n\n        // Populate transitions.\n        for (const state of origin) {\n            const from_state_transitions = fa.transitions.get(state);\n            if (from_state_transitions != null) {\n                // Iterate over all possible transitions from the state.\n                for (const transition of from_state_transitions.keys()) {\n                    // Excluding epislon transitions.\n                    if (transition != EPSILON) {\n                        let result = transitions.get(transition);\n                        if (result == null) {\n                            result = [];\n                            transitions.set(transition, result);\n                        }\n                        inplace_union(result, fa.deep_delta(state, transition));\n                    }\n                }\n            }\n        }\n\n        // Add transitions map to dfa.\n        for (const [transition, output] of transitions.entries()) {\n            const to_name = _set_to_string(output);\n            const from = name_to_index.get(from_name)!;\n\n            if (name_to_index.has(to_name)) {\n                // Case 1, the state has already been defined.\n                // Add it to the dfa and move on.\n                dfa.add_transition(from, transition, name_to_index.get(to_name)!);\n            } else {\n                // Case 2, the state has not been defined.\n                const to_name = _set_to_string(output);\n\n                // Initialize the new state.\n                name_to_index.set(to_name, curr);\n                const state_names = Array.from(output).map(i => fa.state_names[i]);\n                state_names.sort();\n                names.push(`{${state_names.join(',')}}`);\n                state_stack.push(output);\n\n                // The state is accepting if any constituents are accepting.\n                if (Array.from(output).some(i => fa.accepting_states.includes(i)))\n                    dfa.accepting_states.push(curr);\n\n                // Add the transition. curr is the index of the newly created state.\n                dfa.add_transition(from, transition, curr);\n\n                curr++;\n            }\n\n        }\n\n        origin = state_stack.pop();\n    }\n\n    dfa.state_names = names;\n\n    return dfa;\n}\n\n/**\n * Convert a set to its string representation.\n */\nfunction _set_to_string(set: number[]) {\n    const arr = set.slice();\n    arr.sort();\n    return arr.join(',');\n}\n\n/**\n * Move new nodes and new links into node and links array.\n */\nfunction replace_elements(nodes: StateNode[], links: AnyLink[], new_nodes: StateNode[], new_links: AnyLink[]) {\n    nodes.splice(0, nodes.length);\n    links.splice(0, links.length);\n\n    for (let i = 0; i < new_nodes.length; i++)\n        nodes.push(new_nodes[i]);\n    for (let i = 0; i < new_links.length; i++)\n        links.push(new_links[i]);\n\n}","/**\n * General purpose utilities for managing node data.\n */\n\nimport { FSMElementString, FSMStringableElement } from \"../components/elements/abstract\";\nimport { StateNode } from \"../components/elements/state_node\";\nimport { NodeLink } from \"../components/elements/node_link\";\nimport { StartLink } from \"../components/elements/start_link\";\nimport { get_canvas } from \"../store/store\";\nimport { Point2D } from \"../types\";\nimport { CANVAS_PADDING } from \"../components/elements/constants\";\n\n/**\n * Return the union of A and B.\n */\nexport function union<T>(a: T[], b: T[]) {\n    const set: T[] = [];\n\n    inplace_union(set, a);\n    inplace_union(set, b);\n\n    return set;\n}\n\n/**\n * Add B's elements to A, as a set.\n * Mutates A.\n */\nexport function inplace_union<T>(a: T[], b: T[]) {\n    for (const el of b)\n        if (!a.includes(el)) a.push(el);\n}\n\n/**\n * Return a unique string for each node or link.\n */\nexport function to_symbol(node: FSMStringableElement): FSMElementString {\n    if (node instanceof StateNode)\n        return `${node.text}:${node.x},${node.y}`;\n    else if (node instanceof NodeLink)\n        return `${to_symbol(node.nodeA)}->${to_symbol(node.nodeB)}:${node.text}${node.get_anchor_point().x},${node.get_anchor_point().y}`;\n    else if (node instanceof StartLink)\n        return `${to_symbol(node.node)}:${node.get_start_point().x},${node.get_start_point().y}`;\n    return JSON.stringify(node);\n}\n\n/**\n * Get a random position object.\n */\nexport function rand_pos(): Point2D {\n    const canvas = get_canvas();\n    if (canvas != null) {\n        const canvas_el = canvas.el;\n        if (canvas_el != null) {\n            return {\n                x: Math.random() * (canvas_el.width - 2 * CANVAS_PADDING) + CANVAS_PADDING,\n                y: Math.random() * (canvas_el.height - 2 * CANVAS_PADDING) + CANVAS_PADDING\n            }\n        }\n    }\n    return { x: 0, y: 0 };\n}","import { FSMContext, Point2D } from \"../../types\";\r\nimport { DrawableElement } from \"./abstract\";\r\nimport { NODE_RADIUS } from \"./constants\";\r\nimport { draw_text } from \"./text_utils\";\r\n\r\n/** A circular node representing a state in the finite automaton. */\r\nexport class StateNode extends DrawableElement {\r\n\tpublic x: number;\r\n\tpublic y: number;\r\n\tprivate mouseOffsetX: number;\r\n\tprivate mouseOffsetY: number;\r\n\tpublic isAcceptState: boolean;\r\n\tpublic text: string;\r\n\r\n\tconstructor(x: number, y: number) {\r\n\t\tsuper();\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.mouseOffsetX = 0;\r\n\t\tthis.mouseOffsetY = 0;\r\n\t\tthis.isAcceptState = false;\r\n\t\tthis.text = '';\r\n\t}\r\n\r\n\tset_mouse_start(x: number, y: number) {\r\n\t\tthis.mouseOffsetX = this.x - x;\r\n\t\tthis.mouseOffsetY = this.y - y;\r\n\t};\r\n\r\n\tset_anchor_point(x: number, y: number) {\r\n\t\tthis.x = x + this.mouseOffsetX;\r\n\t\tthis.y = y + this.mouseOffsetY;\r\n\t};\r\n\r\n\tdraw(c: FSMContext, with_caret: boolean = false) {\r\n\t\t// draw the circle\r\n\t\tc.beginPath();\r\n\t\tc.arc(this.x, this.y, NODE_RADIUS, 0, 2 * Math.PI, false);\r\n\t\tc.stroke();\r\n\r\n\t\t// draw the text\r\n\t\tdraw_text(c, this.text, this.x, this.y, null, this.selected, with_caret);\r\n\r\n\t\t// draw a double circle for an accept state\r\n\t\tif (this.isAcceptState) {\r\n\t\t\tc.beginPath();\r\n\t\t\tc.arc(this.x, this.y, NODE_RADIUS - 6, 0, 2 * Math.PI, false);\r\n\t\t\tc.stroke();\r\n\t\t}\r\n\t};\r\n\r\n\tclosest_point_on_circle(x: number, y: number): Point2D {\r\n\t\tconst dx = x - this.x;\r\n\t\tconst dy = y - this.y;\r\n\t\tconst scale = Math.sqrt(dx * dx + dy * dy);\r\n\t\treturn {\r\n\t\t\t'x': this.x + dx * NODE_RADIUS / scale,\r\n\t\t\t'y': this.y + dy * NODE_RADIUS / scale,\r\n\t\t};\r\n\t};\r\n\r\n\tcontains_point(pos: Point2D) {\r\n\t\treturn (pos.x - this.x) * (pos.x - this.x) + (pos.y - this.y) * (pos.y - this.y) < NODE_RADIUS * NODE_RADIUS;\r\n\t};\r\n}","import { save_canvas } from \"../store/files\";\nimport { State, StateKey } from \"../types\";\n\nexport function export_to_png(state: State): StateKey[] | undefined {\n\tif (state.selected_object != null) {\n\t\tstate.selected_object.selected = false;\n\t\tstate.selected_object = undefined;\n\t}\n\n    const temp = document.createElement('canvas');\n    temp.width = 800;\n    temp.height = 600;\n\n\tstate.canvas.draw_using(temp.getContext('2d')!);\n\n\tsave_canvas(\n        temp,\n        `${state.file_name}.png`\n    );\n\n\treturn ['selected_object'];\n}","// draw using this instead of a canvas and call toSVG() afterward\n\nimport { fixed } from \"../common/math\";\nimport { text_to_xml } from \"../components/elements/text_utils\";\nimport { save_file } from \"../store/files\";\nimport { Point2D, State, StateKey } from \"../types\";\n\n/**\n * SVG rendering context.\n * @extends CanvasRenderingContext2D\n */\nexport class ExportAsSVG {\n\tpublic fillStyle: string;\n\tpublic strokeStyle: string;\n\tpublic lineWidth: number;\n\tpublic font: string;\n\tprivate _points: Point2D[];\n\tprivate _svgData: string;\n\tprivate _transX: number;\n\tprivate _transY: number;\n\n\tconstructor() {\n\t\tthis.fillStyle = 'black';\n\t\tthis.strokeStyle = 'black';\n\t\tthis.lineWidth = 1;\n\t\tthis.font = '12px Arial, sans-serif';\n\t\tthis._points = [];\n\t\tthis._svgData = '';\n\t\tthis._transX = 0;\n\t\tthis._transY = 0;\n\t}\n\n\ttoSVG() {\n\t\treturn '<?xml version=\"1.0\" standalone=\"no\"?>\\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n\\n<svg width=\"800\" height=\"600\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\\n' + this._svgData + '</svg>\\n';\n\t}\n\n\tbeginPath() {\n\t\tthis._points = [];\n\t}\n\n\tarc(x: number, y: number, radius: number, startAngle: number, endAngle: number, isReversed: boolean) {\n\t\tx += this._transX;\n\t\ty += this._transY;\n\t\tconst style = 'stroke=\"' + this.strokeStyle + '\" stroke-width=\"' + this.lineWidth + '\" fill=\"none\"';\n\n\t\tif (endAngle - startAngle == Math.PI * 2) {\n\t\t\tthis._svgData += '\\t<ellipse ' + style + ' cx=\"' + fixed(x, 3) + '\" cy=\"' + fixed(y, 3) + '\" rx=\"' + fixed(radius, 3) + '\" ry=\"' + fixed(radius, 3) + '\"/>\\n';\n\t\t} else {\n\t\t\tif (isReversed) {\n\t\t\t\tconst temp = startAngle;\n\t\t\t\tstartAngle = endAngle;\n\t\t\t\tendAngle = temp;\n\t\t\t}\n\n\t\t\tif (endAngle < startAngle) {\n\t\t\t\tendAngle += Math.PI * 2;\n\t\t\t}\n\n\t\t\tconst startX = x + radius * Math.cos(startAngle);\n\t\t\tconst startY = y + radius * Math.sin(startAngle);\n\t\t\tconst endX = x + radius * Math.cos(endAngle);\n\t\t\tconst endY = y + radius * Math.sin(endAngle);\n\t\t\tconst useGreaterThan180 = (Math.abs(endAngle - startAngle) > Math.PI);\n\t\t\tconst goInPositiveDirection = 1;\n\n\t\t\tthis._svgData += '\\t<path ' + style + ' d=\"';\n\t\t\tthis._svgData += 'M ' + fixed(startX, 3) + ',' + fixed(startY, 3) + ' '; // startPoint(startX, startY)\n\t\t\tthis._svgData += 'A ' + fixed(radius, 3) + ',' + fixed(radius, 3) + ' '; // radii(radius, radius)\n\t\t\tthis._svgData += '0 '; // value of 0 means perfect circle, others mean ellipse\n\t\t\tthis._svgData += +useGreaterThan180 + ' ';\n\t\t\tthis._svgData += +goInPositiveDirection + ' ';\n\t\t\tthis._svgData += fixed(endX, 3) + ',' + fixed(endY, 3); // endPoint(endX, endY)\n\t\t\tthis._svgData += '\"/>\\n';\n\t\t}\n\t}\n\n\tmoveTo(x: number, y: number) {\n\t\tx += this._transX;\n\t\ty += this._transY;\n\t\tthis._points.push({ 'x': x, 'y': y });\n\t}\n\n\tlineTo(x: number, y: number) {\n\t\tx += this._transX;\n\t\ty += this._transY;\n\t\tthis._points.push({ 'x': x, 'y': y });\n\t}\n\n\tstroke() {\n\t\tif (this._points.length == 0) return;\n\t\tthis._svgData += '\\t<polygon stroke=\"' + this.strokeStyle + '\" stroke-width=\"' + this.lineWidth + '\" points=\"';\n\t\tfor (let i = 0; i < this._points.length; i++) {\n\t\t\tthis._svgData += (i > 0 ? ' ' : '') + fixed(this._points[i].x, 3) + ',' + fixed(this._points[i].y, 3);\n\t\t}\n\t\tthis._svgData += '\"/>\\n';\n\t}\n\n\tfill() {\n\t\tif (this._points.length == 0) return;\n\t\tthis._svgData += '\\t<polygon fill=\"' + this.fillStyle + '\" stroke-width=\"' + this.lineWidth + '\" points=\"';\n\t\tfor (let i = 0; i < this._points.length; i++) {\n\t\t\tthis._svgData += (i > 0 ? ' ' : '') + fixed(this._points[i].x, 3) + ',' + fixed(this._points[i].y, 3);\n\t\t}\n\t\tthis._svgData += '\"/>\\n';\n\t}\n\n\tfillText(text: string, x: number, y: number) {\n\t\tx += this._transX;\n\t\ty += this._transY;\n\t\tif (text.replace(' ', '').length > 0) {\n\t\t\tthis._svgData += '\\t<text x=\"' + fixed(x, 3) + '\" y=\"' + fixed(y, 3) + '\" font-family=\"Times New Roman\" font-size=\"20\">' + text_to_xml(text) + '</text>\\n';\n\t\t}\n\t}\n\n\ttranslate(x: number, y: number) {\n\t\tthis._transX = x;\n\t\tthis._transY = y;\n\t}\n\n\tsave() { }\n\trestore() { }\n\tclearRect() { }\n\trect() { }\n\n}\n\nexport function export_to_svg(state: State): StateKey[] | undefined {\n\tconst exporter = new ExportAsSVG();\n\n\tif (state.selected_object != null) {\n\t\tstate.selected_object.selected = false;\n\t\tstate.selected_object = undefined;\n\t}\n\n\tstate.canvas.draw_using(exporter);\n\n\tsave_file(\n\t\texporter.toSVG(),\n\t\t`${state.file_name}.svg`,\n\t\t'image/svg+xml'\n\t);\n\n\treturn ['selected_object'];\n}","import { Component, ComponentChild, Fragment, h } from \"preact\";\nimport { get_state, mutate, subscribe } from \"../../store/store\";\nimport { CanvasTool, State, StateKey } from \"../../types\";\n\n// Consider removing this parent reference and relying strictly on vDOM.\ntype ToolProps = {\n    tooltip: string,\n    icon: string,\n    tool_mode: CanvasTool,\n};\n\nexport class ToolBar extends Component {\n    constructor() {\n        super();\n        subscribe(['curr_tool'], this);\n    }\n\n    render(): ComponentChild {\n        return (<>\n            <div>Tools:</div>\n            <div style='display: flex; flex-direction: row;'>\n                <Tool tooltip='Select' icon='' tool_mode={CanvasTool.POINTER} />\n                <Tool tooltip='Draw Node' icon='' tool_mode={CanvasTool.DRAW_NODE} />\n                <Tool tooltip='Draw Link' icon='' tool_mode={CanvasTool.DRAW_LINK} />\n                <Tool tooltip='Draw Accept' icon='' tool_mode={CanvasTool.DRAW_ACCEPT} />\n                <Tool tooltip='Eliminate' icon='' tool_mode={CanvasTool.ELIMINATE} />\n                {/* <Tool tooltip='Pan (not yet implemented)' icon={''} tool_mode={CanvasTool.PAN} /> */}\n            </div>\n        </>);\n    }\n}\n\nclass Tool extends Component<ToolProps> {\n\n\n    constructor(props: ToolProps) {\n        super(props);\n    }\n\n    render(): ComponentChild {\n        return (\n            <div\n                onClick={e => mutate(this.mutator)}\n\n                style={\n                    this.props.tool_mode == get_state('curr_tool') ? 'color: cyan' : 'color: black'\n                }\n            >{this.props.tooltip}</div>\n        );\n    }\n\n    mutator = (state: State): StateKey[] | undefined => {\n        if (state.curr_tool == this.props.tool_mode) return;\n        state.curr_tool = this.props.tool_mode;\n        return ['curr_tool'];\n    }\n}","/**\n * Various constants for parsing regular expressions.\n */\n\n/** Internal operators. */\nexport const OPS = {\n    CONCAT: \"*&*\",\n    KLEIN: \"*\",\n    OR: \"+\",\n    OPEN_LEFT: \"(\",\n    CLOSE_RIGHT: \")\",\n}\n\n/** Operators which already follow infix notation. */\nexport const INFIX_CHAR_OPS = [OPS.OR, OPS.OPEN_LEFT, OPS.CLOSE_RIGHT];\n/** Standard operators which can be recognized in user inputted strings. */\nexport const STANDARD_CHAR_OPS = [OPS.KLEIN, OPS.OR, OPS.OPEN_LEFT, OPS.CLOSE_RIGHT];\n/** Binary operators. */\nexport const BIN_OPS = [OPS.CONCAT, OPS.OR];\n/** Operators which should be recognized as function. */\nexport const FUNCTIONS_OPS = [OPS.KLEIN];\n/** Operators which should not be concatenated from the left side. */\nexport const L_NON_CONCAT_OPS = [OPS.OPEN_LEFT, OPS.OR, OPS.CONCAT, OPS.KLEIN];\n/** Operators which should not be concatenated from the right side. */\nexport const R_NON_CONCAT_OPS = [OPS.CLOSE_RIGHT, OPS.OR, OPS.CONCAT];\n\n/** Operator precedence lookup. Higher precedence is a higher number.\n * \n * \\* > concatenation > +\n */\nexport const OP_PRECEDENCE = {\n    [OPS.KLEIN]: 8,\n    [OPS.CONCAT]: 4,\n    [OPS.OR]: 2,\n}\n\n/** Epsilon empty string character. */\nexport const EPSILON = '\\\\epsilon';","import { union } from \"../algs/shared_utils\";\nimport { State, StateKey } from \"../types\"\nimport { canvas_to_string, string_to_canvas } from \"./backup\";\nimport { force_update } from \"./store\";\nimport { reset_undo_redo } from \"./undo_redo\";\n\nexport function save_as(state: State): StateKey[] | undefined {\n    save_file(\n        canvas_to_string(state),\n        `${state.file_name || new Date().toISOString().replace(/[^0-9|-]/g, '')}.fsmjson`,\n        'application/json',\n    );\n\n    return;\n}\n\n/** Save the file using the given data string. */\nexport function save_canvas(canvas: HTMLCanvasElement, file_name: string) {\n    // Use anchors instead of injecting anchor into UI.\n    const anchor = document.createElement('a');\n    anchor.href = canvas.toDataURL();\n    anchor.download = file_name;\n    anchor.click();\n\n    URL.revokeObjectURL(anchor.href);\n};\n\n/** Save the file using the given data string. */\nexport function save_file(data: string, file_name: string, type: string = 'text/plain') {\n    const f = new Blob([data], { type: type });\n\n    // Use anchors instead of injecting anchor into UI.\n    const anchor = document.createElement('a');\n    anchor.href = URL.createObjectURL(f);\n    anchor.download = file_name;\n    anchor.click();\n\n    URL.revokeObjectURL(anchor.href);\n};\n\nexport function open(state: State): StateKey[] | undefined {\n    _open_text()\n        .then(rep => {\n            const [s, name] = rep;\n            try {\n                const next_state = string_to_canvas(s);\n                state.nodes = next_state.nodes;\n                state.links = next_state.links;\n                state.file_name = name.substring(0, name.lastIndexOf('.'));\n\n                // Force the update only when the call resolves.\n                force_update(['nodes', 'links', 'can', 'file_name', 'canvas']);\n            } catch (error) {\n                console.error(error);\n            }\n        });\n\n    return;\n}\n\nasync function _open_text(): Promise<[string, string]> {\n    return new Promise<[string, string]>((resolve, reject) => {\n        // TODO: verify that element creation is not causing a memory leak.\n        // js may not be garbage collecting this properly.\n        const f_input = document.createElement('input');\n        f_input.type = 'file';\n        f_input.accept = '.fsmjson';\n\n        f_input.oninput = (e: Event) => {\n            const f = (<HTMLInputElement>e.target).files![0];\n            f.text()\n                .then(s => resolve([s, f.name]));\n        }\n\n        f_input.click();\n    });\n}","/**\n * In charge of loading strings, undoing and redoing actions.\n * Stores the global state and its subscribers.\n */\n\nimport { Component } from \"preact\";\nimport { Canvas } from \"../components/canvas/canvas\";\nimport { CanvasTool, EffectOf, State, StateEffects, StateKey, Subscribers } from \"../types\";\nimport { effect_canvas, effect_prev_tool, effect_save_backup, effect_undo_redo } from \"./effects\";\n\nconst _state: State = {\n    temp_link: undefined, // a Link\n\n    canvas: undefined!,\n    view_zone: {\n        zoom: 1,\n        x: 0,\n        y: 0,\n    },\n\n    active_objects: [],\n    selected_object: undefined, // either a Link or a Node\n    nodes: [],\n    links: [],\n\n    last_tool: CanvasTool.POINTER,\n    curr_tool: CanvasTool.POINTER,\n\n    can: { undo: false, redo: false },\n    file_name: 'untitled',\n};\n\nconst _subscribers: Subscribers<State> = {\n    temp_link: [],\n\n    canvas: [],\n    view_zone: [],\n\n    active_objects: [],\n    selected_object: [],\n    nodes: [],\n    links: [],\n\n    last_tool: [],\n    curr_tool: [],\n\n    can: [],\n    file_name: [],\n};\n\nconst _post_effects: StateEffects<State> = {\n    temp_link: [],\n\n    canvas: [effect_canvas],\n    view_zone: [],\n\n    active_objects: [],\n    selected_object: [effect_undo_redo, effect_save_backup],\n    nodes: [effect_undo_redo, effect_save_backup],\n    links: [effect_undo_redo, effect_save_backup],\n\n    last_tool: [],\n    curr_tool: [effect_prev_tool],\n\n    can: [],\n    file_name: [],\n};\n\nconst _subscriber_map: Map<Component, StateKey[]> = new Map();\n\n/**\n * Subscribe the component to certain keys.\n */\nexport function subscribe(keys: StateKey[], component: Component) {\n    for (const key of keys) {\n        if (!_subscribers[key].includes(component)) _subscribers[key].push(component);\n    }\n    _subscriber_map.set(component, keys);\n}\n\n/**\n * Unsubscribe the component from all keys.\n */\nexport function unsubscribe(component: Component) {\n    const subbed_keys = _subscriber_map.get(component);\n\n    if (subbed_keys != null) {\n        for (let key of subbed_keys) {\n            for (let i = _subscribers[key].length - 1; i >= 0; i--) {\n                if (component == _subscribers[key][i]) {\n                    _subscribers[key].splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    }\n}\n\nlet _canvas: Canvas;\nexport function get_canvas(): Canvas { return _canvas; }\n/** Set the canvas if not already set. */\nexport function set_default_canvas(c: Canvas): void { if (_canvas == null) _canvas = c; _state.canvas = c; }\n\n\n// /**\n//  * Apply a function onto the state.\n//  * @param func Function of the state.\n//  */\n// export function mutate_mediate(keys: StateKey[], func: (state: State) => StateKey[] | undefined, execute_actions: boolean = true) {\n//     if (execute_actions) pre_actions(keys);\n\n//     func(_state);\n\n//     if (keys != null) {\n//         if (execute_actions) post_actions(keys);\n\n//         // And update.\n//         push_update(keys);\n//     };\n// }\n\n// function pre_actions(keys: StateKey[]) {\n//     // Fetch actions.\n//     const actions: EffectOf<State>[] = [];\n//     for (const key of keys)\n//         for (const action of _pre_effects[key])\n//             if (!actions.includes(action)) actions.push(action);\n\n//     // Execute actions.  \n//     for (const action of actions)\n//         action(_state);\n// }\n\nfunction post_actions(keys: StateKey[]) {\n    // Fetch actions.\n    const actions: EffectOf<State>[] = [];\n    for (const key of keys)\n        for (const action of _post_effects[key])\n            if (!actions.includes(action)) actions.push(action);\n\n    // Execute actions.  \n    for (const action of actions)\n        action(_state);\n}\n\n/**\n * Apply a function onto the state.\n * @param func Function of the state.\n */\nexport function mutate(func: (state: State) => StateKey[] | undefined, execute_actions: boolean = true) {\n    let keys = func(_state);\n\n    if (keys != null) {\n        if (execute_actions) post_actions(keys);\n\n        // And update.\n        push_update(keys);\n    };\n}\n\n/**\n * Apply a function onto the state with extra arguments.\n * @param func Function of the state.\n */\nexport function mutate_with_args<Args>(func: (state: State, ...args: Args[]) => StateKey[] | undefined, execute_actions: boolean = true, ...args: Args[]) {\n    let keys = func(_state, ...args);\n\n    if (keys != null) {\n        if (execute_actions) post_actions(keys);\n\n        // And update.\n        push_update(keys);\n    };\n}\n\n/**\n * Update the keys without explicit mutation.\n * \n * Use with caution.\n */\nexport function force_update(keys: StateKey[]) {\n    push_update(keys);\n    post_actions(keys);\n}\n\n/**\n * Get a state.\n * \n * Must not mutate the state.\n */\nexport function get_state<K extends StateKey>(key: K): State[K] {\n    return _state[key];\n}\n\n/**\n * Apply a function onto the state and return the result.\n * \n * Must not mutate the state.\n * @param func Function of the state.\n */\nexport function access<T>(func: (state: State) => T): T {\n    return func(_state);\n}\n\n/**\n * Update all the subscribers to this key.\n * @param key \n */\nfunction push_update(keys: StateKey[]) {\n    // Store update-ables in set to minimize duplicate rerenders.\n    const will_update: Component[] = [];\n    for (const key of keys) {\n        for (const subscriber of _subscribers[key])\n            if (!will_update.includes(subscriber)) will_update.push(subscriber);\n    }\n\n    for (const comp of will_update) {\n        comp.setState({});\n    }\n}","import { State } from \"../types\";\n\n\n/** Update the undo/redo stack. */\nexport function effect_prev_tool(state: State) {\n    state.last_tool = state.curr_tool;\n}\n\n/** Force the canvas to redraw. Avoid using. */\nexport function effect_canvas(state: State) {\n    state.canvas.draw();\n}\n\nexport { effect_undo_redo } from \"./undo_redo\";\n\nexport { effect_save_backup } from \"./backup\";","import { CanvasJSON, FSMCanvasState, State, StateKey } from \"../types\";\nimport { canvas_to_string, string_to_canvas } from \"./backup\";\nimport { mutate } from \"./store\";\n\nlet _undo_stack: CanvasJSON[] = [];\nlet _curr: CanvasJSON = '';\nlet _redo_stack: CanvasJSON[] = [];\n\n/** Reset the undo and redo stacks. */\nexport function reset_undo_redo(state: State): StateKey[] | undefined {\n    _undo_stack = [];\n    _redo_stack = [];\n    _curr = canvas_to_string(state);\n    state.can = { undo: false, redo: false };\n    return ['can'];\n}\n\n/**\n * Save the canvas to the undo/redo stacks and to localStorage.\n */\nexport function effect_undo_redo(prev: State) {\n    const str = canvas_to_string(prev);\n\n    if (_curr != str) {\n        _undo_stack.push(_curr);\n        _curr = str;\n        _redo_stack = [];\n    }\n}\n\n/** Deselect an object and mutate the store if necessary.\n * The state update causes the undo_redo effect to store otherwise\n * unrecorded text changes of the selected object.\n */\nfunction deselect(state: State): StateKey[] | undefined {\n    if (state.selected_object != null) {\n        state.selected_object.selected = false;\n        state.selected_object = undefined;\n        return ['selected_object'];\n    }\n    return;\n}\n\n/**\n * Undo a canvas change if possible.\n */\nexport function undo(state: State): StateKey[] | undefined {\n    mutate(deselect);\n\n    if (_undo_stack.length > 0) {\n        let next_str = _undo_stack.pop()!;\n        // Push current state to the redo stack.\n        _redo_stack.push(_curr);\n        _curr = next_str;\n\n        // Load the new state from the undo stack.\n        const next_state: FSMCanvasState = string_to_canvas(next_str!);\n        state.nodes = next_state.nodes;\n        state.links = next_state.links;\n\n        state.can.undo = _undo_stack.length > 0;\n        state.can.redo = _redo_stack.length > 0;\n\n        // Update subscribers.\n        return ['nodes', 'links', 'can'];\n    } else { console.warn('Tried to undo with no actions to undo.'); return; }\n}\n\n/**\n * Redo an undone canvas change if possible.\n */\nexport function redo(state: State): StateKey[] | undefined {\n    mutate(deselect);\n\n    let next_str = _redo_stack.pop();\n    if (next_str != null) {\n        // Push current state to the undo stack.\n        _undo_stack.push(_curr);\n        _curr = next_str;\n\n        // Load the new state from the undo stack.\n        const next_state: FSMCanvasState = string_to_canvas(next_str);\n        state.nodes = next_state.nodes;\n        state.links = next_state.links;\n\n        state.can.undo = _undo_stack.length > 0;\n        state.can.redo = _redo_stack.length > 0;\n\n        // Update subscribers.\n        return ['nodes', 'links', 'can'];\n    } else { console.warn('Tried to redo with no actions to redo.'); return; }\n}","/**\n * Non-specific types.\n */\n\nimport { Component } from \"preact\";\nimport { Canvas } from \"./components/canvas/canvas\";\nimport { AnyLink, DrawableElement, FSMLink } from \"./components/elements/abstract\";\nimport { StateNode } from \"./components/elements/state_node\";\nimport { ExportAsLaTeX } from \"./export_as/latex\";\nimport { ExportAsSVG } from \"./export_as/svg\";\n\nexport enum CanvasTool {\n    POINTER = 1,\n    DRAW_NODE,\n    DRAW_LINK,\n    DRAW_ACCEPT,\n    ELIMINATE,\n    PAN,\n};\n\nexport interface State {\n    temp_link: AnyLink | undefined, // a Link\n\n    canvas: Canvas,\n    view_zone: CanvasViewTransform,\n\n    // Active objects is an experimental property and should not be used.\n    active_objects: StateNode[],\n    selected_object: DrawableElement | undefined, // either a Link or a Node\n    nodes: StateNode[],\n    links: FSMLink[],\n\n    last_tool: CanvasTool,\n    curr_tool: CanvasTool,\n\n    can: { undo: boolean, redo: boolean },\n    file_name: string,\n};\n\nexport type Subscribers<State> = {\n    [K in keyof State]: Component[];\n};\n\nexport type StateEffects<State> = {\n    [K in keyof State]: EffectOf<State>[];\n};\n\nexport type EffectOf<State> = (state: State) => any;\n\nexport enum CanvasAction {\n    LOAD = 1,\n    SAVE,\n    UNDO,\n    REDO,\n    SUBSET_CONSTRUCT,\n    RESET_ZOOM,\n    FORCE_EXPAND,\n}\n\nexport enum MouseButton {\n    LEFT = 0,\n    MIDDLE = 1,\n    RIGHT = 2,\n}\n\n\nexport type CursorFlags = {\n    moving: boolean,\n    down: boolean,\n}\n\nexport interface CanvasRectangle {\n    top: number,\n    left: number,\n    width: number,\n    height: number,\n}\n\nexport interface CanvasViewTransform {\n    zoom: number,\n    x: number,\n    y: number,\n}\n\nexport type FSMContext = CanvasRenderingContext2D | ExportAsLaTeX | ExportAsSVG;\n\nexport type NodeLinkEndPointsAndCircle = LinkNoCircle | LinkCircleReversible;\nexport type SelfLinkCircle = LinkCircle;\n\ninterface LinkEndPoints {\n    startX: number,\n    startY: number,\n    endX: number,\n    endY: number,\n};\n\ninterface LinkNoCircle extends LinkEndPoints {\n    hasCircle: false\n};\n\ninterface LinkCircle extends LinkEndPoints {\n    hasCircle: true,\n    startAngle: number,\n    endAngle: number,\n    circleX: number,\n    circleY: number,\n    circleRadius: number,\n}\n\ninterface LinkCircleReversible extends LinkCircle {\n    reverseScale: number,\n    isReversed: boolean,\n}\n\nexport type StateKey = keyof State;\n\n/** A JSON string containing nodes and links properties. */\nexport type CanvasJSON = string;\n\nexport type FSMCanvasState = {\n    nodes: StateNode[],\n    links: FSMLink[],\n};\n\nexport interface Point2D {\n    x: number;\n    y: number;\n};\n\nexport type Backup = {\n    nodes: BackupNode[],\n    links: BackupLink[]\n};\n\nexport type BackupNode = {\n    x: number,\n    y: number,\n    text: string,\n    isAcceptState: boolean,\n};\n\nexport type BackupLink = BackupNodeLink | BackupStartLink | BackupSelfLink;\n\ntype _BackupLink = {\n    text: string,\n};\n\ntype BackupNodeLink = _BackupLink & {\n    type: 'NodeLink' | 'Link',\n    nodeA: number,\n    nodeB: number,\n    lineAngleAdjust: number,\n    parallelPart: number,\n    perpendicularPart: number,\n}\n\ntype BackupStartLink = _BackupLink & {\n    type: 'StartLink',\n    node: number,\n    deltaX: number,\n    deltaY: number,\n}\n\ntype BackupSelfLink = _BackupLink & {\n    type: 'SelfLink',\n    node: number,\n    anchorAngle: number,\n}","/**\n * Regex parsing and utilities.\n */\n\nimport { convert_latex_shortcuts } from \"../components/elements/text_utils\";\nimport { BIN_OPS, FUNCTIONS_OPS, INFIX_CHAR_OPS, L_NON_CONCAT_OPS, OPS, OP_PRECEDENCE, R_NON_CONCAT_OPS } from \"./constants\";\n\n\n/**\n * Convert string to RPN stack.\n * Using https://en.wikipedia.org/wiki/Shunting-yard_algorithm.\n */\nexport function to_RPN(s: string) {\n    const lst = _parse_tokens(s);\n    const output: string[] = [];\n    const op_stack: string[] = [];\n\n    for (let i = 0; i < lst.length; i++) {\n        const token: string = lst[i];\n\n\n        if (token == OPS.KLEIN) {\n            // Function case.\n            op_stack.push(token);\n\n        } else if (BIN_OPS.includes(token)) {\n            // Binary operands.\n            while (op_stack.length > 0) {\n                let top = op_stack[op_stack.length - 1];\n\n                if (top != OPS.OPEN_LEFT && OP_PRECEDENCE[top] >= OP_PRECEDENCE[token]) {\n                    const next = op_stack.pop();\n                    if (next != null) output.push(next);\n                } else break;\n            }\n\n            op_stack.push(token);\n        } else if (token == OPS.OPEN_LEFT) {\n            // (\n            op_stack.push(token);\n        } else if (token == OPS.CLOSE_RIGHT) {\n            // )\n            while (op_stack.length > 0) {\n                let top = op_stack[op_stack.length - 1];\n\n                if (top != OPS.OPEN_LEFT) {\n                    const next = op_stack.pop();\n                    if (next != null) output.push(next);\n                } else break;\n            }\n\n            if (op_stack.length == 0)\n                console.error('The operator stack is empty, fix the parentheses.');\n\n            op_stack.pop();\n\n            if (op_stack.length > 0 && FUNCTIONS_OPS.includes(op_stack[length - 1])) {\n                const next = op_stack.pop();\n                if (next != null) output.push(next);\n            }\n        } else {\n            output.push(token);\n        }\n\n    }\n\n    let top = op_stack.pop();\n    while (top != null) {\n        output.push(top);\n        top = op_stack.pop();\n    }\n\n    return output;\n}\n\n/**\n * Convert string to token list.\n */\nfunction _parse_tokens(s: string) {\n    // Add explicity brackets to a* single character expressions.\n    s = s.replace(/(\\w)\\*/g, '($1)*');\n    s = convert_latex_shortcuts(s);\n    const lst: string[] = [];\n    let last = 0;\n    let i = 0;\n\n    while (i < s.length) {\n        if (INFIX_CHAR_OPS.includes(s[i])) {\n            if (last != i)\n                lst.push(s.slice(last, i));\n            last = i + 1;\n            lst.push(s[i]);\n        } else if (s[i] == OPS.KLEIN) {\n            // Reverse order as * (operand)\n            let locator = lst.length - 1;\n            let score = 0;\n\n            // Find where to insert *\n            while (locator >= 0) {\n                if (lst[locator] == OPS.CLOSE_RIGHT)\n                    score++;\n                else if (lst[locator] == OPS.OPEN_LEFT)\n                    score--;\n\n                if (score == 0)\n                    break;\n\n                locator--;\n            }\n            // Insert *\n            lst.splice(locator, 0, s[i]);\n\n            last = i + 1;\n        }\n\n        i++;\n    }\n\n    // Add remaining chars.\n    if (last != i)\n        lst.push(s.slice(last));\n\n    // Insert concatenation operators.\n    i = lst.length - 1;\n    while (i > 0) {\n        // Left is not: (x  +x  &x  *x\n        // Right is not: x)  x+  x&\n        // but x(  )x  *x allowed.\n        if (!L_NON_CONCAT_OPS.includes(lst[i - 1]) && !R_NON_CONCAT_OPS.includes(lst[i])) {\n            lst.splice(i, 0, OPS.CONCAT);\n        }\n\n        i--;\n    }\n\n    return lst;\n}","/**\n * State elimination of nodes.\n */\nimport { AnyLink, FSMElementString, FSMLink } from \"../components/elements/abstract\";\nimport { NodeLink } from \"../components/elements/node_link\";\nimport { SelfLink } from \"../components/elements/self_link\";\nimport { StartLink } from \"../components/elements/start_link\";\nimport { StateNode } from \"../components/elements/state_node\";\nimport { EPSILON, OPS } from \"./constants\";\nimport { to_RPN } from \"./expr\";\nimport { to_symbol } from \"./shared_utils\";\n\n/**\n * Eliminate node from nodes.\n * Replace transitions with a partial regex.\n * \n * @return Whether any states were eliminated.\n */\nexport function _eliminate(node: StateNode, nodes: StateNode[], links: AnyLink[]): boolean {\n\n    if (node.isAcceptState)\n        return false;\n\n    const incoming_links = [];\n    const outgoing_links = [];\n    const self_links = [];\n\n    const new_links: FSMLink[] = [];\n\n    // Find and categorize links.\n    for (let i = 0; i < links.length; i++) {\n        const link = links[i];\n\n        if (link instanceof SelfLink && link.node == node)\n            self_links.push(link);\n        else if (link instanceof NodeLink) {\n            if (link.nodeA == node)\n                outgoing_links.push(link);\n            else if (link.nodeB == node)\n                incoming_links.push(link);\n        } else if (link instanceof StartLink) {\n            if (link.node == node)\n                return false;\n        }\n    }\n\n    // Create self pathway regex.\n    let self_reg = '';\n    if (self_links.length > 0) {\n        const self_options = [];\n        for (let _ = 0; _ < self_links.length; _++) {\n            self_options.push(...self_links[_].text.split(','));\n        }\n        if (self_options.length == 1 && self_options[0].length == 1)\n            self_reg = `${self_options[0]}*`\n        else if (self_options.length > 0)\n            self_reg = `(${self_options.join('+')})*`\n    }\n\n    // Create new links, 1 for each pair of incoming and outgoing links.\n    for (let i = 0; i < incoming_links.length; i++) {\n        const in_link = incoming_links[i];\n\n        for (let j = 0; j < outgoing_links.length; j++) {\n            const out_link = outgoing_links[j];\n\n            let new_link;\n            let text;\n\n            text = `${to_safe_str(in_link.text.split(',').map(s => s.trim()).join('+'))}${self_reg}${to_safe_str(out_link.text.split(',').map(s => s.trim()).join('+'))}`;\n\n            if (in_link.nodeA == out_link.nodeB)\n                new_link = new SelfLink(in_link.nodeA);\n            else\n                new_link = new NodeLink(in_link.nodeA, out_link.nodeB);\n\n            text = strip_parenthesis(remove_epsilon(text));\n            new_link.text = text;\n            links.push(new_link);\n        }\n    }\n\n    // Delete old links and node.\n    let i = links.length;\n    // js moment\n    while (i--)\n        if (incoming_links.some(link => link == links[i]) || outgoing_links.some(link => link == links[i]) || self_links.some(link => link == links[i]))\n            links.splice(i, 1);\n\n    nodes.splice(nodes.indexOf(node), 1);\n\n    for (let i = 0; i < new_links.length; i++) {\n        links.push(new_links[i]);\n    }\n\n    minimize_links(links);\n\n    return true;\n}\n\n/**\n * Remove redundant \\epsilon from the regex string.\n */\nfunction remove_epsilon(s: string) {\n    // xe or x*e or )e case\n    // And\n    // ex or e(\n    return s.replace(new RegExp(`/([)*\\w])(${EPSILON})/g`), '$1')\n        .replace(new RegExp(`/(${EPSILON})([(\\w])/g`), '$2');\n}\n\n/**\n * Minimize redundant links.\n */\nfunction minimize_links(links: AnyLink[]) {\n    const deletable: AnyLink[] = [];\n\n    const node_link_data = new Map<String, (NodeLink | SelfLink)[]>();\n\n    for (let i = 0; i < links.length; i++) {\n        const link = links[i];\n\n        if (link instanceof SelfLink) {\n            let key: FSMElementString = to_symbol(link.node);\n            const similar = node_link_data.get(key);\n\n            if (similar != null)\n                similar.push(link);\n            else\n                node_link_data.set(key, [link]);\n        } else if (link instanceof NodeLink) {\n            let key: FSMElementString = to_symbol(link.nodeA) + to_symbol(link.nodeB);\n            const similar = node_link_data.get(key);\n\n            if (similar != null)\n                similar.push(link);\n            else\n                node_link_data.set(key, [link]);\n        }\n    }\n\n    // Squish and mark as deletable.\n    for (const similar of node_link_data.values()) {\n        if (similar.length > 1) {\n            similar[0].text = `${similar.map\n                (l => l.text)\n                .join('+')}`;\n\n            for (let i = 1; i < similar.length; i++)\n                deletable.push(similar[i]);\n        }\n    }\n\n    let i = links.length;\n    // js moment\n    while (i--)\n        if (deletable.includes(links[i]))\n            links.splice(i, 1);\n}\n\n/**\n * Take a regular expression string and add parenthesis if needed.\n * Parentheses are needed for when there is an exposed binary operator +.\n */\nfunction to_safe_str(s: string) {\n    if (s.includes('+')) {\n        let rpn = to_RPN(s);\n        // Has first level binary operator (+) which needs parentheses.\n        if (rpn.length > 0 && rpn[rpn.length - 1] == OPS.OR) {\n            // Has parentheses already, ex: (x+x)\n            // Must check if those are needed.\n            if (s.charAt(0) == OPS.OPEN_LEFT && s.charAt(s.length - 1) == OPS.CLOSE_RIGHT) {\n                // Check if the parenthesis are needed.\n                // By checking validity of x[1:-1] without them.\n                let score = 0;\n                for (let i = 1; i < s.length - 1; i++) {\n                    if (s[i] == OPS.OPEN_LEFT)\n                        score++;\n                    else if (s[i] == OPS.CLOSE_RIGHT)\n                        score--;\n\n                    // More closed than expected (counting from the first index), ex: (x+y)+(x+z)\n                    // So return s back immediately.\n                    if (score < 0) return `(${s})`;\n                }\n                // More open that expected (counting from the first index), ex: (()\n                if (score != 0) {\n                    console.warn(`String \"${s}\" has non matching number of parentheses.`);\n                    return s;\n                };\n                // Otherwise, just return s.\n            }\n            // Add brackets, ex: x+y --> (x+y) \n            else return `(${s})`;\n        }\n    }\n\n    // All other operators are safely concatenated.\n    return s;\n}\n\n/**\n * Remove unnecessary outer parenthesis if needed.\n */\nfunction strip_parenthesis(s: string) {\n    if (s.length > 2 && s.charAt(0) == OPS.OPEN_LEFT && s.charAt(s.length - 1) == OPS.CLOSE_RIGHT) {\n        // Check if the parenthesis are needed.\n        // By checking validity of x[1:-1] without them.\n        let score = 0;\n        for (let i = 1; i < s.length - 1; i++) {\n            if (s[i] == OPS.OPEN_LEFT)\n                score++;\n            else if (s[i] == OPS.CLOSE_RIGHT)\n                score--;\n\n            // More closed than expected (counting from the first index), ex: (x+y)+(x+z)\n            // So return s back immediately.\n            if (score < 0) return s;\n        }\n        // More open that expected (counting from the first index), ex: (()\n        if (score != 0) {\n            return s;\n        };\n        // Otherwise, return s[1:-1] without those parenthesis as they were not needed.\n        return s.substring(1, s.length - 1);\n    }\n    return s;\n}\n\n// {\"nodes\":[{\"x\":124,\"y\":106,\"text\":\"q_0\",\"isAcceptState\":false},{\"x\":366,\"y\":98,\"text\":\"q_1\",\"isAcceptState\":false},{\"x\":609,\"y\":98,\"text\":\"q_2\",\"isAcceptState\":false},{\"x\":685,\"y\":328,\"text\":\"q_3\",\"isAcceptState\":false},{\"x\":557,\"y\":512,\"text\":\"q_4\",\"isAcceptState\":false},{\"x\":358,\"y\":328,\"text\":\"q_5\",\"isAcceptState\":false},{\"x\":150,\"y\":428,\"text\":\"q_6\",\"isAcceptState\":true}],\"links\":[{\"type\":\"Link\",\"nodeA\":0,\"nodeB\":1,\"text\":\"\\\\epsilon\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"SelfLink\",\"node\":1,\"text\":\"0\",\"anchorAngle\":-2.0344439357957027},{\"type\":\"Link\",\"nodeA\":1,\"nodeB\":2,\"text\":\"1\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"Link\",\"nodeA\":1,\"nodeB\":6,\"text\":\"\\\\epsilon\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"Link\",\"nodeA\":5,\"nodeB\":1,\"text\":\"0\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"Link\",\"nodeA\":4,\"nodeB\":6,\"text\":\"\\\\epsilon\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"SelfLink\",\"node\":4,\"text\":\"0,1\",\"anchorAngle\":0.866302262552679},{\"type\":\"Link\",\"nodeA\":5,\"nodeB\":4,\"text\":\"1\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"Link\",\"nodeA\":3,\"nodeB\":5,\"text\":\"0\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"Link\",\"nodeA\":2,\"nodeB\":4,\"text\":\"1\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"Link\",\"nodeA\":2,\"nodeB\":3,\"text\":\"0\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"Link\",\"nodeA\":3,\"nodeB\":4,\"text\":\"1\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0}]}\n\n// {\"nodes\":[{\"x\":166,\"y\":269,\"text\":\"q_0\",\"isAcceptState\":false},{\"x\":315,\"y\":269,\"text\":\"q_1\",\"isAcceptState\":false},{\"x\":485,\"y\":269,\"text\":\"q_2\",\"isAcceptState\":false},{\"x\":676,\"y\":276,\"text\":\"q_3\",\"isAcceptState\":false},{\"x\":585,\"y\":144,\"text\":\"q_5\",\"isAcceptState\":true},{\"x\":158,\"y\":463,\"text\":\"q_4\",\"isAcceptState\":false}],\"links\":[{\"type\":\"StartLink\",\"node\":5,\"text\":\"start\",\"deltaX\":0,\"deltaY\":78},{\"type\":\"Link\",\"nodeA\":5,\"nodeB\":0,\"text\":\"\\\\epsilon\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"Link\",\"nodeA\":2,\"nodeB\":4,\"text\":\"\\\\epsilon\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"Link\",\"nodeA\":3,\"nodeB\":4,\"text\":\"\\\\epsilon\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"Link\",\"nodeA\":1,\"nodeB\":0,\"text\":\"a\",\"lineAngleAdjust\":0,\"parallelPart\":0.44966442953020136,\"perpendicularPart\":-25},{\"type\":\"Link\",\"nodeA\":0,\"nodeB\":1,\"text\":\"a\",\"lineAngleAdjust\":3.141592653589793,\"parallelPart\":0.6174496644295302,\"perpendicularPart\":-28},{\"type\":\"Link\",\"nodeA\":0,\"nodeB\":2,\"text\":\"b\",\"lineAngleAdjust\":3.141592653589793,\"parallelPart\":0.6807205087375884,\"perpendicularPart\":-79.68112458455441},{\"type\":\"Link\",\"nodeA\":1,\"nodeB\":2,\"text\":\"\\\\epsilon\",\"lineAngleAdjust\":0,\"parallelPart\":0.5,\"perpendicularPart\":0},{\"type\":\"Link\",\"nodeA\":3,\"nodeB\":2,\"text\":\"a\",\"lineAngleAdjust\":3.141592653589793,\"parallelPart\":0.37839384167273493,\"perpendicularPart\":-27.283137716577034},{\"type\":\"Link\",\"nodeA\":3,\"nodeB\":1,\"text\":\"a\",\"lineAngleAdjust\":3.141592653589793,\"parallelPart\":0.364309273605891,\"perpendicularPart\":-76.56455478932932},{\"type\":\"Link\",\"nodeA\":2,\"nodeB\":3,\"text\":\"b\",\"lineAngleAdjust\":3.141592653589793,\"parallelPart\":0.6044073364358062,\"perpendicularPart\":-15.241076695359656},{\"type\":\"SelfLink\",\"node\":2,\"text\":\"b\",\"anchorAngle\":-1.5707963267948966}]}\n","import { FSMContext, Point2D } from \"../../types\";\r\nimport { DrawableElement } from \"./abstract\";\r\nimport { draw_arrow } from \"./text_utils\";\r\n\r\n/** An arbitrary link in space. */\r\nexport class TemporaryLink extends DrawableElement {\r\n\tfrom: Point2D;\r\n\tto: Point2D;\r\n\r\n\tconstructor(from: Point2D, to: Point2D) {\r\n\t\tsuper();\r\n\t\tthis.from = from;\r\n\t\tthis.to = to;\r\n\t}\r\n\r\n\tdraw(c: FSMContext, selected: boolean = false) {\r\n\t\t// draw the line\r\n\t\tc.beginPath();\r\n\t\tc.moveTo(this.to.x, this.to.y);\r\n\t\tc.lineTo(this.from.x, this.from.y);\r\n\t\tc.stroke();\r\n\r\n\t\t// draw the head of the arrow\r\n\t\tdraw_arrow(c, this.to.x, this.to.y, Math.atan2(this.to.y - this.from.y, this.to.x - this.from.x));\r\n\t};\r\n\r\n\tcontains_point(pos: Point2D): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tset_anchor_point(x: number, y: number): void { }\r\n}","/**\n * Tool functions for canvas handlers and actions.\n * All tools are functions of the state.\n * \n * @note Move this to a class in the future to avoid dependencies.\n */\n\nimport { _eliminate } from \"../../algs/eliminate\";\nimport { State, StateKey } from \"../../types\";\nimport { NodeLink } from \"../elements/node_link\";\nimport { SelfLink } from \"../elements/self_link\";\nimport { StartLink } from \"../elements/start_link\";\nimport { StateNode } from \"../elements/state_node\";\nimport { TemporaryLink } from \"../elements/temporary_link\";\n\n\n\n// Tools:\n\n/** Select an object if necessary. */\nexport function update_select(state: State): StateKey[] | undefined {\n    // Deselect old object.\n    if (state.selected_object != null) state.selected_object.selected = false;\n\n    // Select the new object if applicable.\n    const at_cursor = state.canvas.cursor.obj_at_last_pos;\n    state.selected_object = at_cursor;\n\n    // Update the selected object's state.\n    if (at_cursor != null) {\n        at_cursor.selected = true;\n\n        if (at_cursor instanceof StateNode || at_cursor instanceof SelfLink)\n            at_cursor.set_mouse_start(state.canvas.cursor.mouse_down_pos.x, state.canvas.cursor.mouse_down_pos.y);\n    }\n\n    return ['selected_object'];\n}\n\n/** Draw a new node at the cursor's position and select it. */\nexport function draw_node(state: State): StateKey[] | undefined {\n    if (state.canvas.cursor.obj_at_last_pos == null) {\n        const pos = state.canvas.cursor.last_pos;\n\n        const new_node = new StateNode(pos.x, pos.y);\n        new_node.selected = true;\n\n        // Deselect old object.\n        if (state.selected_object != null) state.selected_object.selected = false;\n        state.selected_object = new_node;\n\n        state.nodes.push(new_node);\n\n        return ['nodes', 'selected_object'];\n    }\n}\n\n/** Toggle the selected node's accepting node / vice versa. */\nexport function toggle_accept_state(state: State): StateKey[] | undefined {\n    const obj = state.canvas.cursor.obj_at_last_pos;\n    if (obj instanceof StateNode)\n        obj.isAcceptState = !obj.isAcceptState;\n\n    state.selected_object = obj;\n\n    return ['selected_object'];\n}\n\n/** Drag the selected object across the canvas / drag the canvas around. */\nexport function drag(state: State): StateKey[] | undefined {\n    const anchor = state.canvas.cursor.last_pos;\n\n    if (state.selected_object != undefined) {\n        state.selected_object.set_anchor_point(anchor.x, anchor.y);\n        return ['nodes', 'links', 'selected_object'];\n    } else {\n        // Drag canvas itself.\n        const next_view = { ...state.view_zone };\n\n        next_view.x = next_view.zoom * (anchor.x - state.canvas.cursor.mouse_down_pos.x) + next_view.x;\n        next_view.y = next_view.zoom * (anchor.y - state.canvas.cursor.mouse_down_pos.y) + next_view.y;\n\n        state.view_zone = next_view;\n\n        return ['view_zone'];\n    }\n}\n\n/** Update the temporary link that should be created given the state of the cursor. */\nexport function update_temp_link(state: State): StateKey[] | undefined {\n    let temp;\n\n    const start = state.canvas.cursor.obj_at_mouse_down;\n    const end = state.canvas.cursor.obj_at_last_pos;\n    const start_pos = { ...state.canvas.cursor.mouse_down_pos };\n    const end_pos = { ...state.canvas.cursor.last_pos };\n\n    // The link starts and ends at a node.\n    if (start instanceof StateNode && end instanceof StateNode) {\n        if (start == end) {\n            // The links start and ends at the same node.\n            temp = new SelfLink(start);\n            temp.set_mouse_start(start_pos.x, start_pos.y);\n            temp.set_anchor_point(end_pos.x, end_pos.y);\n        } else {\n            // If it ends at a different node, create a regular link.\n            temp = new NodeLink(start, end);\n        }\n\n    } else if (end instanceof StateNode) {\n        temp = new StartLink(end, start_pos);\n    } else {\n        // Starting anywhere else, it is a temp link, possibly with a starting node.\n        temp = new TemporaryLink(\n            (start instanceof StateNode)\n                ? start.closest_point_on_circle(end_pos.x, end_pos.y)\n                : start_pos,\n            end_pos);\n    }\n\n    state.temp_link = temp;\n\n    return ['temp_link'];\n}\n\n/** Add the currently worked on temporary link to the list of links. */\nexport function end_temp_link(state: State): StateKey[] | undefined {\n    if (!(state.temp_link instanceof TemporaryLink)) {\n        state.links.push(state.temp_link!);\n\n        // Select the new link automatically.\n        state.temp_link!.selected = true;\n        if (state.selected_object != null) state.selected_object.selected = false;\n        state.selected_object = state.temp_link;\n    }\n\n    state.temp_link = undefined;\n\n    return ['links', 'temp_link'];\n}\n\n/** Eliminate the selected state node. */\nexport function eliminate(state: State): StateKey[] | undefined {\n    let should_update = false;\n    const active_objects = [state.selected_object, ...state.active_objects];\n\n    for (const obj of active_objects) {\n        if (obj instanceof StateNode)\n            should_update = should_update || _eliminate(obj, state.nodes, state.links);\n    }\n\n    if (state.selected_object != null) {\n        state.selected_object.selected = false;\n        state.selected_object = undefined;\n    }\n\n    return should_update ? ['nodes', 'links', 'selected_object'] : undefined;\n}\n\n// Actions:\n\n/** Element deletion from model. */\nexport function delete_element(state: State): StateKey[] | undefined {\n\n    if (state.selected_object != null) {\n\n        if (state.selected_object instanceof StateNode) {\n            // Delete the node.\n            for (let i = state.nodes.length - 1; i >= 0; i--)\n                if (state.selected_object == state.nodes[i]) {\n                    state.nodes.splice(i, 1);\n                    break;\n                }\n\n            // Delete links attached to the node.\n            for (let i = state.links.length - 1; i >= 0; i--) {\n                const link = state.links[i];\n                let should_delete = false;\n\n                if (link instanceof NodeLink)\n                    should_delete = link.nodeA == state.selected_object || link.nodeB == state.selected_object;\n                else if (link instanceof StartLink || link instanceof SelfLink)\n                    should_delete = link.node == state.selected_object;\n\n                if (should_delete) state.links.splice(i, 1);\n\n            }\n        } else {\n            // Delete links themselves.\n            for (let i = state.links.length - 1; i >= 0; i--)\n                if (state.selected_object == state.links[i]) {\n                    state.links.splice(i, 1);\n                    break;\n                }\n        }\n        state.selected_object = undefined;\n        return ['nodes', 'links', 'selected_object'];\n    }\n    return;\n}\n\n/** Typing text into an object. */\nexport function type_text(state: State, text: string): StateKey[] | undefined {\n    if (state.selected_object != null) {\n        state.selected_object.text = state.selected_object.text + text;\n        return ['selected_object'];\n    }\n}\n\n/** Deleting text from object. */\nexport function delete_char(state: State): StateKey[] | undefined {\n    if (state.selected_object != null) {\n        state.selected_object.text = state.selected_object.text.substring(0, state.selected_object.text.length - 1);\n        return ['selected_object'];\n    }\n}\n\n/** Update the state when dragging is ended to update the undo queue. */\nexport function end_drag(state: State): StateKey[] | undefined {\n    if (state.selected_object != null) {\n        return ['nodes', 'links'];\n    }\n}\n\ntype NewType = StateKey;\n\n/**  */\nexport function zoom(state: State, e: WheelEvent): NewType[] | undefined {\n    const prev_view = state.view_zone;\n    const next_view = { ...prev_view };\n    const draw_space = state.canvas.event_to_canvas_space(e);\n\n    // Restrict zoom so user doesn't get lost.\n    next_view.zoom = Math.min(Math.max(next_view.zoom * Math.exp(-e.deltaY / 1000), 0.3), 3);\n\n    // Do math to find where mouse is pointing (via x,y offsets).\n    // Move towards mouse position.\n    next_view.x = (prev_view.zoom - next_view.zoom) * draw_space.x + prev_view.x;\n    next_view.y = (prev_view.zoom - next_view.zoom) * draw_space.y + prev_view.y;\n\n    state.view_zone = next_view;\n\n    return ['view_zone'];\n}","import { get_canvas } from \"../../store/store\";\nimport { FSMContext } from \"../../types\";\n\nconst greek_letter_names = ['Alpha', 'Beta', 'Gamma', 'Delta', 'Epsilon', 'Zeta', 'Eta', 'Theta', 'Iota', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Xi', 'Omicron', 'Pi', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'Phi', 'Chi', 'Psi', 'Omega'];\n\n/**\n * Draw text using the context and with a caret if necessary.\n */\nexport function draw_text(c: FSMContext, original_text: string, x: number, y: number, angle_or_null: number | null, is_selected: boolean, caret_visible: boolean = false) {\n    const text = convert_latex_shortcuts(original_text);\n    c.font = '20px \"Times New Roman\", serif';\n    const width = measure_text(text);\n\n    // center the text\n    x -= width / 2;\n\n    // position the text intelligently if given an angle\n    if (angle_or_null != null) {\n        const cos = Math.cos(angle_or_null);\n        const sin = Math.sin(angle_or_null);\n        const cornerPointX = (width / 2 + 5) * (cos > 0 ? 1 : -1);\n        const cornerPointY = (10 + 5) * (sin > 0 ? 1 : -1);\n        const slide = sin * Math.pow(Math.abs(sin), 40) * cornerPointX - cos * Math.pow(Math.abs(cos), 10) * cornerPointY;\n        x += cornerPointX - sin * slide;\n        y += cornerPointY + cos * slide;\n    }\n\n    // draw text and caret (round the coordinates so the caret falls on a pixel)\n    // Used for exports.\n    if ('advancedFillText' in c) {\n        // @ts-ignore\n        c.advancedFillText(text, original_text, x + width / 2, y, angle_or_null);\n    } else {\n        x = Math.round(x);\n        y = Math.round(y);\n        c.fillText(text, x, y + 6);\n        if (is_selected && caret_visible && document.hasFocus()) {\n            x += width;\n            c.beginPath();\n            c.moveTo(x, y - 10);\n            c.lineTo(x, y + 10);\n            c.stroke();\n        }\n    }\n}\n\n/**\n * Draw an arrow at (x,y).\n * @param c Context.\n * @param x\n * @param y \n * @param angle in rad.\n */\nexport function draw_arrow(c: FSMContext, x: number, y: number, angle: number) {\n    const dx = Math.cos(angle);\n    const dy = Math.sin(angle);\n    c.beginPath();\n    c.moveTo(x, y);\n    c.lineTo(x - 8 * dx + 5 * dy, y - 8 * dy - 5 * dx);\n    c.lineTo(x - 8 * dx - 5 * dy, y - 8 * dy + 5 * dx);\n    c.fill();\n}\n\n/** Return the length of the text in the default 20px font, in px. */\nexport function measure_text(text: string): number {\n    const c = get_canvas();\n    if (c != null) {\n        const ctx = c.ctx;\n        if (ctx != null) {\n            ctx.font = '20px \"Times New Roman\", serif';\n            return ctx.measureText(text).width;\n        }\n    }\n    return 0;\n}\n\n/**\n * Replace all LaTeX greek letter shortcuts with their characters.\n * @returns Converted string.\n */\nexport function convert_latex_shortcuts(text: string) {\n    // html greek characters\n    for (let i = 0; i < greek_letter_names.length; i++) {\n        const name = greek_letter_names[i];\n        text = text.replace(new RegExp('\\\\\\\\' + name, 'g'), String.fromCharCode(913 + i + +(i > 16)));\n        text = text.replace(new RegExp('\\\\\\\\' + name.toLowerCase(), 'g'), String.fromCharCode(945 + i + +(i > 16)));\n    }\n\n    // subscripts\n    for (let i = 0; i < 10; i++) {\n        text = text.replace(new RegExp('_' + i, 'g'), String.fromCharCode(8320 + i));\n    }\n\n    return text;\n}\n\n/**\n * Convert text string to XML safe text.\n * @returns XML string.\n */\nexport function text_to_xml(text: string) {\n    text = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    let result = '';\n    for (let i = 0; i < text.length; i++) {\n        let c = text.charCodeAt(i);\n        if (c >= 0x20 && c <= 0x7E) {\n            result += text[i];\n        } else {\n            result += '&#' + c + ';';\n        }\n    }\n    return result;\n}","import { Component, ComponentChild, Fragment, h } from \"preact\";\nimport { mutate, subscribe } from \"../../store/store\";\nimport { open, redo, reset_camera, save_as, subset_construct, undo } from \"./actions\";\nimport { State, StateKey } from \"../../types\";\nimport { export_to_svg } from \"../../export_as/svg\";\nimport { export_to_latex } from \"../../export_as/latex\";\nimport { export_to_png } from \"../../export_as/png\";\n\ntype ActionProps = {\n    text: string,\n    icon: string,\n    handle_click: (state: State) => StateKey[] | undefined,\n};\n\nexport class ActionBar extends Component {\n    constructor() {\n        super();\n        subscribe(['can'], this);\n    }\n\n    render(): ComponentChild {\n        return (<>\n            <div>Actions:</div>\n            <div style='display: flex; flex-direction: row; flex-wrap: wrap;'>\n                <Action text='Undo' icon='' handle_click={undo} />\n                <Action text='Redo' icon='' handle_click={redo} />\n                <Action text='Subset Construction' icon='' handle_click={subset_construct} />\n                <Action text='Save' icon='' handle_click={save_as} />\n                <Action text='Load' icon='' handle_click={open} />\n                <Action text='Reset Cam' icon='' handle_click={reset_camera} />\n                <Action text='Save PNG' icon='' handle_click={export_to_png} />\n                <Action text='Save SVG' icon='' handle_click={export_to_svg} />\n                <Action text='Copy LaTeX' icon='' handle_click={export_to_latex} />\n            </div>\n        </>);\n    }\n}\n\nclass Action extends Component<ActionProps> {\n    constructor(props: ActionProps) {\n        super(props);\n    }\n\n    render(): ComponentChild {\n        return (\n            <div\n                onClick={e => mutate(this.props.handle_click)}\n\n            >{this.props.text}</div>\n        );\n    }\n}","export const NODE_RADIUS = 30;\nexport const SNAP_TO_PADDING = 6; // pixels\nexport const HIT_TARGET_PADDING = 6; // pixels\nexport const CANVAS_PADDING = 30;\nexport const CANVAS_SIZE = { x: 800, y: 600 };\nexport const STANDARD_COLOUR = 'black';\nexport const SELECTED_COLOUR = 'blue';\nexport const ACTIVE_COLOUR = 'green';\n","import { FSMLink } from \"../components/elements/abstract\";\nimport { NodeLink } from \"../components/elements/node_link\";\nimport { SelfLink } from \"../components/elements/self_link\";\nimport { StartLink } from \"../components/elements/start_link\";\nimport { StateNode } from \"../components/elements/state_node\";\nimport { Backup, BackupLink, BackupNode, CanvasJSON, FSMCanvasState, State, StateKey } from \"../types\";\n\n\n/**\n * Save the current canvas to localStorage.\n */\nexport function effect_save_backup(curr: State) {\n    if (typeof window != 'undefined')\n        if (localStorage && JSON)\n            localStorage['fsm'] = canvas_to_string(curr);\n}\n\n/**\n * Load the canvas from localStorage.\n */\nexport function restore_backup(state: State): StateKey[] | undefined {\n    if (typeof window != 'undefined') {\n        if (!localStorage || !JSON) {\n            return;\n        }\n\n        try {\n            const storage = localStorage.getItem(\"fsm\");\n            if (storage != null) {\n                const next_state = string_to_canvas(storage);\n                state.nodes = next_state.nodes;\n                state.links = next_state.links;\n            }\n\n        } catch (error) {\n            localStorage['fsm'] = \"\";\n        }\n\n        return ['nodes', 'links'];\n    }\n}\n\n/**\n * Get the node and link elements corresponding to the given json string.\n */\nexport function string_to_canvas(json: CanvasJSON): FSMCanvasState {\n    const nodes: StateNode[] = [];\n    const links: FSMLink[] = [];\n\n    if (!JSON) {\n        return { nodes, links };\n    }\n\n    const backup = JSON.parse(json);\n\n    for (let i = 0; i < backup.nodes.length; i++) {\n        const backupNode: BackupNode = backup.nodes[i];\n        const node = new StateNode(backupNode.x, backupNode.y);\n        node.isAcceptState = backupNode.isAcceptState;\n        node.text = backupNode.text;\n        nodes.push(node);\n    }\n\n    for (let i = 0; i < backup.links.length; i++) {\n        const backupLink: BackupLink = backup.links[i];\n        let link = null;\n        if (backupLink.type == 'SelfLink') {\n            link = new SelfLink(nodes[backupLink.node]);\n            link.anchorAngle = backupLink.anchorAngle;\n            link.text = backupLink.text;\n        } else if (backupLink.type == 'StartLink') {\n            link = new StartLink(nodes[backupLink.node]);\n            link.deltaX = backupLink.deltaX;\n            link.deltaY = backupLink.deltaY;\n            link.text = backupLink.text;\n        } else if (backupLink.type == 'NodeLink' || backupLink.type == 'Link') {\n            link = new NodeLink(nodes[backupLink.nodeA], nodes[backupLink.nodeB]);\n            link.parallelPart = backupLink.parallelPart;\n            link.perpendicularPart = backupLink.perpendicularPart;\n            link.text = backupLink.text;\n            link.lineAngleAdjust = backupLink.lineAngleAdjust;\n        }\n        if (link != null) {\n            links.push(link);\n        }\n    }\n\n    return { nodes, links };\n}\n\n/**\n * Convert the current canvas state to a JSON string.\n * @returns The string representation of the current canvas.\n */\nexport function canvas_to_string(state: State): CanvasJSON {\n    if (!JSON) {\n        return \"\";\n    }\n\n    const nodes = state.nodes;\n    const links = state.links;\n\n    const backup: Backup = {\n        nodes: [],\n        links: [],\n    };\n    for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        let backup_node = {\n            x: node.x,\n            y: node.y,\n            text: node.text,\n            isAcceptState: node.isAcceptState,\n        };\n        backup.nodes.push(backup_node);\n    }\n    for (let i = 0; i < links.length; i++) {\n        const link = links[i];\n        let backup_link: BackupLink | undefined = undefined;\n        if (link instanceof SelfLink) {\n            backup_link = {\n                type: 'SelfLink',\n                node: nodes.indexOf(link.node),\n                text: link.text,\n                anchorAngle: link.anchorAngle,\n            };\n        } else if (link instanceof StartLink) {\n            backup_link = {\n                type: 'StartLink',\n                node: nodes.indexOf(link.node),\n                text: link.text,\n                deltaX: link.deltaX,\n                deltaY: link.deltaY,\n            };\n        } else if (link instanceof NodeLink) {\n            backup_link = {\n                type: 'NodeLink',\n                nodeA: nodes.indexOf(link.nodeA),\n                nodeB: nodes.indexOf(link.nodeB),\n                text: link.text,\n                lineAngleAdjust: link.lineAngleAdjust,\n                parallelPart: link.parallelPart,\n                perpendicularPart: link.perpendicularPart,\n            };\n        }\n        if (backup_link != null) {\n            backup.links.push(backup_link);\n        }\n    }\n\n    return JSON.stringify(backup);\n}"],"sourceRoot":""}